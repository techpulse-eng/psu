{"version":3,"file":"Components_autocomplete_jsx.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":"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","sources":["webpack://materialui/./Components/autocomplete.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { FormContext } from './form';\r\nimport { withComponentFeatures } from 'universal-dashboard'\r\nimport throttle from 'lodash/throttle';\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport UDIcon from \"./icon\";\r\n\r\n\r\nconst UDAutocompleteWithContext = (props) => {\r\n  return (\r\n    <FormContext.Consumer>\r\n      {\r\n        ({ onFieldChange }) => <UDAutocomplete {...props} onFieldChange={onFieldChange} />\r\n      }\r\n    </FormContext.Consumer>\r\n  )\r\n}\r\n\r\nfunction UDAutocomplete(props) {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const onChange = (event, value) => {\r\n    props.onFieldChange({ id: props.id, value: value })\r\n    props.setState({ ...props, value: value })\r\n\r\n    if (props.onChange) {\r\n      props.onChange(value);\r\n    }\r\n\r\n    if (props.multiple) {\r\n      setInputValue('');\r\n    } else {\r\n      setInputValue(value);\r\n    }\r\n\r\n  }\r\n\r\n  var value = props.value;\r\n  if (!value && props.multiple) {\r\n    value = []\r\n  }\r\n\r\n  const onEnter = () => {\r\n    if (props.onEnter) {\r\n      props.onEnter();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.onFieldChange({ id: props.id, value: props.value })\r\n    return () => { }\r\n  }, true)\r\n\r\n  if (!props.onLoadOptions) {\r\n\r\n    return <Autocomplete\r\n      id={props.id}\r\n      onChange={onChange}\r\n      onKeyUp={(e) => e.key === \"Enter\" && onEnter()}\r\n      options={props.options}\r\n      getOptionLabel={(option) => option}\r\n      value={value}\r\n      disablePortal\r\n      fullWidth={props.fullWidth}\r\n      multiple={props.multiple}\r\n      renderInput={(params) => <TextField {...params} label={props.label} className={props.className} variant={props.variant} fullWidth InputProps={{\r\n        ...params.InputProps,\r\n        startAdornment: props.icon ? (\r\n          <InputAdornment position=\"start\">\r\n            <UDIcon {...props.icon} />\r\n          </InputAdornment>\r\n        ) : null,\r\n      }} />}\r\n    />\r\n  }\r\n\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const fetch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        props.onLoadOptions(request).then(callback);\r\n      }, 200),\r\n    [],\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (inputValue === '') {\r\n      setOptions([]);\r\n      return undefined;\r\n    }\r\n\r\n    fetch(inputValue, (results) => {\r\n      if (active) {\r\n\r\n        let json = JSON.parse(results);\r\n\r\n        if (!Array.isArray(json)) {\r\n          json = [json]\r\n        }\r\n\r\n        setOptions(json || []);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [inputValue, fetch]);\r\n\r\n  if ((value === '' && !Array.isArray(value)) || !value) {\r\n    value = []\r\n  }\r\n  else if (value && !Array.isArray(value)) {\r\n    value = [value]\r\n  }\r\n\r\n  return (\r\n    <Autocomplete\r\n      id={props.id}\r\n      options={options}\r\n      autoComplete\r\n      onChange={onChange}\r\n      onKeyUp={(e) => e.key === \"Enter\" && onEnter()}\r\n      inputValue={inputValue}\r\n      includeInputInList\r\n      value={value}\r\n      multiple={props.multiple}\r\n      fullWidth={props.fullWidth}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          onChange={(event) => setInputValue(event.target.value)}\r\n          label={props.label}\r\n          variant={props.variant}\r\n          fullWidth\r\n          InputProps={\r\n            {\r\n              ...params.InputProps,\r\n              startAdornment: !props.multiple && props.icon ? (\r\n                <InputAdornment position=\"start\">\r\n                  <UDIcon {...props.icon} />\r\n                </InputAdornment>\r\n              ) : params.InputProps.startAdornment,\r\n            }\r\n          }\r\n\r\n          className={props.className}\r\n        />\r\n      )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default withComponentFeatures(UDAutocompleteWithContext);"],"names":["React","useEffect","useState","TextField","Autocomplete","FormContext","withComponentFeatures","throttle","InputAdornment","UDIcon","UDAutocompleteWithContext","props","onFieldChange","UDAutocomplete","inputValue","setInputValue","onChange","event","value","id","setState","multiple","onEnter","onLoadOptions","e","key","options","option","fullWidth","params","label","className","variant","InputProps","startAdornment","icon","setOptions","fetch","useMemo","request","callback","then","active","undefined","results","json","JSON","parse","Array","isArray","target"],"sourceRoot":""}
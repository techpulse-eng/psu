{"version":3,"file":"Components_grid-layout_jsx-data_image_svg_xml_base64_PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcv-a4b97b.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":"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","sources":["webpack://materialui/./Components/grid-layout.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\r\nimport copy from 'copy-to-clipboard'\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\nimport { withComponentFeatures } from 'universal-dashboard'\r\n\r\nrequire('react-grid-layout/css/styles.css');\r\nrequire('react-resizable/css/styles.css');\r\n\r\nconst UDGridLayout = (props) => {\r\n\r\n    const getFromLS = (key) => {\r\n        let ls = {};\r\n        if (global.localStorage) {\r\n            try {\r\n                ls = JSON.parse(global.localStorage.getItem(key)) || {};\r\n            } catch (e) {\r\n                /*Ignore*/\r\n            }\r\n        }\r\n        return ls;\r\n    }\r\n\r\n    const saveToLS = (key, value) => {\r\n        if (global.localStorage) {\r\n            console.log(\"save\");\r\n            console.log(value);\r\n            global.localStorage.setItem(\r\n                key,\r\n                JSON.stringify(value)\r\n            );\r\n        }\r\n    }\r\n\r\n    var defaultLayouts = []\r\n\r\n    // Layout passed as props\r\n    if (props.layout) {\r\n        console.log('layout')\r\n        defaultLayouts = JSON.parse(props.layout)\r\n\r\n        if (!Array.isArray) {\r\n            defaultLayouts = []\r\n        } else {\r\n            saveToLS(\"uddesign\" + window.location.pathname, defaultLayouts)\r\n        }\r\n    }\r\n    // Layout saved in local storage\r\n    else if (props.persist) {\r\n        var jsonLayouts = getFromLS(\"uddesign\" + window.location.pathname);\r\n        if (jsonLayouts != null) {\r\n            defaultLayouts = JSON.parse(JSON.stringify(jsonLayouts))\r\n        }\r\n    }\r\n\r\n    const [layouts, setLayouts] = useState(defaultLayouts);\r\n\r\n    const onLayoutChange = (layout, layouts) => {\r\n        if (props.persist) {\r\n            saveToLS(\"uddesign\" + window.location.pathname, layouts);\r\n            setLayouts(layouts);\r\n        }\r\n\r\n        if (props.design) {\r\n            copy(JSON.stringify(layouts))\r\n        }\r\n    }\r\n\r\n    var children = props.children;\r\n    if (!Array.isArray(children)) {\r\n        children = [children];\r\n    }\r\n\r\n    var elements = children.map(x =>\r\n        <div key={\"grid-element-\" + x.id}>\r\n            {props.render(x)}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <ResponsiveReactGridLayout\r\n            layouts={layouts}\r\n            cols={props.cols}\r\n            rowHeight={props.rowHeight}\r\n            onLayoutChange={onLayoutChange}\r\n            measureBeforeMount={true}\r\n            isDraggable={props.isDraggable || props.design}\r\n            isResizable={props.isResizable || props.design}>\r\n            {elements}\r\n        </ResponsiveReactGridLayout>\r\n    )\r\n}\r\n\r\nexport default withComponentFeatures(UDGridLayout);"],"names":["React","useState","useEffect","WidthProvider","Responsive","copy","ResponsiveReactGridLayout","withComponentFeatures","require","UDGridLayout","props","getFromLS","key","ls","global","localStorage","JSON","parse","getItem","e","jsonLayouts","saveToLS","value","console","log","setItem","stringify","defaultLayouts","layout","Array","isArray","window","location","pathname","persist","layouts","setLayouts","children","elements","map","x","id","render","cols","rowHeight","onLayoutChange","design","isDraggable","isResizable"],"sourceRoot":""}
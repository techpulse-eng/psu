{"version":3,"file":"Components_slider_jsx.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,IAAMK,mBAAmB,GAAG,UAACC,KAAD,EAAW;AACnC,sBACI,iDAAC,uDAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AAAA,QAAEC,aAAF,QAAEA,aAAF;AAAA,wBAAqB,iDAAC,QAAD,oBAAcD,KAAd;AAAqB,mBAAa,EAAEC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArB;AAAA,GAFR,CADJ;AAOH,CARD;;AAUA,IAAMC,QAAQ,GAAG,UAACF,KAAD,EAAW;AAaxBL,EAAAA,gDAAS,CAAC,YAAM;AACZK,IAAAA,KAAK,CAACC,aAAN,CAAoB;AAACE,MAAAA,EAAE,EAAEH,KAAK,CAACG,EAAX;AAAeC,MAAAA,KAAK,EAAEJ,KAAK,CAACI;AAA5B,KAApB;AACA,WAAO,YAAM,CAAE,CAAf;AACH,GAHQ,EAGN,IAHM,CAAT;AAKA,sBAAO,iDAAC,4DAAD,oBAAYJ,KAAZ;AAAmB,qBAAiB,EAZjB,SAApBK,iBAAoB,CAACC,CAAD,EAAIF,KAAJ,EAAc;AACpC,UAAIJ,KAAK,CAACO,QAAV,EACA;AACIP,QAAAA,KAAK,CAACO,QAAN,CAAeH,KAAf;AACH;AACJ,KAOM;AAAyD,YAAQ,EAjBvD,SAAXG,QAAW,CAACD,CAAD,EAAIF,KAAJ,EAAc;AAC3BJ,MAAAA,KAAK,CAACQ,QAAN,CAAe;AAAEJ,QAAAA,KAAK,EAALA;AAAF,OAAf;AACAJ,MAAAA,KAAK,CAACC,aAAN,CAAoB;AAACE,QAAAA,EAAE,EAAEH,KAAK,CAACG,EAAX;AAAeC,QAAAA,KAAK,EAALA;AAAf,OAApB;AACH,KAcM;AAA6E,OAAG,EAAEJ,KAAK,CAACG,EAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAnBD;;AAqBA,iEAAeP,0EAAqB,CAACG,mBAAD,CAApC","sources":["webpack://materialui/./Components/slider.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport {withComponentFeatures} from 'universal-dashboard';\r\nimport Slider from '@mui/material/Slider';\r\nimport {FormContext} from './form';\r\n\r\nconst UDSliderWithContext = (props) => {\r\n    return (\r\n        <FormContext.Consumer>\r\n            {\r\n                ({onFieldChange}) => <UDSlider {...props} onFieldChange={onFieldChange} />\r\n            }\r\n        </FormContext.Consumer>\r\n    )\r\n}\r\n\r\nconst UDSlider = (props) => {\r\n    const onChange = (e, value) => {\r\n        props.setState({ value })\r\n        props.onFieldChange({id: props.id, value });\r\n    }\r\n\r\n    const onChangeCommitted = (e, value) => {\r\n        if (props.onChange)\r\n        {\r\n            props.onChange(value);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.onFieldChange({id: props.id, value: props.value });\r\n        return () => {}\r\n    }, true)\r\n\r\n    return <Slider {...props} onChangeCommitted={onChangeCommitted} onChange={onChange} key={props.id} />\r\n}\r\n\r\nexport default withComponentFeatures(UDSliderWithContext);"],"names":["React","useEffect","withComponentFeatures","Slider","FormContext","UDSliderWithContext","props","onFieldChange","UDSlider","id","value","onChangeCommitted","e","onChange","setState"],"sourceRoot":""}
{"version":3,"file":"vendors-node_modules_nivo_treemap_dist_nivo-treemap_esm_js.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":"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8C,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AACtM;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE,8DAAgB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS,oDAAM;AACf,SAAS,oDAAM;AACf,aAAa,oDAAM;AACnB,cAAc,oDAAM;AACpB,KAAK,EAAE,8DAAgB;AACvB;AACA;;AAEA,mCAAmC,gBAAgB,sBAAsB,OAAO,uDAAuD,mCAAmC,0DAA0D,sFAAsF,iEAAiE,MAAM,iCAAiC,8CAA8C,KAAK;AACrd,8CAA8C,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AACtM;AACA;AACA;AACA;AACA,SAAS,gDAAmB,CAAC,uDAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,QAAQ,wDAAe;AACvB,QAAQ,4DAAmB,EAAE,2DAAgB,EAAE,2DAAgB;AAC/D,WAAW,sEAA2B;AACtC,WAAW,sEAA2B;AACtC,GAAG;AACH,SAAS,sEAA2B;AACpC,WAAW,yDAAc;AACzB;AACA,2BAA2B,0DAAI;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAmB;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,gBAAgB,sBAAsB,OAAO,uDAAuD,mCAAmC,0DAA0D,sFAAsF,iEAAiE,MAAM,iCAAiC,8CAA8C,KAAK;AACrd,8CAA8C,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AACtM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,SAAS,gDAAmB,CAAC,iDAAS;AACtC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,gDAAmB,CAAC,kDAAU;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK,cAAc,gDAAmB;AACtC,aAAa,gDAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK,eAAe,gDAAmB,CAAC,0DAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAM;AACrB,eAAe,oDAAM;AACrB,mBAAmB,oDAAM;AACzB,oBAAoB,oDAAM;AAC1B,WAAW,EAAE,8DAAgB;AAC7B;AACA,OAAO;AACP,KAAK;AACL,aAAa,gDAAmB;AAChC;AACA;AACA,sBAAsB,kEAAoB;AAC1C,eAAe,gDAAmB;AAClC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,kDAAkD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,iCAAiC,kBAAkB;AACxR;AACA,SAAS,gDAAmB,CAAC,yDAAiB;AAC9C;AACA;AACA,WAAW,gDAAmB;AAC9B;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA,mCAAmC,gBAAgB,sBAAsB,OAAO,uDAAuD,mCAAmC,0DAA0D,sFAAsF,iEAAiE,MAAM,iCAAiC,8CAA8C,KAAK;AACrd,8CAA8C,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AACtM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,SAAS,gDAAmB,CAAC,iDAAS;AACtC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,gDAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK,cAAc,gDAAmB;AACtC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,aAAa,gDAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,KAAK,eAAe,gDAAmB,CAAC,0DAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAM;AACrB,eAAe,oDAAM;AACrB,mBAAmB,oDAAM;AACzB,oBAAoB,oDAAM;AAC1B,WAAW,EAAE,8DAAgB;AAC7B;AACA,OAAO;AACP,KAAK;AACL,aAAa,gDAAmB;AAChC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,sBAAsB,kEAAoB;AAC1C,eAAe,gDAAmB;AAClC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,kDAAkD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,iCAAiC,kBAAkB;AACxR;AACA,SAAS,gDAAmB,CAAC,yDAAiB;AAC9C;AACA;AACA,WAAW,gDAAmB;AAC9B;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA,wBAAwB,2EAA2E,kCAAkC,wBAAwB,OAAO,kCAAkC,mIAAmI;AACzU,kCAAkC;AAClC,8BAA8B;AAC9B,yCAAyC,eAAe,eAAe,gBAAgB,oBAAoB,MAAM,0CAA0C,+BAA+B,aAAa,qBAAqB,uCAAuC,cAAc,WAAW,YAAY,UAAU,MAAM,mDAAmD,UAAU,sBAAsB;AAC3Y,gCAAgC;AAChC,kDAAkD,0CAA0C;AAC5F,4CAA4C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD;AAC/P,8DAA8D,sEAAsE,8DAA8D;AAClM,kDAAkD,0EAA0E,eAAe;AAC3I,8BAA8B,gGAAgG,mDAAmD;AACjL,wCAAwC,uBAAuB,yFAAyF;AACxJ,2CAA2C,+DAA+D,6EAA6E,yEAAyE,eAAe,uDAAuD,GAAG;AACzU,iCAAiC,4EAA4E,iBAAiB,aAAa;AAC3I,8CAA8C,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AACtM;AACA;AACA,WAAW,0DAAc;AACzB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6DAAiB;AAClD;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAmB;AACzC;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6DAAiB;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4BAA4B,4DAAgB;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gDAAmB,CAAC,iDAAS;AAC1C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,eAAe,gDAAmB;AAClC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC,CAAC,4CAAS;AACX;AACA;AACA;AACA;;AAEA,wBAAwB,kDAAkD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,iCAAiC,kBAAkB;AACxR;AACA,SAAS,gDAAmB,CAAC,yDAAiB;AAC9C;AACA;AACA,WAAW,gDAAmB;AAC9B;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAE8T;;;;;;;;;;;;;;;;;AClzBvT;AACP;AACA;;AAEO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;ACPO;AACP;AACA;;AAEA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACRmC;AACE;AACI;AACa;;AAEtD,6BAAe,sCAAW;AAC1B,aAAa,oDAAQ;AACrB;AACA;AACA;AACA;AACA,qBAAqB,sDAAY;AACjC,mBAAmB,sDAAY;AAC/B,qBAAqB,sDAAY;AACjC,sBAAsB,sDAAY;AAClC,oBAAoB,sDAAY;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAS;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,uDAAQ;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,wDAAQ;AACpF;;AAEA;AACA;AACA;;AAEA;AACA,0EAA0E,wDAAQ;AAClF;;AAEA;AACA,4EAA4E,wDAAQ;AACpF;;AAEA;AACA,6EAA6E,wDAAQ;AACrF;;AAEA;AACA,2EAA2E,wDAAQ;AACnF;;AAEA;AACA;;;;;;;;;;;;;;;;AC7FA,6BAAe,oCAAS;AACxB;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA,gBAAgB,mBAAO,CAAC,yDAAc;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA;AACA,oBAAoB,QAAQ,IAAI,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack://materialui/./node_modules/@nivo/treemap/dist/nivo-treemap.esm.js","webpack://materialui/./node_modules/d3-hierarchy/src/accessors.js","webpack://materialui/./node_modules/d3-hierarchy/src/constant.js","webpack://materialui/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://materialui/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://materialui/./node_modules/lodash/cloneDeep.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { spring, TransitionMotion } from 'react-motion';\nimport { themePropType, treeMapTilePropType, defsPropTypes, noop, withHierarchy, withDimensions, withTheme, withMotion, getAccessorFor, getLabelGenerator, treeMapTileFromProp, bindDefs, Container, SvgWrapper, ResponsiveWrapper, getRelativeCursor, isCursorInRect, degreesToRadians } from '@nivo/core';\nimport { ordinalColorsPropType, colorPropertyAccessorPropType, inheritedColorPropType, getOrdinalColorScale, getInheritedColorGenerator, interpolateColor, getInterpolatedColor } from '@nivo/colors';\nimport PropTypes from 'prop-types';\nimport { treemap } from 'd3-hierarchy';\nimport cloneDeep from 'lodash/cloneDeep';\nimport compose from 'recompose/compose';\nimport defaultProps from 'recompose/defaultProps';\nimport withPropsOnChange from 'recompose/withPropsOnChange';\nimport pure from 'recompose/pure';\nimport { BasicTooltip } from '@nivo/tooltip';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nvar TreeMapNode = function TreeMapNode(_ref) {\n  var style = _ref.style,\n      node = _ref.node,\n      handlers = _ref.handlers,\n      theme = _ref.theme;\n  if (style.width <= 0 || style.height <= 0) return null;\n  var rotate = node.label && style.orientLabel && style.height > style.width;\n  return React.createElement(\"g\", {\n    transform: \"translate(\".concat(style.x, \",\").concat(style.y, \")\")\n  }, React.createElement(\"rect\", _extends({\n    width: style.width,\n    height: style.height,\n    fill: style.fill ? style.fill : style.color,\n    strokeWidth: style.borderWidth,\n    stroke: style.borderColor\n  }, handlers)), node.label && React.createElement(\"text\", {\n    textAnchor: \"middle\",\n    dominantBaseline: \"central\",\n    style: _objectSpread({}, theme.labels.text, {\n      fill: style.labelTextColor,\n      pointerEvents: 'none'\n    }),\n    transform: \"translate(\".concat(style.width / 2, \",\").concat(style.height / 2, \") rotate(\").concat(rotate ? -90 : 0, \")\")\n  }, node.label));\n};\nTreeMapNode.propTypes = {\n  node: PropTypes.object.isRequired,\n  style: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    labelTextColor: PropTypes.string.isRequired,\n    orientLabel: PropTypes.bool.isRequired\n  }).isRequired,\n  handlers: PropTypes.object.isRequired,\n  theme: themePropType.isRequired\n};\n\nfunction _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }\nvar TreeMapHtmlNode = function TreeMapHtmlNode(_ref) {\n  var node = _ref.node,\n      style = _ref.style,\n      handlers = _ref.handlers;\n  if (style.width <= 0 || style.height <= 0) return null;\n  var rotate = node.label && style.orientLabel && style.height > style.width;\n  return React.createElement(\"div\", _extends$1({\n    id: (node.data && node.data.id ? node.data.id :\n    node.id).replace(/[^\\w]/gi, '-'),\n    style: {\n      boxSizing: 'border-box',\n      position: 'absolute',\n      top: style.y,\n      left: style.x,\n      width: style.width,\n      height: style.height,\n      background: style.color,\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: style.borderWidth,\n      borderStyle: 'solid',\n      borderColor: style.borderColor\n    }\n  }, handlers), node.label !== false && React.createElement(\"span\", {\n    style: {\n      color: style.labelTextColor,\n      transform: \"rotate(\".concat(rotate ? '-90' : '0', \"deg)\"),\n      WebkitUserSelect: 'none',\n      MozUserSelect: 'none',\n      MsUserSelect: 'none',\n      userSelect: 'none'\n    }\n  }, node.label));\n};\nTreeMapHtmlNode.propTypes = {\n  node: PropTypes.object.isRequired,\n  style: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    labelTextColor: PropTypes.string.isRequired,\n    orientLabel: PropTypes.bool.isRequired\n  }).isRequired,\n  handlers: PropTypes.object.isRequired\n};\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty$1(target, key, source[key]); }); } return target; }\nfunction _defineProperty$1(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar commonPropTypes = {\n  identity: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  colors: ordinalColorsPropType.isRequired,\n  colorBy: colorPropertyAccessorPropType.isRequired,\n  leavesOnly: PropTypes.bool.isRequired,\n  tile: treeMapTilePropType.isRequired,\n  innerPadding: PropTypes.number.isRequired,\n  outerPadding: PropTypes.number.isRequired,\n  enableLabel: PropTypes.bool.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  labelFormat: PropTypes.string,\n  labelSkipSize: PropTypes.number.isRequired,\n  labelTextColor: inheritedColorPropType.isRequired,\n  orientLabel: PropTypes.bool.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: inheritedColorPropType.isRequired,\n  isInteractive: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  tooltip: PropTypes.func\n};\nvar TreeMapPropTypes = _objectSpread$1({}, commonPropTypes, {\n  nodeComponent: PropTypes.func.isRequired\n}, defsPropTypes);\nvar TreeMapHtmlPropTypes = _objectSpread$1({}, commonPropTypes, {\n  nodeComponent: PropTypes.func.isRequired\n});\nvar TreeMapCanvasPropTypes = _objectSpread$1({}, commonPropTypes, {\n  pixelRatio: PropTypes.number.isRequired\n});\nvar commonDefaultProps = {\n  identity: 'id',\n  tile: 'squarify',\n  leavesOnly: false,\n  colors: {\n    scheme: 'nivo'\n  },\n  colorBy: 'depth',\n  enableLabel: true,\n  label: 'id',\n  labelSkipSize: 0,\n  labelTextColor: {\n    from: 'color',\n    modifiers: [['darker', 1]]\n  },\n  orientLabel: true,\n  innerPadding: 0,\n  outerPadding: 0,\n  borderWidth: 0,\n  borderColor: {\n    from: 'color'\n  },\n  isInteractive: true,\n  onClick: noop\n};\nvar TreeMapDefaultProps = _objectSpread$1({}, commonDefaultProps, {\n  nodeComponent: TreeMapNode,\n  defs: [],\n  fill: []\n});\nvar TreeMapHtmlDefaultProps = _objectSpread$1({}, commonDefaultProps, {\n  nodeComponent: TreeMapHtmlNode\n});\nvar TreeMapCanvasDefaultProps = _objectSpread$1({}, commonDefaultProps, {\n  pixelRatio: global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1\n});\n\nvar props = /*#__PURE__*/Object.freeze({\n    TreeMapPropTypes: TreeMapPropTypes,\n    TreeMapHtmlPropTypes: TreeMapHtmlPropTypes,\n    TreeMapCanvasPropTypes: TreeMapCanvasPropTypes,\n    TreeMapDefaultProps: TreeMapDefaultProps,\n    TreeMapHtmlDefaultProps: TreeMapHtmlDefaultProps,\n    TreeMapCanvasDefaultProps: TreeMapCanvasDefaultProps\n});\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty$2(target, key, source[key]); }); } return target; }\nfunction _defineProperty$2(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar computeNodePath = function computeNodePath(node, getIdentity) {\n  return node.ancestors().map(function (ancestor) {\n    return getIdentity(ancestor.data);\n  }).join('.');\n};\nvar commonEnhancers = [withHierarchy(), withDimensions(), withTheme(), withMotion(), withPropsOnChange(['colors', 'colorBy'], function (_ref) {\n  var colors = _ref.colors,\n      colorBy = _ref.colorBy;\n  return {\n    getColor: getOrdinalColorScale(colors, colorBy)\n  };\n}), withPropsOnChange(['identity'], function (_ref2) {\n  var identity = _ref2.identity;\n  return {\n    getIdentity: getAccessorFor(identity)\n  };\n}), withPropsOnChange(['borderColor', 'theme'], function (_ref3) {\n  var borderColor = _ref3.borderColor,\n      theme = _ref3.theme;\n  return {\n    getBorderColor: getInheritedColorGenerator(borderColor, theme)\n  };\n}), withPropsOnChange(['label', 'labelFormat'], function (_ref4) {\n  var label = _ref4.label,\n      labelFormat = _ref4.labelFormat;\n  return {\n    getLabel: getLabelGenerator(label, labelFormat)\n  };\n}), withPropsOnChange(['labelTextColor', 'theme'], function (_ref5) {\n  var labelTextColor = _ref5.labelTextColor,\n      theme = _ref5.theme;\n  return {\n    getLabelTextColor: getInheritedColorGenerator(labelTextColor, theme)\n  };\n}), withPropsOnChange(['width', 'height', 'tile', 'innerPadding', 'outerPadding'], function (_ref6) {\n  var width = _ref6.width,\n      height = _ref6.height,\n      tile = _ref6.tile,\n      innerPadding = _ref6.innerPadding,\n      outerPadding = _ref6.outerPadding;\n  return {\n    treemap: treemap().size([width, height]).tile(treeMapTileFromProp(tile)).round(true).paddingInner(innerPadding).paddingOuter(outerPadding)\n  };\n}), withPropsOnChange(['root', 'treemap', 'leavesOnly', 'getIdentity', 'getColor'], function (_ref7) {\n  var _root = _ref7.root,\n      treemap = _ref7.treemap,\n      leavesOnly = _ref7.leavesOnly,\n      getIdentity = _ref7.getIdentity,\n      getColor = _ref7.getColor;\n  var root = cloneDeep(_root);\n  treemap(root);\n  var nodes = leavesOnly ? root.leaves() : root.descendants();\n  nodes = nodes.map(function (d) {\n    d.path = computeNodePath(d, getIdentity);\n    d.nodeHeight = d.height;\n    d.x = d.x0;\n    d.y = d.y0;\n    d.width = d.x1 - d.x0;\n    d.height = d.y1 - d.y0;\n    d.data.color = d.color = getColor(_objectSpread$2({}, d.data, {\n      depth: d.depth\n    }));\n    d.data.id = d.id = getIdentity(d.data);\n    d.data.value = d.value;\n    return d;\n  });\n  return {\n    nodes: nodes\n  };\n}), withPropsOnChange(['enableLabel', 'nodes', 'getLabel', 'labelSkipSize'], function (_ref8) {\n  var enableLabel = _ref8.enableLabel,\n      nodes = _ref8.nodes,\n      getLabel = _ref8.getLabel,\n      labelSkipSize = _ref8.labelSkipSize;\n  if (!enableLabel) return;\n  var nodesWithLabel = nodes.map(function (node) {\n    if (node.nodeHeight > 0 || labelSkipSize !== 0 && Math.min(node.width, node.height) <= labelSkipSize) return node;\n    return _objectSpread$2({}, node, {\n      label: getLabel(node.data)\n    });\n  });\n  return {\n    nodes: nodesWithLabel\n  };\n})];\nvar svgEnhancers = [withPropsOnChange(['nodes', 'defs', 'fill'], function (_ref9) {\n  var nodes = _ref9.nodes,\n      defs = _ref9.defs,\n      fill = _ref9.fill;\n  return {\n    defs: bindDefs(defs, nodes, fill, {\n      targetKey: 'fill'\n    })\n  };\n})];\nvar enhance = (function (Component) {\n  var implDefaultProps = props[\"\".concat(Component.displayName, \"DefaultProps\")];\n  switch (Component.displayName) {\n    case 'TreeMap':\n      return compose.apply(void 0, [defaultProps(implDefaultProps)].concat(commonEnhancers, svgEnhancers, [withMotion(), pure]))(Component);\n    case 'TreeMapHtml':\n      return compose.apply(void 0, [defaultProps(implDefaultProps)].concat(commonEnhancers, [withMotion(), pure]))(Component);\n    case 'TreeMapCanvas':\n      return compose.apply(void 0, [defaultProps(implDefaultProps)].concat(commonEnhancers, [pure]))(Component);\n  }\n  return Component;\n});\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } return target; }\nfunction _defineProperty$3(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar nodeWillEnter = function nodeWillEnter(_ref) {\n  var node = _ref.data;\n  return _objectSpread$3({\n    x: node.x,\n    y: node.y,\n    width: node.width,\n    height: node.height\n  }, interpolateColor(node.color));\n};\nvar nodeWillLeave = function nodeWillLeave(springConfig) {\n  return function (_ref2) {\n    var node = _ref2.data;\n    return _objectSpread$3({\n      x: spring(node.x + node.width / 2, springConfig),\n      y: spring(node.y + node.height / 2, springConfig),\n      width: spring(0, springConfig),\n      height: spring(0, springConfig)\n    }, interpolateColor(node.color, springConfig));\n  };\n};\n\nfunction _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty$4(target, key, source[key]); }); } return target; }\nfunction _defineProperty$4(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar TreeMapNodeTooltip = function TreeMapNodeTooltip(_ref) {\n  var node = _ref.node,\n      theme = _ref.theme,\n      tooltip = _ref.tooltip;\n  return React.createElement(BasicTooltip, {\n    id: node.id,\n    value: node.value,\n    enableChip: true,\n    color: node.color,\n    theme: theme,\n    renderContent: typeof tooltip === 'function' ? tooltip.bind(null, _objectSpread$4({\n      node: node\n    }, node)) : null\n  });\n};\nTreeMapNodeTooltip.propTypes = {\n  node: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    value: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired\n  }).isRequired,\n  theme: PropTypes.object.isRequired,\n  tooltip: PropTypes.func\n};\nvar TreeMapNodeTooltip$1 = pure(TreeMapNodeTooltip);\n\nvar getNodeHandlers = function getNodeHandlers(node, _ref) {\n  var isInteractive = _ref.isInteractive,\n      _onClick = _ref.onClick,\n      showTooltip = _ref.showTooltip,\n      hideTooltip = _ref.hideTooltip,\n      theme = _ref.theme,\n      tooltip = _ref.tooltip;\n  if (!isInteractive) return {};\n  var handleTooltip = function handleTooltip(e) {\n    showTooltip(React.createElement(TreeMapNodeTooltip$1, {\n      node: node,\n      theme: theme,\n      tooltip: tooltip\n    }), e);\n  };\n  return {\n    onMouseEnter: handleTooltip,\n    onMouseMove: handleTooltip,\n    onMouseLeave: hideTooltip,\n    onClick: function onClick(event) {\n      return _onClick(node, event);\n    }\n  };\n};\n\nfunction _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty$5(target, key, source[key]); }); } return target; }\nfunction _defineProperty$5(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar TreeMap = function TreeMap(_ref) {\n  var nodes = _ref.nodes,\n      nodeComponent = _ref.nodeComponent,\n      margin = _ref.margin,\n      outerWidth = _ref.outerWidth,\n      outerHeight = _ref.outerHeight,\n      theme = _ref.theme,\n      borderWidth = _ref.borderWidth,\n      getBorderColor = _ref.getBorderColor,\n      defs = _ref.defs,\n      getLabelTextColor = _ref.getLabelTextColor,\n      orientLabel = _ref.orientLabel,\n      animate = _ref.animate,\n      motionStiffness = _ref.motionStiffness,\n      motionDamping = _ref.motionDamping,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltipFormat = _ref.tooltipFormat,\n      tooltip = _ref.tooltip;\n  var springConfig = {\n    stiffness: motionStiffness,\n    damping: motionDamping\n  };\n  var getHandlers = function getHandlers(node, showTooltip, hideTooltip) {\n    return getNodeHandlers(node, {\n      isInteractive: isInteractive,\n      onClick: onClick,\n      showTooltip: showTooltip,\n      hideTooltip: hideTooltip,\n      theme: theme,\n      tooltipFormat: tooltipFormat,\n      tooltip: tooltip\n    });\n  };\n  return React.createElement(Container, {\n    isInteractive: isInteractive,\n    theme: theme,\n    animate: animate,\n    motionDamping: motionDamping,\n    motionStiffness: motionStiffness\n  }, function (_ref2) {\n    var showTooltip = _ref2.showTooltip,\n        hideTooltip = _ref2.hideTooltip;\n    return React.createElement(SvgWrapper, {\n      width: outerWidth,\n      height: outerHeight,\n      margin: margin,\n      defs: defs,\n      theme: theme\n    }, !animate && React.createElement(\"g\", null, nodes.map(function (node) {\n      return React.createElement(nodeComponent, {\n        key: node.path,\n        node: node,\n        style: {\n          fill: node.fill,\n          x: node.x0,\n          y: node.y0,\n          width: node.width,\n          height: node.height,\n          color: node.color,\n          borderWidth: borderWidth,\n          borderColor: getBorderColor(node),\n          labelTextColor: getLabelTextColor(node),\n          orientLabel: orientLabel\n        },\n        handlers: getHandlers(node, showTooltip, hideTooltip),\n        theme: theme\n      });\n    })), animate && React.createElement(TransitionMotion, {\n      willEnter: nodeWillEnter,\n      willLeave: nodeWillLeave(springConfig),\n      styles: nodes.map(function (node) {\n        return {\n          key: node.path,\n          data: node,\n          style: _objectSpread$5({\n            x: spring(node.x, springConfig),\n            y: spring(node.y, springConfig),\n            width: spring(node.width, springConfig),\n            height: spring(node.height, springConfig)\n          }, interpolateColor(node.color, springConfig))\n        };\n      })\n    }, function (interpolatedStyles) {\n      return React.createElement(\"g\", null, interpolatedStyles.map(function (_ref3) {\n        var style = _ref3.style,\n            node = _ref3.data;\n        style.color = getInterpolatedColor(style);\n        return React.createElement(nodeComponent, {\n          key: node.path,\n          node: node,\n          style: _objectSpread$5({}, style, {\n            fill: node.fill,\n            borderWidth: borderWidth,\n            borderColor: getBorderColor(style),\n            labelTextColor: getLabelTextColor(style),\n            orientLabel: orientLabel\n          }),\n          handlers: getHandlers(node, showTooltip, hideTooltip),\n          theme: theme\n        });\n      }));\n    }));\n  });\n};\nTreeMap.propTypes = TreeMapPropTypes;\nTreeMap.displayName = 'TreeMap';\nvar enhancedTreeMap = enhance(TreeMap);\nenhancedTreeMap.displayName = 'TreeMap';\n\nfunction _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }\nvar ResponsiveTreeMap = function ResponsiveTreeMap(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(enhancedTreeMap, _extends$2({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nfunction _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty$6(target, key, source[key]); }); } return target; }\nfunction _defineProperty$6(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar TreeMapHtml = function TreeMapHtml(_ref) {\n  var nodes = _ref.nodes,\n      nodeComponent = _ref.nodeComponent,\n      margin = _ref.margin,\n      outerWidth = _ref.outerWidth,\n      outerHeight = _ref.outerHeight,\n      theme = _ref.theme,\n      borderWidth = _ref.borderWidth,\n      getBorderColor = _ref.getBorderColor,\n      getLabelTextColor = _ref.getLabelTextColor,\n      orientLabel = _ref.orientLabel,\n      animate = _ref.animate,\n      motionStiffness = _ref.motionStiffness,\n      motionDamping = _ref.motionDamping,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltipFormat = _ref.tooltipFormat,\n      tooltip = _ref.tooltip;\n  var springConfig = {\n    stiffness: motionStiffness,\n    damping: motionDamping\n  };\n  var getHandlers = function getHandlers(node, showTooltip, hideTooltip) {\n    return getNodeHandlers(node, {\n      isInteractive: isInteractive,\n      onClick: onClick,\n      showTooltip: showTooltip,\n      hideTooltip: hideTooltip,\n      theme: theme,\n      tooltipFormat: tooltipFormat,\n      tooltip: tooltip\n    });\n  };\n  return React.createElement(Container, {\n    theme: theme,\n    animate: animate,\n    motionDamping: motionDamping,\n    motionStiffness: motionStiffness\n  }, function (_ref2) {\n    var showTooltip = _ref2.showTooltip,\n        hideTooltip = _ref2.hideTooltip;\n    return React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        width: outerWidth,\n        height: outerHeight\n      }\n    }, !animate && React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: margin.top,\n        left: margin.left\n      }\n    }, nodes.map(function (node) {\n      return React.createElement(nodeComponent, {\n        key: node.path,\n        node: node,\n        style: {\n          x: node.x,\n          y: node.y,\n          width: node.width,\n          height: node.height,\n          color: node.color,\n          borderWidth: borderWidth,\n          borderColor: getBorderColor(node),\n          labelTextColor: getLabelTextColor(node),\n          orientLabel: orientLabel\n        },\n        handlers: getHandlers(node, showTooltip, hideTooltip)\n      });\n    })), animate && React.createElement(TransitionMotion, {\n      willEnter: nodeWillEnter,\n      willLeave: nodeWillLeave(springConfig),\n      styles: nodes.map(function (node) {\n        return {\n          key: node.path,\n          data: node,\n          style: _objectSpread$6({\n            x: spring(node.x, springConfig),\n            y: spring(node.y, springConfig),\n            width: spring(node.width, springConfig),\n            height: spring(node.height, springConfig)\n          }, interpolateColor(node.color, springConfig))\n        };\n      })\n    }, function (interpolatedStyles) {\n      return React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: margin.top,\n          left: margin.left\n        }\n      }, interpolatedStyles.map(function (_ref3) {\n        var style = _ref3.style,\n            node = _ref3.data;\n        style.color = getInterpolatedColor(style);\n        return React.createElement(nodeComponent, {\n          key: node.path,\n          node: node,\n          style: _objectSpread$6({}, style, {\n            fill: node.fill,\n            borderWidth: borderWidth,\n            borderColor: getBorderColor(style),\n            labelTextColor: getLabelTextColor(style),\n            orientLabel: orientLabel\n          }),\n          handlers: getHandlers(node, showTooltip, hideTooltip)\n        });\n      }));\n    }));\n  });\n};\nTreeMapHtml.propTypes = TreeMapHtmlPropTypes;\nTreeMapHtml.displayName = 'TreeMapHtml';\nvar enhancedTreeMapHtml = enhance(TreeMapHtml);\nenhancedTreeMapHtml.displayName = 'TreeMapHtml';\n\nfunction _extends$3() { _extends$3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3.apply(this, arguments); }\nvar ResponsiveTreeMapHtml = function ResponsiveTreeMapHtml(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(enhancedTreeMapHtml, _extends$3({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _defineProperty$7(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar findNodeUnderCursor = function findNodeUnderCursor(nodes, margin, x, y) {\n  return nodes.find(function (node) {\n    return isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y);\n  });\n};\nvar TreeMapCanvas =\nfunction (_Component) {\n  _inherits(TreeMapCanvas, _Component);\n  function TreeMapCanvas() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, TreeMapCanvas);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TreeMapCanvas)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty$7(_assertThisInitialized(_this), \"handleMouseHover\", function (showTooltip, hideTooltip) {\n      return function (event) {\n        var _this$props = _this.props,\n            isInteractive = _this$props.isInteractive,\n            nodes = _this$props.nodes,\n            margin = _this$props.margin,\n            theme = _this$props.theme;\n        if (!isInteractive) return;\n        var _getRelativeCursor = getRelativeCursor(_this.surface, event),\n            _getRelativeCursor2 = _slicedToArray(_getRelativeCursor, 2),\n            x = _getRelativeCursor2[0],\n            y = _getRelativeCursor2[1];\n        var node = findNodeUnderCursor(nodes, margin, x, y);\n        if (node !== undefined) {\n          showTooltip(React.createElement(TreeMapNodeTooltip$1, {\n            node: node,\n            theme: theme\n          }), event);\n        } else {\n          hideTooltip();\n        }\n      };\n    });\n    _defineProperty$7(_assertThisInitialized(_this), \"handleMouseLeave\", function (hideTooltip) {\n      return function () {\n        hideTooltip();\n      };\n    });\n    _defineProperty$7(_assertThisInitialized(_this), \"handleClick\", function (event) {\n      var _this$props2 = _this.props,\n          isInteractive = _this$props2.isInteractive,\n          nodes = _this$props2.nodes,\n          margin = _this$props2.margin,\n          onClick = _this$props2.onClick;\n      if (!isInteractive) return;\n      var _getRelativeCursor3 = getRelativeCursor(_this.surface, event),\n          _getRelativeCursor4 = _slicedToArray(_getRelativeCursor3, 2),\n          x = _getRelativeCursor4[0],\n          y = _getRelativeCursor4[1];\n      var node = findNodeUnderCursor(nodes, margin, x, y);\n      if (node !== undefined) onClick(node, event);\n    });\n    return _this;\n  }\n  _createClass(TreeMapCanvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.ctx = this.surface.getContext('2d');\n      this.draw(this.props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.ctx = this.surface.getContext('2d');\n      this.draw(this.props);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(props) {\n      var _this2 = this;\n      var nodes = props.nodes,\n          pixelRatio = props.pixelRatio,\n          margin = props.margin,\n          outerWidth = props.outerWidth,\n          outerHeight = props.outerHeight,\n          borderWidth = props.borderWidth,\n          getBorderColor = props.getBorderColor,\n          enableLabel = props.enableLabel,\n          getLabelTextColor = props.getLabelTextColor,\n          orientLabel = props.orientLabel,\n          theme = props.theme;\n      this.surface.width = outerWidth * pixelRatio;\n      this.surface.height = outerHeight * pixelRatio;\n      this.ctx.scale(pixelRatio, pixelRatio);\n      this.ctx.fillStyle = theme.background;\n      this.ctx.fillRect(0, 0, outerWidth, outerHeight);\n      this.ctx.translate(margin.left, margin.top);\n      nodes.forEach(function (node) {\n        _this2.ctx.fillStyle = node.color;\n        _this2.ctx.fillRect(node.x, node.y, node.width, node.height);\n        if (borderWidth > 0) {\n          _this2.ctx.strokeStyle = getBorderColor(node);\n          _this2.ctx.lineWidth = borderWidth;\n          _this2.ctx.strokeRect(node.x, node.y, node.width, node.height);\n        }\n      });\n      if (enableLabel) {\n        this.ctx.textAlign = 'center';\n        this.ctx.textBaseline = 'middle';\n        this.ctx.font = \"\".concat(theme.labels.text.fontSize, \"px \").concat(theme.labels.text.fontFamily);\n        nodes.filter(function (_ref) {\n          var label = _ref.label;\n          return label !== undefined;\n        }).forEach(function (node) {\n          var labelTextColor = getLabelTextColor(node);\n          var rotate = orientLabel && node.height > node.width;\n          _this2.ctx.save();\n          _this2.ctx.translate(node.x + node.width / 2, node.y + node.height / 2);\n          _this2.ctx.rotate(degreesToRadians(rotate ? -90 : 0));\n          _this2.ctx.fillStyle = labelTextColor;\n          _this2.ctx.fillText(node.label, 0, 0);\n          _this2.ctx.restore();\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$props3 = this.props,\n          outerWidth = _this$props3.outerWidth,\n          outerHeight = _this$props3.outerHeight,\n          pixelRatio = _this$props3.pixelRatio,\n          isInteractive = _this$props3.isInteractive,\n          theme = _this$props3.theme;\n      return React.createElement(Container, {\n        isInteractive: isInteractive,\n        theme: theme,\n        animate: false\n      }, function (_ref2) {\n        var showTooltip = _ref2.showTooltip,\n            hideTooltip = _ref2.hideTooltip;\n        return React.createElement(\"canvas\", {\n          ref: function ref(surface) {\n            _this3.surface = surface;\n          },\n          width: outerWidth * pixelRatio,\n          height: outerHeight * pixelRatio,\n          style: {\n            width: outerWidth,\n            height: outerHeight\n          },\n          onMouseEnter: _this3.handleMouseHover(showTooltip, hideTooltip),\n          onMouseMove: _this3.handleMouseHover(showTooltip, hideTooltip),\n          onMouseLeave: _this3.handleMouseLeave(hideTooltip),\n          onClick: _this3.handleClick\n        });\n      });\n    }\n  }]);\n  return TreeMapCanvas;\n}(Component);\nTreeMapCanvas.propTypes = TreeMapCanvasPropTypes;\nTreeMapCanvas.displayName = 'TreeMapCanvas';\nvar enhancedTreeMapCanvas = enhance(TreeMapCanvas);\nenhancedTreeMapCanvas.displayName = 'TreeMapCanvas';\n\nfunction _extends$4() { _extends$4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4.apply(this, arguments); }\nvar ResponsiveTreeMapCanvas = function ResponsiveTreeMapCanvas(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(enhancedTreeMapCanvas, _extends$4({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { ResponsiveTreeMap, ResponsiveTreeMapCanvas, ResponsiveTreeMapHtml, enhancedTreeMap as TreeMap, enhancedTreeMapCanvas as TreeMapCanvas, TreeMapCanvasDefaultProps, TreeMapCanvasPropTypes, TreeMapDefaultProps, enhancedTreeMapHtml as TreeMapHtml, TreeMapHtmlDefaultProps, TreeMapHtmlPropTypes, TreeMapPropTypes };\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n"],"names":[],"sourceRoot":""}
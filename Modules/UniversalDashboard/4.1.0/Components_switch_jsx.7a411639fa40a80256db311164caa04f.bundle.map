{"version":3,"file":"Components_switch_jsx.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAMM,mBAAmB,GAAG,UAACC,KAAD,EAAW;AACnC,sBACI,iDAAC,uDAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AAAA,QAAGC,aAAH,QAAGA,aAAH;AAAA,wBAAuB,iDAAC,QAAD,oBAAcD,KAAd;AAAqB,mBAAa,EAAEC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB;AAAA,GAFR,CADJ;AAOH,CARD;;AAUA,IAAMC,QAAQ,GAAG,UAACF,KAAD,EAAW;AAExB,MAAMG,SAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxBJ,IAAAA,KAAK,CAACC,aAAN,CAAoB;AAAEI,MAAAA,EAAE,EAAEL,KAAK,CAACK,EAAZ;AAAgBC,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAApC,KAApB;AACAR,IAAAA,KAAK,CAACS,QAAN,CAAe;AAAED,MAAAA,OAAO,EAAEJ,KAAK,CAACG,MAAN,CAAaC;AAAxB,KAAf;;AAEA,QAAIR,KAAK,CAACG,QAAV,EAAoB;AAChBH,MAAAA,KAAK,CAACG,QAAN,CAAeC,KAAK,CAACG,MAAN,CAAaC,OAA5B;AACH;AACJ,GAPD;;AASAd,EAAAA,gDAAS,CAAC,YAAM;AACZM,IAAAA,KAAK,CAACC,aAAN,CAAoB;AAAEI,MAAAA,EAAE,EAAEL,KAAK,CAACK,EAAZ;AAAgBC,MAAAA,KAAK,EAAEN,KAAK,CAACQ;AAA7B,KAApB;AACA,WAAO,YAAM,CAAG,CAAhB;AACH,GAHQ,EAGN,IAHM,CAAT;AAKA,MAAME,OAAO,gBAAG,iDAAC,4DAAD;AACZ,aAAS,EAAEV,KAAK,CAACW,SADL;AAEZ,SAAK,EAAEX,KAAK,CAACY,KAFD;AAGZ,OAAG,EAAEZ,KAAK,CAACa,GAHC;AAIZ,MAAE,EAAEb,KAAK,CAACK,EAJE;AAKZ,WAAO,EAAEL,KAAK,CAACQ,OALH;AAMZ,YAAQ,EAAE,kBAAAJ,KAAK;AAAA,aAAID,SAAQ,CAACC,KAAD,CAAZ;AAAA,KANH;AAOZ,YAAQ,EAAEJ,KAAK,CAACc,QAPJ;AAQZ,QAAI,EAAEd,KAAK,CAACe,IARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB;AAWA,SAAOf,KAAK,CAACgB,YAAN,IAAsBhB,KAAK,CAACiB,cAA5B,IAA8CjB,KAAK,CAACkB,KAApD,gBACH,iDAAC,0DAAD;AAAM,aAAS,EAAC,OAAhB;AAAwB,aAAS,MAAjC;AAAkC,cAAU,EAAC,QAA7C;AAAsD,WAAO,EAAE,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,iDAAC,0DAAD;AAAM,QAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYlB,KAAK,CAACiB,cAAlB,CADJ,eAEI,iDAAC,0DAAD;AAAM,QAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,OADL,CAFJ,eAKI,iDAAC,0DAAD;AAAM,QAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYV,KAAK,CAACgB,YAAN,IAAsBhB,KAAK,CAACkB,KAAxC,CALJ,CADG,GAQHR,OARJ;AASH,CApCD;;AAsCA,iEAAeb,0EAAqB,CAACE,mBAAD,CAApC","sources":["webpack://materialui/./Components/switch.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport Grid from '@mui/material/Grid';\r\nimport { withComponentFeatures } from 'universal-dashboard';\r\nimport { FormContext } from './form';\r\n\r\nconst UDSwitchWithContext = (props) => {\r\n    return (\r\n        <FormContext.Consumer>\r\n            {\r\n                ({ onFieldChange }) => <UDSwitch {...props} onFieldChange={onFieldChange} />\r\n            }\r\n        </FormContext.Consumer>\r\n    )\r\n}\r\n\r\nconst UDSwitch = (props) => {\r\n\r\n    const onChange = (event) => {\r\n        props.onFieldChange({ id: props.id, value: event.target.checked })\r\n        props.setState({ checked: event.target.checked });\r\n\r\n        if (props.onChange) {\r\n            props.onChange(event.target.checked)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.onFieldChange({ id: props.id, value: props.checked });\r\n        return () => { }\r\n    }, true)\r\n\r\n    const switchC = <Switch\r\n        className={props.className}\r\n        color={props.color}\r\n        key={props.key}\r\n        id={props.id}\r\n        checked={props.checked}\r\n        onChange={event => onChange(event)}\r\n        disabled={props.disabled}\r\n        size={props.size}\r\n    />\r\n\r\n    return props.checkedLabel || props.uncheckedLabel || props.label ? (\r\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n            <Grid item>{props.uncheckedLabel}</Grid>\r\n            <Grid item>\r\n                {switchC}\r\n            </Grid>\r\n            <Grid item>{props.checkedLabel || props.label}</Grid>\r\n        </Grid>\r\n    ) : switchC\r\n}\r\n\r\nexport default withComponentFeatures(UDSwitchWithContext);\r\n\r\n"],"names":["React","useEffect","Switch","Grid","withComponentFeatures","FormContext","UDSwitchWithContext","props","onFieldChange","UDSwitch","onChange","event","id","value","target","checked","setState","switchC","className","color","key","disabled","size","checkedLabel","uncheckedLabel","label"],"sourceRoot":""}
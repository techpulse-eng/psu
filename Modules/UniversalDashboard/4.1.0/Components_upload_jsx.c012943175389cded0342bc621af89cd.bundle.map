{"version":3,"file":"Components_upload_jsx.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":"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","sources":["webpack://materialui/./Components/upload.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport { withComponentFeatures } from 'universal-dashboard'\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { FormContext } from './form';\r\nimport { Typography } from '@mui/material';\r\nimport { getDashboardId } from './../app/config.jsx'\r\n\r\nconst dashboardId = getDashboardId();\r\n\r\nconst UDUploadWithContext = (props) => {\r\n  return (\r\n    <FormContext.Consumer>\r\n      {\r\n        ({ onFieldChange }) => <UDUpload {...props} onFieldChange={onFieldChange} />\r\n      }\r\n    </FormContext.Consumer>\r\n  )\r\n}\r\n\r\n\r\nconst UDUpload = props => {\r\n  const [loading, setLoading] = useState(false);\r\n  const inputEl = useRef(null);\r\n  const [file, setFile] = useState('');\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const handleUpload = (e) => {\r\n    var file = inputEl.current.files[0];\r\n    const filename = file.name;\r\n    const chunkSize = 1024 * 1024 * 5;\r\n\r\n    setFile(filename);\r\n\r\n    var numberofChunks = Math.ceil(file.size / chunkSize);\r\n    var start = 0;\r\n    var chunkCounter = 0;\r\n    var fileId = \"\";\r\n    var chunkEnd = start + chunkSize;\r\n\r\n    function createChunk(start, end) {\r\n      chunkCounter++;\r\n      chunkEnd = Math.min(start + chunkSize, file.size);\r\n      const chunk = file.slice(start, chunkEnd);\r\n      const chunkForm = new FormData();\r\n      chunkForm.append('file', chunk, filename);\r\n      uploadChunk(chunkForm, start, chunkEnd);\r\n    }\r\n\r\n    function updateProgress(oEvent) {\r\n      if (oEvent.lengthComputable) {\r\n        var percentComplete = Math.round(oEvent.loaded / oEvent.total * 100);\r\n        var totalPercentComplete = Math.round((chunkCounter - 1) / numberofChunks * 100 + percentComplete / numberofChunks);\r\n        setProgress(totalPercentComplete);\r\n      }\r\n    }\r\n\r\n    function uploadChunk(chunkForm, start, chunkEnd) {\r\n      var oReq = new XMLHttpRequest();\r\n      oReq.upload.addEventListener(\"progress\", updateProgress);\r\n      oReq.open('post', '/api/internal/component/upload', true);\r\n      oReq.setRequestHeader('dashboardid', dashboardId);\r\n      if (fileId.length > 0) {\r\n        oReq.setRequestHeader('fileid', fileId);\r\n      }\r\n      oReq.withCredentials = true;\r\n\r\n      var blobEnd = chunkEnd - 1;\r\n      var contentRange = \"bytes \" + start + \"-\" + blobEnd + \"/\" + file.size;\r\n      oReq.setRequestHeader(\"Content-Range\", contentRange);\r\n      console.log(\"Content-Range\", contentRange);\r\n\r\n      oReq.onload = function (oEvent) {\r\n        var resp = JSON.parse(oReq.response)\r\n        fileId = resp[0];\r\n        start += chunkSize;\r\n        if (start < file.size) {\r\n          createChunk(start);\r\n        }\r\n        else {\r\n          var response = resp.map(x => `file:${x}`)[0];\r\n          props.setState({\r\n            value: response\r\n          })\r\n          props.onFieldChange({ id: props.id, value: response });\r\n\r\n          if (props.onUpload) {\r\n            props.onUpload(response);\r\n          }\r\n\r\n          setLoading(false);\r\n        }\r\n      };\r\n      oReq.send(chunkForm);\r\n    }\r\n\r\n    createChunk(start);\r\n\r\n    setLoading(true);\r\n  }\r\n\r\n  return (\r\n    <div sx={{ m: 1 }} className={props.className}>\r\n      <input\r\n        accept={props.accept}\r\n        id={props.id}\r\n        type=\"file\"\r\n        ref={inputEl}\r\n        multiple={props.multiple}\r\n        onChange={handleUpload}\r\n        style={{ display: \"none\" }}\r\n      />\r\n      <label htmlFor={props.id}>\r\n        <Button\r\n          variant={props.variant}\r\n          color={props.color}\r\n          sx={{ bg: 'primary', color: 'text' }}\r\n          component=\"span\"\r\n          disabled={loading}\r\n        >\r\n          <Typography>{props.text}</Typography>\r\n        </Button>\r\n        {loading && <LinearProgress variant=\"determinate\" value={progress} />}\r\n        {file && <Typography>{file}</Typography>}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withComponentFeatures(UDUploadWithContext)"],"names":["React","useState","useRef","Button","withComponentFeatures","LinearProgress","FormContext","Typography","getDashboardId","dashboardId","UDUploadWithContext","props","onFieldChange","UDUpload","loading","setLoading","inputEl","file","setFile","progress","setProgress","m","className","accept","id","multiple","handleUpload","current","files","filename","name","chunkSize","numberofChunks","Math","ceil","size","start","chunkCounter","fileId","chunkEnd","createChunk","min","chunk","slice","chunkForm","FormData","append","uploadChunk","updateProgress","oEvent","percentComplete","totalPercentComplete","lengthComputable","round","loaded","total","oReq","XMLHttpRequest","upload","addEventListener","open","setRequestHeader","length","withCredentials","contentRange","console","log","onload","resp","JSON","parse","response","map","x","setState","value","onUpload","send","display","variant","color","bg","text"],"sourceRoot":""}
{"version":3,"file":"Components_map_map_jsx.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":"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","sources":["webpack://materialui/./Components/map/map.jsx","webpack://materialui/./Components/map/utils.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Map, ScaleControl } from 'react-leaflet';\r\nimport { css } from 'glamor-jss';\r\nimport { isGuid } from './utils';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport min from 'lodash.min';\r\nimport max from 'lodash.max';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nexport default class UDMap extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      latitude: props.latitude,\r\n      longitude: props.longitude,\r\n      zoom: props.zoom,\r\n      features: [],\r\n      loading: true,\r\n      bounds: null\r\n    }\r\n  }\r\n\r\n  onIncomingEvent(eventName, event) {\r\n    if (event.type === \"setState\") {\r\n      this.setState({ ...event.state.attributes })\r\n    }\r\n    else if (event.type === \"requestState\") {\r\n      UniversalDashboard.post(`/api/internal/component/element/sessionState/${event.requestId}`, {\r\n        attributes: {\r\n          bounds: this.map.leafletElement.getBounds(),\r\n          zoom: this.state.zoom,\r\n          latitude: this.state.latitude,\r\n          longitude: this.state.longitude\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onReportBounds(bounds) {\r\n\r\n    if ((this.props.latitude && this.props.longitude) || !bounds) {\r\n      return;\r\n    }\r\n\r\n    if (bounds.getNorth) {\r\n      try {\r\n        bounds = [\r\n          [bounds.getNorth(), bounds.getEast()],\r\n          [bounds.getSouth(), bounds.getWest()]\r\n        ]\r\n      }\r\n      catch {\r\n        return\r\n      }\r\n    }\r\n\r\n    const currentBounds = this.state.bounds;\r\n\r\n    if (this.state.bounds) {\r\n      const newBounds = [\r\n        [max(currentBounds[0][0], bounds[0][0]), max(currentBounds[0][1], bounds[0][1])],\r\n        [min(currentBounds[1][0], bounds[1][0]), min(currentBounds[1][1], bounds[1][1])]\r\n      ]\r\n      this.setState({\r\n        bounds: newBounds\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        bounds\r\n      })\r\n    }\r\n  }\r\n\r\n  loadMapData() {\r\n    UniversalDashboard.get(\"/api/internal/component/element/\" + this.props.id, function (data) {\r\n\r\n      if (data.error) {\r\n        this.setState({\r\n          error: data.error.message\r\n        })\r\n      } else {\r\n        this.setState({\r\n          features: data,\r\n          loading: false\r\n        })\r\n      }\r\n\r\n    }.bind(this))\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.loadMapData();\r\n    this.className = css({ height: this.props.height, width: this.props.width });\r\n    if (!isGuid(this.props.id)) {\r\n      this.pubSubToken = UniversalDashboard.subscribe(this.props.id, this.onIncomingEvent.bind(this));\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.error) {\r\n      return <div>{this.state.error}</div>\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <div>Loading...</div>\r\n    }\r\n\r\n    const position = [this.state.latitude, this.state.longitude];\r\n\r\n    var features = this.state.features.map(x => {\r\n      x.onReportBounds = this.onReportBounds.bind(this);\r\n      return UniversalDashboard.renderComponent(x);\r\n    });\r\n\r\n    if (this.props.scaleControlPosition !== 'none') {\r\n      features.push(<ScaleControl position={this.props.scaleControlPosition} />);\r\n    }\r\n\r\n\r\n    var additionalProps = {\r\n    }\r\n\r\n    if (this.state.bounds) {\r\n      additionalProps['bounds'] = this.state.bounds;\r\n    }\r\n\r\n    return [\r\n      <style dangerouslySetInnerHTML={{\r\n        __html: `\r\n          .leaflet-control-layers-toggle {\r\n            background-image: url(${require('leaflet/dist/images/layers.png')});\r\n            width: 36px;\r\n            height: 36px;\r\n          }\r\n\r\n          .leaflet-retina .leaflet-control-layers-toggle {\r\n            background-image: url(${require('leaflet/dist/images/layers-2x.png')});\r\n            background-size: 26px 26px;\r\n          }\r\n\r\n\r\n          `}} />,\r\n      <Map id={this.props.id} {...additionalProps} ref={x => this.map = x} className=\"markercluster-map\" maxZoom={this.props.maxZoom} center={position} zoom={this.state.zoom} className={this.className} animate={this.props.animate}>\r\n        {features}\r\n      </Map>\r\n    ]\r\n  }\r\n}","export function isGuid(str) {\r\n    if (str == null) { return false }\r\n\r\n    if (str[0] === \"{\") \r\n    {\r\n        str = str.substring(1, str.length - 1);\r\n    }\r\n    var regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r\n    var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n    return regexGuid.test(str);\r\n}"],"names":["React","Map","ScaleControl","css","isGuid","L","min","max","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","UDMap","props","state","latitude","longitude","zoom","features","loading","bounds","eventName","event","type","setState","attributes","UniversalDashboard","post","requestId","map","leafletElement","getBounds","getNorth","getEast","getSouth","getWest","currentBounds","newBounds","get","id","data","error","message","bind","loadMapData","className","height","width","pubSubToken","subscribe","onIncomingEvent","position","x","onReportBounds","renderComponent","scaleControlPosition","push","additionalProps","__html","maxZoom","animate","Component","str","substring","length","regexGuid","test"],"sourceRoot":""}
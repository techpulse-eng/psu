{"version":3,"file":"Components_code-editor_jsx-data_image_png_base64_iVBORw0KGgoAAAANSUhEUgAAAAQAAAAECAYAAACp8Z5_-0a5419.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIO,MAAJ;;AAEA,IAAMC,cAAc,GAAG,UAAAC,KAAK,EAAI;AAC9B,MAAMC,QAAQ,GAAG,UAACC,QAAD,EAAc;AAC7BF,IAAAA,KAAK,CAACG,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEF;AAAR,KAAf;AACD,GAFD;;AAIA,MAAMG,cAAc,GAAG,UAACP,MAAD,EAAoB;AACzCA,IAAAA,MAAM,GAAGA,MAAT;;AACA,QAAIE,KAAK,CAACM,OAAV,EAAmB;AACjBR,MAAAA,MAAM,CAACS,SAAP,GAAmB,UAACC,CAAD,EAAO;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,YAAIA,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACI,OAAF,KAAcrB,wDAA/B,EAA8C;AAC5CiB,UAAAA,CAAC,CAACM,cAAF;AACAjB,UAAAA,kDAAM,CAAC,IAAIkB,IAAJ,CAAS,CAACf,KAAK,CAACI,IAAP,CAAT,EAAuB;AAAEY,YAAAA,IAAI,EAAE;AAAR,WAAvB,CAAD,YAAoDhB,KAAK,CAACiB,EAA1D,cAAgEjB,KAAK,CAACkB,SAAtE,EAAN;AACD;AACF,OAND;AAOD;AACF,GAXD;;AAaA,MAAMC,QAAQ,GAAG,YAAM;AACrB,QAAIrB,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACsB,MAAP;AACD;AACF,GAJD;;AAMA,MAAIC,OAAO,GAAGrB,KAAK,CAACsB,QAAN,gBAEZ,iDAAC,iEAAD;AACE,MAAE,EAAEtB,KAAK,CAACiB,EADZ;AAEE,YAAQ,EAAEjB,KAAK,CAACuB,QAFlB;AAGE,SAAK,EAAEvB,KAAK,CAACwB,KAHf;AAIE,SAAK,EAAExB,KAAK,CAACI,IAJf;AAKE,YAAQ,EAAEJ,KAAK,CAACsB,QALlB;AAME,WAAO,EAAEtB,KANX;AAOE,UAAM,EAAEA,KAAK,CAACyB,MAPhB;AAQE,SAAK,EAAEzB,KAAK,CAAC0B,KARf;AASE,YAAQ,EAAEzB,QATZ;AAUE,kBAAc,EAAEI,cAVlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFY,gBAcZ,iDAAC,2DAAD;AACE,MAAE,EAAEL,KAAK,CAACiB,EADZ;AAEE,YAAQ,EAAEjB,KAAK,CAACuB,QAFlB;AAGE,SAAK,EAAEvB,KAAK,CAACwB,KAHf;AAIE,SAAK,EAAExB,KAAK,CAACI,IAJf;AAKE,WAAO,EAAEJ,KALX;AAME,UAAM,EAAEA,KAAK,CAACyB,MANhB;AAOE,SAAK,EAAEzB,KAAK,CAAC0B,KAPf;AAQE,YAAQ,EAAEzB,QARZ;AASE,kBAAc,EAAEI,cATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF;;AAyBA,MAAIL,KAAK,CAAC2B,QAAV,EAAoB;AAClB,wBACE,iDAAC,6DAAD;AAAqB,iBAAW,MAAhC;AAAiC,kBAAY,MAA7C;AAA8C,cAAQ,EAAER,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oGACGE,OADH,CADF,CADF;AAOD;;AAED,sBACE,oGACGA,OADH,CADF;AAKD,CAhED;;AAkEA,iEAAezB,0EAAqB,CAACG,cAAD,CAApC","sources":["webpack://materialui/./Components/code-editor.jsx"],"sourcesContent":["import { KeyCode } from 'monaco-editor';\r\nimport React from 'react';\r\nimport MonacoEditor, { MonacoDiffEditor } from 'react-monaco-editor';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\nimport { withComponentFeatures } from 'universal-dashboard'\r\nimport { saveAs } from 'file-saver';\r\n\r\nvar editor;\r\n\r\nconst UDMonacoEditor = props => {\r\n  const onChange = (newValue) => {\r\n    props.setState({ code: newValue })\r\n  }\r\n\r\n  const editorDidMount = (editor, monaco) => {\r\n    editor = editor;\r\n    if (props.canSave) {\r\n      editor.onKeyDown = (e) => {\r\n        console.log(e);\r\n        if (e.ctrlKey && e.keyCode === KeyCode.KEY_S) {\r\n          e.preventDefault();\r\n          saveAs(new Blob([props.code], { type: 'text/plain' }), `${props.id}.${props.extension}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const onResize = () => {\r\n    if (editor) {\r\n      editor.layout();\r\n    }\r\n  }\r\n\r\n  var control = props.original ?\r\n\r\n    <MonacoDiffEditor\r\n      id={props.id}\r\n      language={props.language}\r\n      theme={props.theme}\r\n      value={props.code}\r\n      original={props.original}\r\n      options={props}\r\n      height={props.height}\r\n      width={props.width}\r\n      onChange={onChange}\r\n      editorDidMount={editorDidMount} /> :\r\n\r\n    <MonacoEditor\r\n      id={props.id}\r\n      language={props.language}\r\n      theme={props.theme}\r\n      value={props.code}\r\n      options={props}\r\n      height={props.height}\r\n      width={props.width}\r\n      onChange={onChange}\r\n      editorDidMount={editorDidMount} />;\r\n\r\n  if (props.autosize) {\r\n    return (\r\n      <ReactResizeDetector handleWidth handleHeight onResize={onResize}>\r\n        <>\r\n          {control}\r\n        </>\r\n      </ReactResizeDetector>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {control}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withComponentFeatures(UDMonacoEditor)"],"names":["KeyCode","React","MonacoEditor","MonacoDiffEditor","ReactResizeDetector","withComponentFeatures","saveAs","editor","UDMonacoEditor","props","onChange","newValue","setState","code","editorDidMount","canSave","onKeyDown","e","console","log","ctrlKey","keyCode","KEY_S","preventDefault","Blob","type","id","extension","onResize","layout","control","original","language","theme","height","width","autosize"],"sourceRoot":""}
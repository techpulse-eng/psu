{"version":3,"file":"Components_select_jsx.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":"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","sources":["webpack://materialui/./Components/select.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { withComponentFeatures } from 'universal-dashboard';\r\nimport { FormContext } from './form';\r\n\r\nconst UDSelectWithContext = (props) => {\r\n    return (\r\n        <FormContext.Consumer>\r\n            {\r\n                ({ onFieldChange }) => <UDSelect {...props} onFieldChange={onFieldChange} />\r\n            }\r\n        </FormContext.Consumer>\r\n\r\n    )\r\n}\r\n\r\nconst UDSelect = (props) => {\r\n    const groups = props.options.filter(m => m.type === 'mu-select-group');\r\n\r\n    const onChange = (event) => {\r\n        var value = event.target.value;\r\n        if (Array.isArray(value)) {\r\n            value = value.filter(x => x != null && x != undefined);\r\n            var temp = []\r\n            value.forEach(x => {\r\n                const group = groups.find(v => v.name === x);\r\n                if (group) {\r\n                    group.options.forEach(opt => temp.push(opt.value));\r\n                }\r\n                else {\r\n                    temp.push(x);\r\n                }\r\n            });\r\n\r\n            value = temp;\r\n        }\r\n\r\n        props.onFieldChange({ id: props.id, value: value })\r\n        props.setState({ value: value })\r\n\r\n        if (props.onChange) {\r\n            props.onChange(value);\r\n        }\r\n    }\r\n\r\n    let defaultValue = props.defaultValue;\r\n    let options = [];\r\n    if (groups.length > 0) {\r\n        options = groups.map(x => {\r\n            const groupStyle = {\r\n                color: 'rgba(0, 0, 0, 0.54)',\r\n                fontSize: '0.875rem',\r\n                boxSizing: 'border-box',\r\n                listStyle: 'none',\r\n                fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                fontWeight: 500\r\n            }\r\n\r\n            return [\r\n                <MenuItem style={groupStyle} value={x.name}>{x.name}</MenuItem>,\r\n                x.options.map(m => <MenuItem value={m.value}>{m.name}</MenuItem>)\r\n            ]\r\n        })\r\n    }\r\n    else if (props.options && props.options.map && props.options.length > 0) {\r\n        options = props.options.map(x => <MenuItem value={x.value}>{x.name}</MenuItem>)\r\n    }\r\n\r\n    if (props.multiple && !Array.isArray(defaultValue)) {\r\n        if (defaultValue) {\r\n            defaultValue = [defaultValue];\r\n        }\r\n        else {\r\n            defaultValue = []\r\n        }\r\n    }\r\n\r\n    let value = Array.isArray(props.value) && !props.multiple ? props.value[0] : props.value;\r\n    if (!value) {\r\n        value = defaultValue;\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.onFieldChange({ id: props.id, value });\r\n        props.setState({ value });\r\n        return () => { }\r\n    }, [value])\r\n\r\n    return (\r\n        <FormControl variant={props.variant} sx={{ minWidth: 120 }} fullWidth={props.fullWidth}>\r\n            <InputLabel id={props.id + \"label\"}>{props.label}</InputLabel>\r\n            <Select\r\n                key={props.id}\r\n                labelId={props.id + \"label\"}\r\n                label={props.label}\r\n                defaultValue={defaultValue}\r\n                inputProps={{ id: props.id, value }}\r\n                value={value}\r\n                onChange={event => onChange(event)}\r\n                multiple={props.multiple}\r\n                disabled={props.disabled}\r\n            >\r\n                {options}\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default withComponentFeatures(UDSelectWithContext);"],"names":["React","useEffect","InputLabel","MenuItem","FormControl","Select","withComponentFeatures","FormContext","UDSelectWithContext","props","onFieldChange","UDSelect","groups","options","filter","m","type","onChange","event","value","target","temp","Array","isArray","x","undefined","forEach","group","find","v","name","opt","push","id","setState","defaultValue","length","map","color","fontSize","boxSizing","listStyle","fontFamily","fontWeight","multiple","variant","minWidth","fullWidth","label","disabled"],"sourceRoot":""}
{"version":3,"file":"Components_treeview_jsx.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":"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","sources":["webpack://materialui/./Components/treeview.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\n\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem from '@mui/lab/TreeItem';\r\nimport { withComponentFeatures } from 'universal-dashboard';\r\nvar classNames = require('classnames');\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 400\r\n    },\r\n});\r\n\r\nconst UDTreeView = (props) => {\r\n    const classes = useStyles();\r\n    const nodeList = useRef([]);\r\n\r\n    const onClick = (event, nodeIds) => {\r\n        const node = nodeList.current.find(m => m.id === nodeIds[0]);\r\n\r\n        if (node.leaf) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (props.onNodeClicked) {\r\n            props.onNodeClicked(node).then(x => {\r\n                var children = x;\r\n                node.children = JSON.parse(children);\r\n                props.setState({ nodes: props.nodes })\r\n            });\r\n        }\r\n    }\r\n\r\n    const makeNodes = (nodes) => {\r\n        var children = nodes;\r\n        if (!Array.isArray(children)) {\r\n            children = [nodes];\r\n        }\r\n\r\n        return children.map(x => {\r\n            if (!x) return <React.Fragment />\r\n\r\n            nodeList.current.push(x)\r\n\r\n            let children = null;\r\n            if (!x.leaf) {\r\n                children = Array.isArray(x.children) ? x.children.map(makeNodes) : makeNodes(x.children);\r\n            }\r\n\r\n            return <TreeItem\r\n                key={x.id}\r\n                id={x.id}\r\n                nodeId={x.id}\r\n                label={x.name}\r\n                collapseIcon={x.expandedIcon && props.render(x.expandedIcon)}\r\n                expandIcon={x.icon && props.render(x.icon)}\r\n                children={children}\r\n            />\r\n        });\r\n    }\r\n\r\n    return (\r\n        <TreeView\r\n            id={props.id}\r\n            className={classNames(classes.root, props.className)}\r\n            style={props.style}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            onNodeToggle={onClick}\r\n        >\r\n            {makeNodes(Array.isArray(props.node) ? props.node : [props.node])}\r\n        </TreeView>\r\n    )\r\n}\r\n\r\nexport default withComponentFeatures(UDTreeView);"],"names":["React","useRef","makeStyles","TreeView","ExpandMoreIcon","ChevronRightIcon","TreeItem","withComponentFeatures","classNames","require","useStyles","root","flexGrow","maxWidth","UDTreeView","props","classes","nodeList","makeNodes","nodes","children","Array","isArray","map","x","current","push","leaf","id","name","expandedIcon","render","icon","className","style","onClick","event","nodeIds","node","find","m","preventDefault","onNodeClicked","then","JSON","parse","setState"],"sourceRoot":""}
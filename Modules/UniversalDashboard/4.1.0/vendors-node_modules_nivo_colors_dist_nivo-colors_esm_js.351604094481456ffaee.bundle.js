(self["webpackChunkmaterialui"] = self["webpackChunkmaterialui"] || []).push([["vendors-node_modules_nivo_colors_dist_nivo-colors_esm_js"],{

/***/ "./node_modules/@nivo/colors/dist/nivo-colors.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/@nivo/colors/dist/nivo-colors.esm.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "categoricalColorSchemeIds": () => (/* binding */ categoricalColorSchemeIds),
/* harmony export */   "categoricalColorSchemes": () => (/* binding */ categoricalColorSchemes),
/* harmony export */   "colorInterpolatorIds": () => (/* binding */ colorInterpolatorIds),
/* harmony export */   "colorInterpolators": () => (/* binding */ colorInterpolators),
/* harmony export */   "colorPropertyAccessorPropType": () => (/* binding */ colorPropertyAccessorPropType),
/* harmony export */   "colorSchemeIds": () => (/* binding */ colorSchemeIds),
/* harmony export */   "colorSchemes": () => (/* binding */ colorSchemes),
/* harmony export */   "divergingColorSchemeIds": () => (/* binding */ divergingColorSchemeIds),
/* harmony export */   "divergingColorSchemes": () => (/* binding */ divergingColorSchemes),
/* harmony export */   "getInheritedColorGenerator": () => (/* binding */ getInheritedColorGenerator),
/* harmony export */   "getInterpolatedColor": () => (/* binding */ getInterpolatedColor),
/* harmony export */   "getOrdinalColorScale": () => (/* binding */ getOrdinalColorScale),
/* harmony export */   "inheritedColorPropType": () => (/* binding */ inheritedColorPropType),
/* harmony export */   "interpolateColor": () => (/* binding */ interpolateColor),
/* harmony export */   "isCategoricalColorScheme": () => (/* binding */ isCategoricalColorScheme),
/* harmony export */   "isDivergingColorScheme": () => (/* binding */ isDivergingColorScheme),
/* harmony export */   "isSequentialColorScheme": () => (/* binding */ isSequentialColorScheme),
/* harmony export */   "ordinalColorsPropType": () => (/* binding */ ordinalColorsPropType),
/* harmony export */   "sequentialColorSchemeIds": () => (/* binding */ sequentialColorSchemeIds),
/* harmony export */   "sequentialColorSchemes": () => (/* binding */ sequentialColorSchemes),
/* harmony export */   "useInheritedColor": () => (/* binding */ useInheritedColor),
/* harmony export */   "useOrdinalColorScale": () => (/* binding */ useOrdinalColorScale)
/* harmony export */ });
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/categorical/category10.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/categorical/Accent.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/categorical/Dark2.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/categorical/Paired.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/categorical/Set1.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/categorical/Set2.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/categorical/Set3.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/diverging/BrBG.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/diverging/PRGn.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/diverging/PiYG.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/diverging/PuOr.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/diverging/RdBu.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/diverging/RdGy.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/diverging/Spectral.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.get */ "./node_modules/lodash.get/index.js");
/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash.isplainobject */ "./node_modules/lodash.isplainobject/index.js");
/* harmony import */ var lodash_isplainobject__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isplainobject__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! d3-scale */ "./node_modules/d3-scale/src/ordinal.js");
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_46__);
/* harmony import */ var react_motion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-motion */ "./node_modules/react-motion/lib/react-motion.js");









function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
var categoricalColorSchemes = {
  nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],
  category10: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_4__["default"],
  accent: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_5__["default"],
  dark2: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_6__["default"],
  paired: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_7__["default"],
  pastel1: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_8__["default"],
  pastel2: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_9__["default"],
  set1: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_10__["default"],
  set2: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_11__["default"],
  set3: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_12__["default"]
};
var categoricalColorSchemeIds = Object.keys(categoricalColorSchemes);
var isCategoricalColorScheme = function isCategoricalColorScheme(scheme) {
  return categoricalColorSchemeIds.includes(scheme);
};
var divergingColorSchemes = {
  brown_blueGreen: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_13__.scheme,
  purpleRed_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_14__.scheme,
  pink_yellowGreen: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_15__.scheme,
  purple_orange: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_16__.scheme,
  red_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_17__.scheme,
  red_grey: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_18__.scheme,
  red_yellow_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_19__.scheme,
  red_yellow_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_20__.scheme,
  spectral: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_21__.scheme
};
var divergingColorSchemeIds = Object.keys(divergingColorSchemes);
var isDivergingColorScheme = function isDivergingColorScheme(scheme) {
  return divergingColorSchemeIds.includes(scheme);
};
var sequentialColorSchemes = {
  blues: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_22__.scheme,
  greens: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.scheme,
  greys: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_24__.scheme,
  oranges: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_25__.scheme,
  purples: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_26__.scheme,
  reds: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_27__.scheme,
  blue_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_28__.scheme,
  blue_purple: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_29__.scheme,
  green_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_30__.scheme,
  orange_red: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_31__.scheme,
  purple_blue_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_32__.scheme,
  purple_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_33__.scheme,
  purple_red: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_34__.scheme,
  red_purple: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_35__.scheme,
  yellow_green_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_36__.scheme,
  yellow_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_37__.scheme,
  yellow_orange_brown: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_38__.scheme,
  yellow_orange_red: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_39__.scheme
};
var sequentialColorSchemeIds = Object.keys(sequentialColorSchemes);
var isSequentialColorScheme = function isSequentialColorScheme(scheme) {
  return sequentialColorSchemeIds.includes(scheme);
};
var colorSchemes = _objectSpread({}, categoricalColorSchemes, divergingColorSchemes, sequentialColorSchemes);
var colorSchemeIds = Object.keys(colorSchemes);
var colorInterpolators = {
  brown_blueGreen: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_13__["default"],
  purpleRed_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_14__["default"],
  pink_yellowGreen: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_15__["default"],
  purple_orange: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_16__["default"],
  red_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_17__["default"],
  red_grey: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_18__["default"],
  red_yellow_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_19__["default"],
  red_yellow_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_20__["default"],
  spectral: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_21__["default"],
  blues: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_22__["default"],
  greens: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__["default"],
  greys: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_24__["default"],
  oranges: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_25__["default"],
  purples: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_26__["default"],
  reds: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_27__["default"],
  viridis: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_40__["default"],
  inferno: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_40__.inferno,
  magma: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_40__.magma,
  plasma: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_40__.plasma,
  warm: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_41__.warm,
  cool: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_41__.cool,
  cubehelixDefault: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_42__["default"],
  blue_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_28__["default"],
  blue_purple: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_29__["default"],
  green_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_30__["default"],
  orange_red: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_31__["default"],
  purple_blue_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_32__["default"],
  purple_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_33__["default"],
  purple_red: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_34__["default"],
  red_purple: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_35__["default"],
  yellow_green_blue: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_36__["default"],
  yellow_green: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_37__["default"],
  yellow_orange_brown: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_38__["default"],
  yellow_orange_red: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_39__["default"],
  rainbow: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_41__["default"],
  sinebow: d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_43__["default"]
};
var colorInterpolatorIds = Object.keys(colorInterpolators);

var getOrdinalColorScale = function getOrdinalColorScale(instruction, identity) {
  if (typeof instruction === 'function') return instruction;
  var getIdentity = typeof identity === 'function' ? identity : function (d) {
    return lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(d, identity);
  };
  if (Array.isArray(instruction)) {
    var scale = (0,d3_scale__WEBPACK_IMPORTED_MODULE_44__["default"])(instruction);
    var generator = function generator(d) {
      return scale(getIdentity(d));
    };
    generator.scale = scale;
    return generator;
  }
  if (lodash_isplainobject__WEBPACK_IMPORTED_MODULE_2___default()(instruction)) {
    if (instruction.datum !== undefined) {
      return function (datum) {
        return lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(datum, instruction.datum);
      };
    }
    if (instruction.scheme !== undefined) {
      if (isCategoricalColorScheme(instruction.scheme)) {
        var _scale = (0,d3_scale__WEBPACK_IMPORTED_MODULE_44__["default"])(colorSchemes[instruction.scheme]);
        var _generator = function _generator(d) {
          return _scale(getIdentity(d));
        };
        _generator.scale = _scale;
        return _generator;
      }
      if (isDivergingColorScheme(instruction.scheme)) {
        if (instruction.size !== undefined && (instruction.size < 3 || instruction.size > 11)) {
          throw new Error("Invalid size '".concat(instruction.size, "' for diverging color scheme '").concat(instruction.scheme, "', must be between 3~11"));
        }
        var _scale2 = (0,d3_scale__WEBPACK_IMPORTED_MODULE_44__["default"])(colorSchemes[instruction.scheme][instruction.size || 11]);
        var _generator2 = function _generator2(d) {
          return _scale2(getIdentity(d));
        };
        _generator2.scale = _scale2;
        return _generator2;
      }
      if (isSequentialColorScheme(instruction.scheme)) {
        if (instruction.size !== undefined && (instruction.size < 3 || instruction.size > 9)) {
          throw new Error("Invalid size '".concat(instruction.size, "' for sequential color scheme '").concat(instruction.scheme, "', must be between 3~9"));
        }
        var _scale3 = (0,d3_scale__WEBPACK_IMPORTED_MODULE_44__["default"])(colorSchemes[instruction.scheme][instruction.size || 9]);
        var _generator3 = function _generator3(d) {
          return _scale3(getIdentity(d));
        };
        _generator3.scale = _scale3;
        return _generator3;
      }
    }
    throw new Error("Invalid colors, when using an object, you should either pass a 'datum' or a 'scheme' property");
  }
  return function () {
    return instruction;
  };
};
var useOrdinalColorScale = function useOrdinalColorScale(instruction, identity) {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return getOrdinalColorScale(instruction, identity);
  }, [instruction, identity]);
};

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }
function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var getInheritedColorGenerator = function getInheritedColorGenerator(inheritedColor, theme) {
  if (typeof inheritedColor === 'function') return function (node) {
    return inheritedColor(node);
  };
  if (lodash_isplainobject__WEBPACK_IMPORTED_MODULE_2___default()(inheritedColor)) {
    if (inheritedColor.theme !== undefined) {
      if (theme === undefined) {
        throw new Error("Unable to use color from theme as no theme was provided");
      }
      var themeColor = lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(theme, inheritedColor.theme);
      if (themeColor === undefined) {
        throw new Error("Color from theme is undefined at path: '".concat(inheritedColor.theme, "'"));
      }
      return function () {
        return themeColor;
      };
    }
    if (inheritedColor.from !== undefined) {
      var getColor = function getColor(datum) {
        return lodash_get__WEBPACK_IMPORTED_MODULE_1___default()(datum, inheritedColor.from);
      };
      if (Array.isArray(inheritedColor.modifiers)) {
        var modifiers = [];
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
          var _loop = function _loop() {
            var modifier = _step.value;
            var _modifier = _slicedToArray(modifier, 2),
                modifierType = _modifier[0],
                amount = _modifier[1];
            if (modifierType === 'brighter') {
              modifiers.push(function (color) {
                return color.brighter(amount);
              });
            } else if (modifierType === 'darker') {
              modifiers.push(function (color) {
                return color.darker(amount);
              });
            } else if (modifierType === 'opacity') {
              modifiers.push(function (color) {
                color.opacity = amount;
                return color;
              });
            } else {
              throw new Error("Invalid color modifier: '".concat(modifierType, "', must be one of: 'brighter', 'darker', 'opacity'"));
            }
          };
          for (var _iterator = inheritedColor.modifiers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            _loop();
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        if (modifiers.length === 0) return getColor;
        return function (datum) {
          return modifiers.reduce(function (color, modify) {
            return modify(color);
          }, (0,d3_color__WEBPACK_IMPORTED_MODULE_45__.rgb)(getColor(datum))).toString();
        };
      }
      return getColor;
    }
    throw new Error("Invalid color spec, you should either specify 'theme' or 'from' when using a config object");
  }
  return function () {
    return inheritedColor;
  };
};
var useInheritedColor = function useInheritedColor(parentColor, theme) {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {
    return getInheritedColorGenerator(parentColor, theme);
  }, [parentColor, theme]);
};

var ordinalColorsPropType = prop_types__WEBPACK_IMPORTED_MODULE_46___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_46___default().func), prop_types__WEBPACK_IMPORTED_MODULE_46___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_46___default().string)), prop_types__WEBPACK_IMPORTED_MODULE_46___default().shape({
  scheme: prop_types__WEBPACK_IMPORTED_MODULE_46___default().oneOf(colorSchemeIds).isRequired,
  size: (prop_types__WEBPACK_IMPORTED_MODULE_46___default().number)
}), prop_types__WEBPACK_IMPORTED_MODULE_46___default().shape({
  datum: (prop_types__WEBPACK_IMPORTED_MODULE_46___default().string.isRequired)
}), (prop_types__WEBPACK_IMPORTED_MODULE_46___default().string)]);
var colorPropertyAccessorPropType = prop_types__WEBPACK_IMPORTED_MODULE_46___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_46___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_46___default().string)]);
var inheritedColorPropType = prop_types__WEBPACK_IMPORTED_MODULE_46___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_46___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_46___default().func), prop_types__WEBPACK_IMPORTED_MODULE_46___default().shape({
  theme: (prop_types__WEBPACK_IMPORTED_MODULE_46___default().string.isRequired)
}), prop_types__WEBPACK_IMPORTED_MODULE_46___default().shape({
  from: (prop_types__WEBPACK_IMPORTED_MODULE_46___default().string.isRequired),
  modifiers: prop_types__WEBPACK_IMPORTED_MODULE_46___default().arrayOf((prop_types__WEBPACK_IMPORTED_MODULE_46___default().array))
})]);

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty$1(target, key, source[key]); }); } return target; }
function _defineProperty$1(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
var interpolateColor = function interpolateColor(color, springConfig) {
  var colorComponents = (0,d3_color__WEBPACK_IMPORTED_MODULE_45__.rgb)(color);
  if (!springConfig) {
    return {
      colorR: colorComponents.r,
      colorG: colorComponents.g,
      colorB: colorComponents.b
    };
  }
  var configWithPrecision = _objectSpread$1({}, springConfig, {
    precision: 1
  });
  return {
    colorR: (0,react_motion__WEBPACK_IMPORTED_MODULE_3__.spring)(colorComponents.r, configWithPrecision),
    colorG: (0,react_motion__WEBPACK_IMPORTED_MODULE_3__.spring)(colorComponents.g, configWithPrecision),
    colorB: (0,react_motion__WEBPACK_IMPORTED_MODULE_3__.spring)(colorComponents.b, configWithPrecision)
  };
};
var getInterpolatedColor = function getInterpolatedColor(_ref) {
  var colorR = _ref.colorR,
      colorG = _ref.colorG,
      colorB = _ref.colorB;
  return "rgb(".concat(Math.round(Math.max(colorR, 0)), ",").concat(Math.round(Math.max(colorG, 0)), ",").concat(Math.round(Math.max(colorB, 0)), ")");
};




/***/ }),

/***/ "./node_modules/lodash.get/index.js":
/*!******************************************!*\
  !*** ./node_modules/lodash.get/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    symbolTag = '[object Symbol]';

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/,
    reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Symbol = root.Symbol,
    splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = isKey(path, object) ? [path] : castPath(path);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value) {
  return isArray(value) ? value : stringToPath(value);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoize(function(string) {
  string = toString(string);

  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),

/***/ "./node_modules/lodash.isplainobject/index.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash.isplainobject/index.js ***!
  \****************************************************/
/***/ ((module) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) ||
      objectToString.call(value) != objectTag || isHostObject(value)) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return (typeof Ctor == 'function' &&
    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
}

module.exports = isPlainObject;


/***/ })

}]);
//# sourceMappingURL=vendors-node_modules_nivo_colors_dist_nivo-colors_esm_js.2b9d34f959d94bfcb826e00848b44a55.bundle.map
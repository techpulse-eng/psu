{"version":3,"file":"Components_card-media_jsx.xxxxxxxxxxxxxxxxxxxx.bundle.js","mappings":"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","sources":["webpack://materialui/./node_modules/@mui/material/CardMedia/CardMedia.js","webpack://materialui/./node_modules/@mui/material/CardMedia/cardMediaClasses.js","webpack://materialui/./Components/card-media.jsx"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import React from \"react\";\r\nimport classNames from \"classnames\"\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport { CardMedia } from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  media: {\r\n    objectFit: \"cover\",\r\n    backgroundColor: \"transparent\"\r\n    // height: \"100%\"\r\n  }\r\n}));\r\n\r\n\r\nconst UDCardMedia = (props) => {\r\n  const classes = useStyles();\r\n  const { component, alt, height, image, title, source } = props;\r\n\r\n  return (\r\n      <CardMedia\r\n        className={classNames(classes.media, \"ud-mu-cardmedia\")}\r\n        component={component}\r\n        alt={alt}\r\n        height={height}\r\n        image={image}\r\n        title={title}\r\n        src={source}\r\n        controls={component === (\"video\" || \"audio\") ? true : false}\r\n      />\r\n  );\r\n}\r\n\r\nexport default UDCardMedia;\r\n"],"names":["React","classNames","makeStyles","CardMedia","useStyles","media","objectFit","backgroundColor","UDCardMedia","props","classes","component","alt","height","image","title","source"],"sourceRoot":""}
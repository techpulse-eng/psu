{"version":3,"sources":["components/ui/TagLink.tsx","components/jobs/JobDateTime.tsx","components/scripts/components/ScriptJobs.tsx"],"names":["TagLink","text","to","color","style","JobDateTime","job","relativeTime","direction","size","Text","type","fontSize","title","dayjs","startTime","toString","generateDateInfo","generateTimeInfo","ScriptJobs","script","usePageContext","resource","useQuery","fullPath","enabled","jobs","data","isLoading","columns","key","dataIndex","align","defaultSortOrder","responsive","render","record","toRelativeUrl","setStatusTag","status","generateJobDescription","page","reverse","loading","pagination","hideOnSinglePage","showSizeChanger","total","length"],"mappings":"kKAAA,gFAIe,SAASA,EAAT,GAAgC,IAAbC,EAAY,EAAZA,KAAMC,EAAM,EAANA,GACtC,OACE,cAAC,IAAD,CAAKC,MAAM,OAAX,SACE,cAAC,IAAD,CAAMC,MAAO,CAAED,MAAO,WAAaD,GAAIA,EAAvC,SACGD,Q,kCCPT,yHAMe,SAASI,EAAT,GAA2F,IAApEC,EAAmE,EAAnEA,IAAmE,IAA9DC,oBAA8D,SACvG,OACE,eAAC,IAAD,CAAOC,UAAU,aAAaC,KAAK,SAAnC,UACE,eAAC,IAAD,WACE,cAAC,IAAWC,KAAZ,CAAiBC,KAAK,YAAYP,MAAO,CAAEQ,SAAU,IAArD,SACE,cAAC,IAAD,CAAkBR,MAAO,CAAED,MAAO,UAAWS,SAAU,eAEzD,cAAC,IAAWF,KAAZ,CAAiBC,KAAK,YAAYP,MAAO,CAAEQ,SAAU,IAArD,SACE,cAAC,IAAD,CAASC,MAAOC,IAAK,OAACR,QAAD,IAACA,OAAD,EAACA,EAAKS,WAAWC,WAAtC,SACGC,YAAiBX,EAAKC,UAI7B,eAAC,IAAD,WACE,cAAC,IAAWG,KAAZ,CAAiBC,KAAK,YAAYP,MAAO,CAAEQ,SAAU,IAArD,SACE,cAAC,IAAD,CAAiBR,MAAO,CAAED,MAAO,UAAWS,SAAU,eAExD,cAAC,IAAWF,KAAZ,CAAiBC,KAAK,YAAYP,MAAO,CAAEQ,SAAU,IAArD,SACGM,YAAiBZ,a,kCCzB5B,sHAYe,SAASa,IAAc,IAAD,IACjBC,EAAWC,cAArBC,SAD2B,EAGDC,YAAQ,6BACzBH,QADyB,IACzBA,OADyB,EACzBA,EAAQI,UAAY,CAAEC,UAAWL,IADpCM,EAHqB,EAG3BC,KAAYC,EAHe,EAGfA,UAIdC,EAAgC,CACpC,CACEhB,MAAO,KACPiB,IAAK,KACLC,UAAW,KACXC,MAAO,OACPC,iBAAkB,UAClBC,WAAY,CAAC,MACbC,OAAQ,SAAClC,EAAMmC,GAAP,OAAkB,cAAC,UAAD,CAASnC,KAAMA,EAAMC,GAAImC,YAAc,0BAAD,OAA2BpC,QAE7F,CACEY,MAAO,SACPiB,IAAK,SACLC,UAAW,SACXC,MAAO,SACPE,WAAY,CAAC,MACbC,OAAQ,SAAClC,EAAMmC,GAAP,OAAkBE,YAAY,OAACF,QAAD,IAACA,OAAD,EAACA,EAAQG,UAEjD,CACE1B,MAAO,cACPiB,IAAK,WACLE,MAAO,QACPE,WAAY,CAAC,MACbC,OAAQ,SAAClC,EAAMmC,GAAP,OAAuBI,YAAuBJ,KAExD,CACEvB,MAAO,WACPiB,IAAK,WACLE,MAAO,QACPE,WAAY,CAAC,MACbC,OAAQ,SAAClC,EAAMmC,GAAP,OAAuB,cAAC,IAAD,CAAa9B,IAAK8B,OAIrD,OACE,cAAC,UAAD,CACET,KAAI,OAAED,QAAF,IAAEA,GAAF,UAAEA,EAAMe,YAAR,aAAE,EAAYC,UAClBb,QAASA,EACTc,QAASf,EACTgB,WAAY,CACVC,kBAAkB,EAClBC,iBAAiB,EACjBC,MAAK,OAAErB,QAAF,IAAEA,GAAF,UAAEA,EAAMe,YAAR,aAAE,EAAYO","file":"static/js/34.aa41698b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Tag } from \"antd\";\r\n\r\nexport default function TagLink({ text, to }) {\r\n  return (\r\n    <Tag color=\"blue\">\r\n      <Link style={{ color: \"inherit\" }} to={to}>\r\n        {text}\r\n      </Link>\r\n    </Tag>\r\n  );\r\n}\r\n","import { Job } from \"../../types\";\r\nimport { Space, Tooltip, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { CalendarOutlined, HistoryOutlined } from \"@ant-design/icons\";\r\nimport { generateDateInfo, generateTimeInfo } from \"components/utils/utils\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function JobDateTime({ job, relativeTime = true }: { job: Job; relativeTime?: boolean; }) {\r\n  return (\r\n    <Space direction=\"horizontal\" size=\"middle\">\r\n      <Space>\r\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\r\n          <CalendarOutlined style={{ color: \"inherit\", fontSize: \"inherit\" }} />\r\n        </Typography.Text>\r\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\r\n          <Tooltip title={dayjs(job?.startTime).toString()}>\r\n            {generateDateInfo(job, relativeTime)}\r\n          </Tooltip>\r\n        </Typography.Text>\r\n      </Space>\r\n      <Space>\r\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\r\n          <HistoryOutlined style={{ color: \"inherit\", fontSize: \"inherit\" }} />\r\n        </Typography.Text>\r\n        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\r\n          {generateTimeInfo(job)}\r\n        </Typography.Text>\r\n      </Space>\r\n    </Space>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { CustomColumns, Job, JobQuery } from \"../../../types\";\r\nimport { generateJobDescription, setStatusTag, toRelativeUrl } from \"components/utils/utils\";\r\nimport { usePageContext } from \"components/pages/Page\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Breakpoint } from \"antd/lib/_util/responsiveObserve\";\r\nimport { AlignType } from \"rc-table/lib/interface\";\r\n\r\nimport Table from \"components/ui/Table\";\r\nimport JobDateTime from \"components/jobs/JobDateTime\";\r\nimport TagLink from \"components/ui/TagLink\";\r\n\r\nexport default function ScriptJobs() {\r\n  const { resource: script } = usePageContext();\r\n\r\n  const { data: jobs, isLoading } = useQuery<JobQuery>(\r\n    `/script/job/${script?.fullPath}`, { enabled: !!script }\r\n  );\r\n\r\n  const columns: CustomColumns<Job>[] = [\r\n    {\r\n      title: \"Id\",\r\n      key: \"id\",\r\n      dataIndex: \"id\",\r\n      align: \"left\" as AlignType,\r\n      defaultSortOrder: 'descend',\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record) => <TagLink text={text} to={toRelativeUrl(`/admin/automation/jobs/${text}`)} />\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n      align: \"center\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record) => setStatusTag(record?.status),\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      key: \"datetime\",\r\n      align: \"right\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record: Job) => generateJobDescription(record),\r\n    },\r\n    {\r\n      title: \"datetime\",\r\n      key: \"datetime\",\r\n      align: \"right\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record: Job) => <JobDateTime job={record} />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      data={jobs?.page?.reverse()}\r\n      columns={columns}\r\n      loading={isLoading}\r\n      pagination={{\r\n        hideOnSinglePage: true,\r\n        showSizeChanger: false,\r\n        total: jobs?.page?.length,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/ui/TagLink.tsx","components/systemEvents/systemEventModal.tsx","components/systemEvents/systemEvents.tsx","components/ui/BuyLicenseAlertBox.tsx","components/ui/EditModal.tsx"],"names":["TagLink","text","to","color","style","SystemEventModal","useModalContext","onOk","form","Modal","requiredRoles","requiredAccessControls","AccessControlTypes","Create","allowedWithOneWayGitSync","children","title","onClickOk","formName","Form","schemaName","name","preserve","columns","dataIndex","key","editable","render","ellipsis","record","script","credential","width","EditModal","DeleteButton","resource","SystemEvents","useQuery","enabled","refetchOnWindowFocus","systemEvents","data","isLoading","refetch","subTitle","extra","url","Table","actions","loading","queryFn","BuyLicenseAlertBox","type","message","align","justifyContent","Link","href","target","props","getButtonProps","useActionButton","normalizedRecord","useNormalizeData","licensed","useAppStore","Edit","accessControls","action","resourceInfo","self","parent","inEditMode","defaultValues","Feature","Dashboard"],"mappings":"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","file":"static/js/31.c85b6e2b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Tag } from \"antd\";\r\n\r\nexport default function TagLink({ text, to }) {\r\n  return (\r\n    <Tag color=\"blue\">\r\n      <Link style={{ color: \"inherit\" }} to={to}>\r\n        {text}\r\n      </Link>\r\n    </Tag>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { AccessControlTypes, SystemEvent } from \"types\";\r\nimport { Button } from \"antd\";\r\nimport {\r\n  ModalContent,\r\n  ModalOpenButton,\r\n  useModalContext,\r\n} from \"components/ui/Modal\";\r\nimport { Form, FormContentBase } from \"components/ui/Form/Form\";\r\n\r\nexport default function SystemEventModal() {\r\n  const { onOk, form } = useModalContext();\r\n\r\n  function handleOk() {\r\n    onOk(\"/systemEvent\", \"create\", {} as SystemEvent);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Create} allowedWithOneWayGitSync={false}>\r\n        <Button children=\"Create New System Event\" />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"Create New System Event\" onClickOk={handleOk} formName=\"create_systemEvent_form\">\r\n        <Form schemaName=\"systemEvent\">\r\n          <FormContentBase\r\n            name=\"create_systemEvent_form\"\r\n            form={form}\r\n            preserve={false}\r\n          />\r\n        </Form>\r\n      </ModalContent>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { CustomColumns, SystemEvent } from \"../../types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { PageHeader, Space } from \"antd\";\r\nimport { Modal } from \"components/ui/Modal\";\r\nimport Table from \"components/ui/Table\";\r\nimport TagLink from \"components/ui/TagLink\";\r\nimport EditModal from \"components/ui/EditModal\";\r\nimport DeleteButton from \"components/ui/DeleteButton\";\r\nimport SystemEventModal from \"./systemEventModal\";\r\nimport DocsButton from \"components/docsButton\";\r\n\r\nconst columns: CustomColumns<SystemEvent>[] = [\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    editable: false\r\n  },\r\n  {\r\n    title: \"Type\",\r\n    dataIndex: \"type\",\r\n    key: \"type\",\r\n    editable: false,\r\n    render: (text) => {\r\n      return text === 0 ? \"Create\" : text === 1 ? \"Delete\" : \"Modify\";\r\n    }\r\n  },\r\n  {\r\n    title: \"Condition\",\r\n    dataIndex: \"condition\",\r\n    key: \"condition\",\r\n    editable: false,\r\n    ellipsis: true\r\n  },\r\n  {\r\n    title: \"Script\",\r\n    key: \"script\",\r\n    editable: false,\r\n    render: (text, record) => (\r\n      <TagLink\r\n        to={`/admin/automation/scripts/${record?.script}`}\r\n        text={record?.script}\r\n      />\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Environment\",\r\n    key: \"environment\",\r\n    dataIndex: \"environment\",\r\n    editable: false,\r\n    render: (text) => (text ? text : \"Default\"),\r\n  },\r\n  {\r\n    key: \"runAs\",\r\n    title: \"Run As\",\r\n    editable: false,\r\n    render: (text, record) => record?.credential || \"Default\",\r\n  },\r\n  {\r\n    width: \"fit-content\",\r\n    dataIndex: \"actions\",\r\n    editable: false,\r\n    render: (text, record) => {\r\n      return (\r\n        <Space>\r\n          <Modal>\r\n            <EditModal record={record} allowedWithOneWayGitSync={false} />\r\n          </Modal>\r\n          <DeleteButton resource={record} allowedWithOneWayGitSync={false} />\r\n        </Space>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport default function SystemEvents() {\r\n  const { data: systemEvents, isLoading, refetch } = useQuery<SystemEvent[]>(\r\n    \"/systemEvent\",\r\n    {\r\n      enabled: false,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <PageHeader title=\"System Event\" subTitle=\"System events that execute PowerShell scripts.\" extra={[\r\n      <DocsButton url=\"desktop/system-events\" />\r\n    ]}>\r\n      <Table\r\n        title=\"System Events\"\r\n        actions={[\r\n          <Modal>\r\n            <SystemEventModal />\r\n          </Modal>,\r\n        ]}\r\n        columns={columns}\r\n        data={systemEvents}\r\n        loading={isLoading}\r\n        queryFn={refetch}\r\n      />\r\n    </PageHeader>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Alert, Space, Typography } from \"antd\";\r\n\r\nexport default function BuyLicenseAlertBox() {\r\n  return (\r\n    <Alert\r\n      type=\"info\"\r\n      message={\r\n        <Space\r\n          align=\"center\"\r\n          style={{ width: \"100%\", justifyContent: \"space-between\" }}\r\n        >\r\n          Authentication requires a license.\r\n          <Typography.Link\r\n            href=\"https://ironmansoftware.com/powershell-universal/?rel=product\"\r\n            target=\"_blank\"\r\n          >\r\n            Buy License.\r\n          </Typography.Link>\r\n        </Space>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AccessControlTypes, Feature, PSUTypes, RoleGuardProps } from \"types\";\r\nimport { Button, ButtonProps } from \"antd\";\r\nimport { Form, FormContentBase } from \"./Form/Form\";\r\nimport { useActionButton } from \"components/utils/hooks/useActionButton\";\r\nimport { useModalContext, ModalOpenButton, ModalContent } from \"./Modal\";\r\nimport useNormalizeData from \"components/utils/normalizedRecord\";\r\nimport BuyLicenseAlertBox from \"./BuyLicenseAlertBox\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\n\r\n\r\ntype EditModalProps = {\r\n  action?: string;\r\n  record: PSUTypes;\r\n  schemaName?: string | undefined;\r\n  accessControl?: AccessControlTypes;\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditModal({\r\n  record,\r\n  schemaName,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditModalProps) {\r\n  const { getButtonProps } = useActionButton();\r\n  const normalizedRecord = useNormalizeData();\r\n  const { onOk, form } = useModalContext();\r\n  const { licensed } = useAppStore()\r\n\r\n  function handleOk() {\r\n\r\n    let key = record?.resourceInfo?.schemaName === \"tag\" ||\r\n      record?.resourceInfo?.schemaName === \"role\" ||\r\n      record?.resourceInfo?.schemaName === \"endpoint\" ||\r\n      record?.resourceInfo?.schemaName === \"ratelimit\" ||\r\n      record?.resourceInfo?.schemaName === \"dashboard\" ||\r\n      record?.resourceInfo?.schemaName === \"schedule\" ||\r\n      record?.resourceInfo?.schemaName === \"publishedfolder\"\r\n      ? record?.resourceInfo?.self\r\n      : record?.resourceInfo?.parent\r\n\r\n    if (record?.resourceInfo?.schemaName === \"page\") {\r\n      key = record?.resourceInfo?.self + \"?ignoreContent=true\"\r\n    }\r\n\r\n    onOk(key,\r\n      \"update\",\r\n      record\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={props.accessControls} allowedWithOneWayGitSync={allowedWithOneWayGitSync}>\r\n        <Button\r\n          {...props}\r\n          {...getButtonProps({ action: \"edit\" })}\r\n          action=\"edit\"\r\n        />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"Edit Resource\" onClickOk={handleOk}>\r\n        <Form schemaName={schemaName || record?.resourceInfo?.schemaName}>\r\n          <FormContentBase\r\n            name=\"edit_form\"\r\n            form={form}\r\n            inEditMode={true}\r\n            preserve={false}\r\n            defaultValues={normalizedRecord(record)}\r\n          />\r\n        </Form>\r\n        {!licensed(Feature.Dashboard) && <BuyLicenseAlertBox />}\r\n      </ModalContent>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}
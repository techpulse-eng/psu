{"version":3,"sources":["components/dashboard/components/DashoardbSettings.tsx"],"names":["DashboardSettings","AntForm","useForm","form","useMutation","mutateAsync","isLoading","normalizedRecord","useNormalizeData","dashboard","usePageContext","resource","a","validateFields","values","key","resourceInfo","self","action","onSuccess","data","rest","message","success","queryClient","refetchQueries","id","exact","stale","schemaName","name","inEditMode","defaultValues","requiredAccessControls","AccessControlTypes","Edit","requiredRoles","accessControls","type","onClick","loading"],"mappings":"qVAQe,SAASA,IAAqB,IAAD,EAC3BC,IAAQC,UAAhBC,EADmC,sBAEPC,cAA3BC,EAFkC,EAElCA,YAAaC,EAFqB,EAErBA,UACfC,EAAmBC,cACPC,EAAcC,cAAxBC,SAJkC,4CAM1C,8BAAAC,EAAA,sEACuBT,EAAKU,iBAD5B,cACQC,EADR,gBAEQT,EAAY,aAChBU,IAAG,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAWO,oBAAb,aAAE,EAAyBC,KAC9BC,OAAQ,UACLX,EAAiB,2BAAKE,GAAcK,KAErC,CACAK,UAAW,SAACC,EAAD,GAAoC,EAA3BL,IAA2B,EAAtBG,OAAuB,IAAZG,EAAW,gCAC7CC,IAAQC,QAAQ,iBAChBC,IAAYC,eAAZ,4BAAyCJ,QAAzC,IAAyCA,OAAzC,EAAyCA,EAAMK,IAAM,CACnDC,OAAO,EACPC,OAAO,OAZjB,4CAN0C,sBAwB1C,OACE,eAAC,IAAD,CAAMC,WAAW,YAAjB,UACE,cAAC,IAAD,CACEC,KAAK,0BACL3B,KAAMA,EACN4B,YAAY,EACZC,cAAezB,EAAiBE,KAElC,cAAC,IAAD,CAAcwB,uBAAwBC,IAAmBC,KAAMC,cAAe,CAAC,gBAAiB,YAAaC,eAAc,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAAW4B,eAAxI,SACE,cAAC,IAAD,CAAQC,KAAK,UAAUC,QAjCa,2CAiCKC,QAASlC,EAAlD","file":"static/js/78.1f49fb93.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Form as AntForm, message } from \"antd\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport { Form, FormContentBase, SubmitButton } from \"components/ui/Form/Form\";\r\nimport { usePageContext } from \"components/pages/Page\";\r\nimport useNormalizeData from \"components/utils/normalizedRecord\";\r\nimport { AccessControlTypes, Dashboard } from \"types\";\r\n\r\nexport default function DashboardSettings() {\r\n  const [form] = AntForm.useForm();\r\n  const { mutateAsync, isLoading } = useMutation<Dashboard>();\r\n  const normalizedRecord = useNormalizeData();\r\n  const { resource: dashboard } = usePageContext();\r\n\r\n  async function onClick() {\r\n    const values = await form.validateFields();\r\n    await mutateAsync({\r\n      key: dashboard?.resourceInfo?.self,\r\n      action: \"update\",\r\n      ...normalizedRecord({ ...dashboard, ...values }),\r\n    }\r\n      , {\r\n        onSuccess: (data, { key, action, ...rest }) => {\r\n          message.success(\"Changes saved\");\r\n          queryClient.refetchQueries(`/dashboard/${rest?.id}`, {\r\n            exact: true,\r\n            stale: true,\r\n          });\r\n        },\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Form schemaName=\"dashboard\">\r\n      <FormContentBase\r\n        name=\"dashboard_settings_form\"\r\n        form={form}\r\n        inEditMode={true}\r\n        defaultValues={normalizedRecord(dashboard)}\r\n      />\r\n      <SubmitButton requiredAccessControls={AccessControlTypes.Edit} requiredRoles={[\"Administrator\", \"Operator\"]} accessControls={dashboard?.accessControls}>\r\n        <Button type=\"primary\" onClick={onClick} loading={isLoading}>\r\n          Save Settings\r\n        </Button>\r\n      </SubmitButton>\r\n    </Form>\r\n  );\r\n}\r\n"],"sourceRoot":""}
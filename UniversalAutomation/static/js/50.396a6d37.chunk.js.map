{"version":3,"sources":["components/dashboard/components/PowerButton.tsx","components/dashboard/dashboards.tsx"],"names":["PowerButton","dashboard","allowedWithOneWayGitSync","useMutation","dashboardId","axios","put","then","res","data","onError","error","variables","context","message","onSuccess","queryClient","refetchQueries","stale","active","inactive","isStarting","isLoading","start","mutateAsync","isRestarting","restart","delete","isStoping","stop","requiredRoles","title","getPopupContainer","document","getElementsByTagName","placement","trigger","overlay","onClick","key","id","Item","disabled","status","icon","loading","type","Table","React","lazy","EditModal","DeleteButton","EditorButton","TotalMemory","TotalEndpoints","TotalDashboards","TotalSessions","DashboardModal","DashboardViewButton","Dashboards","defaultAdvanced","localStorage","getItem","useState","tags","setTags","advanced","setAdvanced","useQuery","refetchOnWindowFocus","dashboards","endpoints","enabled","sessions","columns","dataIndex","render","text","record","setStatusColor","maintenance","Fragment","style","marginRight","align","value","authenticated","role","length","map","color","editable","responsive","tag","cursor","find","m","name","width","to","resource","dbs","filter","subTitle","extra","checkedChildren","unCheckedChildren","onChange","e","setItem","toString","checked","url","justify","gutter","flex","running","total","totalEndpoints","totalSessions","actions","closable","onClose","rowExpandable","expandedRowRender","margin","description","environment","filePath","dashboardFramework","version","processName","processId"],"mappings":"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","file":"static/js/50.396a6d37.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n  PauseCircleOutlined,\r\n  PlayCircleOutlined,\r\n  PoweroffOutlined,\r\n  ReloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Dropdown, Menu, message, Tooltip } from \"antd\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport queryClient from \"components/utils/queryClient\";\r\nimport React from \"react\";\r\nimport { useMutation } from \"react-query3\";\r\nimport { Dashboard } from \"types\";\r\n\r\nexport default function PowerButton({ dashboard, allowedWithOneWayGitSync }: { dashboard: Dashboard, allowedWithOneWayGitSync?: boolean }) {\r\n  const { isLoading: isStarting, mutateAsync: start } = useMutation(\r\n    (dashboardId: number) =>\r\n      axios\r\n        .put(`/api/v1/dashboard/${dashboardId}/status`)\r\n        .then((res: AxiosResponse<Dashboard>) => res.data),\r\n    {\r\n      onError: (error: AxiosError, variables, context) => {\r\n        message.error(`Dashboard ${variables}; ${error?.message}`);\r\n      },\r\n      onSuccess: (data, variables) => {\r\n        //queryClient.setQueryData(`/dashboard/${variables}`, data);\r\n        queryClient.refetchQueries(`/dashboard/${variables}`);\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/memory`, {\r\n          stale: true,\r\n          active: true,\r\n          inactive: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/endpoints`, {\r\n          stale: true,\r\n          active: true,\r\n          inactive: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/sessions`, {\r\n          stale: true,\r\n          active: true,\r\n          inactive: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard`, { stale: true });\r\n      },\r\n    }\r\n  );\r\n\r\n  const { isLoading: isRestarting, mutateAsync: restart } = useMutation(\r\n    (dashboardId: number) =>\r\n      axios\r\n        .put(`/api/v1/dashboard/${dashboardId}/status/restart`)\r\n        .then((res: AxiosResponse<Dashboard>) => res.data),\r\n    {\r\n      onError: (error: AxiosError, variables, context) => {\r\n        message.error(`Dashboard ${variables}; ${error?.message}`);\r\n      },\r\n      onSuccess: (data, variables) => {\r\n        //queryClient.setQueryData(`/dashboard/${variables}`, data);\r\n        queryClient.refetchQueries(`/dashboard`, { stale: true });\r\n        queryClient.refetchQueries(`/dashboard/${variables}`, { stale: true });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/endpoints`, {\r\n          stale: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/sessions`, {\r\n          stale: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/memory`, {\r\n          stale: true,\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const { isLoading: isStoping, mutateAsync: stop } = useMutation(\r\n    (dashboardId: number) =>\r\n      axios\r\n        .delete(`/api/v1/dashboard/${dashboardId}/status`)\r\n        .then((res: AxiosResponse<Dashboard>) => res.data),\r\n    {\r\n      onError: (error: AxiosError, variables, context) => {\r\n        message.error(`Dashboard ${variables}; ${error?.message}`);\r\n      },\r\n      onSuccess: (data, variables) => {\r\n        //queryClient.setQueryData(`/dashboard/${variables}`, data);\r\n        queryClient.refetchQueries(`/dashboard`, { stale: true });\r\n        queryClient.refetchQueries(`/dashboard/${variables}`);\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/endpoints`, {\r\n          stale: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/sessions`, {\r\n          stale: true,\r\n        });\r\n        queryClient.refetchQueries(`/dashboard/diagnostics/memory`, {\r\n          stale: true,\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const onClick = (key) => {\r\n    return key === \"start\"\r\n      ? start(dashboard?.id)\r\n      : key === \"stop\"\r\n        ? stop(dashboard?.id)\r\n        : key === \"restart\"\r\n          ? restart(dashboard?.id)\r\n          : null;\r\n  };\r\n\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Operator\", \"Administrator\"]} allowedWithOneWayGitSync={allowedWithOneWayGitSync}>\r\n      <Tooltip title=\"Power\">\r\n        <Dropdown\r\n          getPopupContainer={() => document.getElementsByTagName(\"body\")[0]}\r\n          placement=\"bottomCenter\"\r\n          trigger={[\"click\"]}\r\n          overlay={() => (\r\n            <Menu onClick={({ key }) => onClick(key)} key={dashboard?.id}>\r\n              <Menu.Item\r\n                disabled={dashboard?.status === 1}\r\n                key=\"start\"\r\n                icon={<PlayCircleOutlined />}\r\n              >\r\n                Start\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                disabled={dashboard?.status === 0}\r\n                key=\"stop\"\r\n                icon={<PauseCircleOutlined />}\r\n              >\r\n                Stop\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                disabled={dashboard?.status === 0}\r\n                key=\"restart\"\r\n                icon={<ReloadOutlined />}\r\n              >\r\n                Restart\r\n              </Menu.Item>\r\n            </Menu>\r\n          )}\r\n        >\r\n          <Button\r\n            loading={isStoping || isStarting || isRestarting}\r\n            icon={<PoweroffOutlined />}\r\n            type=\"text\"\r\n          />\r\n        </Dropdown>\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Space, Tag, Col, Row, PageHeader as AntdPageHeader, Tooltip, Button, Switch } from \"antd\";\r\nimport { setStatusColor } from \"../utils/utils\";\r\nimport { CustomColumns, Dashboard } from \"../../types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Modal } from \"components/ui/Modal\";\r\nimport Page, { PageContent, PageHeader } from \"components/pages/Page\";\r\nimport PowerButton from \"./components/PowerButton\";\r\nimport { AppstoreOutlined, CodeSandboxOutlined, LockOutlined, ToolOutlined, UnlockOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DocsButton from \"components/docsButton\";\r\n\r\nconst Table = React.lazy(() => import(\"components/ui/Table\"));\r\nconst EditModal = React.lazy(() => import(\"components/ui/EditModal\"));\r\nconst DeleteButton = React.lazy(() => import(\"components/ui/DeleteButton\"));\r\nconst EditorButton = React.lazy(() => import(\"components/ui/EditorButton\"));\r\nconst TotalMemory = React.lazy(() => import(\"./components/TotalMemory\"));\r\nconst TotalEndpoints = React.lazy(() => import(\"./components/TotalEndpoints\"));\r\nconst TotalDashboards = React.lazy(() => import(\"./components/TotalRunning\"));\r\nconst TotalSessions = React.lazy(() => import(\"./components/TotalSessions\"));\r\nconst DashboardModal = React.lazy(() => import(\"./DashboardModal\"));\r\nconst DashboardViewButton = React.lazy(() => import(\"./components/DashboardViewButton\"));\r\n\r\nconst localStorageKey = 'ud-advanced';\r\n\r\nexport default function Dashboards() {\r\n  const defaultAdvanced = localStorage.getItem(localStorageKey) === 'true';\r\n  const [tags, setTags] = React.useState([]);\r\n  const [advanced, setAdvanced] = React.useState(defaultAdvanced);\r\n\r\n  const { data: dashboards, isLoading } = useQuery<Dashboard[]>(\"/dashboard\", {\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  const { data: endpoints } = useQuery<any>(\r\n    \"/dashboard/diagnostics/endpoints\",\r\n    {\r\n      enabled: !!dashboards,\r\n    }\r\n  );\r\n\r\n  const { data: sessions } = useQuery<any>(\"/dashboard/diagnostics/sessions\", {\r\n    enabled: !!dashboards,\r\n  });\r\n\r\n  const setAdvancedMode = (value: boolean) => {\r\n    localStorage.setItem(\"ud-advanced\", value.toString());\r\n    setAdvanced(value);\r\n  }\r\n\r\n\r\n\r\n  const columns: CustomColumns<Dashboard>[] = [\r\n    {\r\n      key: \"status\",\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      render: (text, record) => {\r\n        const status = setStatusColor(record.status);\r\n        let maintenance = <React.Fragment />;\r\n        if (record.maintenance) {\r\n          maintenance = <Tooltip title=\"Maintenance mode enabled\"><ToolOutlined style={{ marginRight: \"5px\" }} /></Tooltip>\r\n        }\r\n        return <>{maintenance}{status}</>\r\n      }\r\n    },\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      key: \"baseUrl\",\r\n      title: \"Url\",\r\n      dataIndex: \"baseUrl\",\r\n    },\r\n    {\r\n      key: \"role\",\r\n      title: \"Authentication\",\r\n      dataIndex: \"role\",\r\n      align: \"center\",\r\n      render: (value, record) => {\r\n        if (record.authenticated) {\r\n          return record.role?.length > 0\r\n            ? record?.role?.map((role) => (\r\n              <Tag key={role} color=\"blue\">\r\n                {role}\r\n              </Tag>\r\n            ))\r\n            : <Tooltip title=\"Authentication enabled\"><LockOutlined /></Tooltip>;\r\n        }\r\n\r\n        return <Tooltip title=\"Authentication disabled\"><UnlockOutlined /></Tooltip>\r\n      },\r\n    },\r\n    {\r\n      key: \"tags\",\r\n      title: \"Tags\",\r\n      dataIndex: \"tags\",\r\n      editable: false,\r\n      responsive: [\"xl\"],\r\n      render: (value, record: Dashboard) => {\r\n        return record.tag?.length > 0\r\n          ? record?.tag?.map((tag) => (\r\n            <Tag key={tag?.name} color={tag?.color} style={{ cursor: 'pointer' }} onClick={() => {\r\n              if (!tags.find(m => m.name === tag.name)) {\r\n                setTags([...tags, tag]);\r\n              }\r\n            }}>\r\n              {tag?.name}\r\n            </Tag>\r\n          ))\r\n          : null;\r\n      },\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            {advanced && <PowerButton dashboard={record} allowedWithOneWayGitSync={true} />}\r\n            <DashboardViewButton dashboard={record} />\r\n            <Modal>\r\n              <EditModal record={record} allowedWithOneWayGitSync={false} />\r\n            </Modal>\r\n            <EditorButton to={`${record?.id}`} allowedWithOneWayGitSync={false} />\r\n            <DeleteButton resource={record} allowedWithOneWayGitSync={false} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const dbs = dashboards?.filter((dashboard) => tags.length === 0 || (dashboard.tag && dashboard.tag?.find(m => tags.find(tag => tag.name === m.name))));\r\n\r\n  return (\r\n    <AntdPageHeader title=\"Dashboards\" subTitle=\"Advanced, highly customizable web pages built with PowerShell.\" extra={[\r\n      <Switch checkedChildren=\"Advanced\" unCheckedChildren=\"Basic\" onChange={e => setAdvancedMode(e)} checked={advanced} />,\r\n      <Link to=\"/admin/dashboards/frameworks\"><Button icon={<CodeSandboxOutlined />}>Frameworks</Button></Link>,\r\n      <Link to=\"/admin/dashboards/modules\"><Button icon={<ToolOutlined />}>Components</Button></Link>,\r\n      <Link to=\"/admin/dashboards/marketplace\"><Button icon={<AppstoreOutlined />}>Marketplace</Button></Link>,\r\n      <DocsButton url=\"userinterfaces/dashboards\" />\r\n    ]}>\r\n      <Page>\r\n        <PageHeader>\r\n          {advanced && (\r\n            <Row justify=\"space-between\" gutter={16}>\r\n              <Col flex={1}>\r\n                <TotalDashboards\r\n                  running={\r\n                    dashboards?.filter((dashboard) => dashboard.status === 1).length\r\n                  }\r\n                  total={dashboards?.length}\r\n                />\r\n              </Col>\r\n              <Col flex={1}>\r\n                <TotalMemory />\r\n              </Col>\r\n              <Col flex={1}>\r\n                <TotalEndpoints totalEndpoints={endpoints?.totalEndpoints} />\r\n              </Col>\r\n              <Col flex={1}>\r\n                <TotalSessions totalSessions={sessions?.totalSessions} />\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </PageHeader>\r\n        <PageContent>\r\n          <Table\r\n            title=\"Dashboards\"\r\n            actions={[\r\n              tags.map(tag => {\r\n                return (\r\n                  <Tag color={tag.color}\r\n                    closable\r\n                    onClose={() => {\r\n                      setTags(tags.filter(m => m.name !== tag.name));\r\n                    }}>{tag.name}</Tag>\r\n                )\r\n              }),\r\n              <Modal>\r\n                <DashboardModal />\r\n              </Modal>\r\n            ]}\r\n            rowExpandable={() => advanced}\r\n            expandedRowRender={record =>\r\n              <>\r\n                <p style={{ margin: 0 }}>{record.description}</p>\r\n                <p style={{ margin: 0 }}>Environment: {record?.environment === null ? \"Default\" : record?.environment}</p>\r\n                <p style={{ margin: 0 }}>File Path: {record.filePath}</p>\r\n                <p style={{ margin: 0 }}>Framework: {`${record.dashboardFramework?.name} [${record.dashboardFramework?.version}]`}</p>\r\n                <p style={{ margin: 0 }}>Process: {record?.processName ? `${record.processName} [${record.processId}]` : \"-\"}</p>\r\n              </>\r\n            }\r\n            data={dbs}\r\n            columns={columns}\r\n            loading={isLoading}\r\n          />\r\n        </PageContent>\r\n      </Page>\r\n    </AntdPageHeader >\r\n\r\n  );\r\n}\r\n"],"sourceRoot":""}
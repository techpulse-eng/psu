{"version":3,"sources":["components/ui/triggers/triggers.tsx"],"names":["TagLink","React","lazy","Table","EditModal","DeleteButton","NotLicensed","NewTriggerForm","Triggers","licensed","useAppStore","useQuery","enabled","refetchOnWindowFocus","triggers","data","isLoading","refetch","columns","key","dataIndex","title","render","text","record","to","triggerScript","value","setTriggerEventName","dashboard","script","protectRule","width","editable","allowedWithOneWayGitSync","resource","Feature","Automation","subTitle","extra","url","actions","loading","queryFn"],"mappings":"+JAAA,gJASMA,EAAUC,IAAMC,MAAK,kBAAM,oCAC3BC,EAAQF,IAAMC,MAAK,kBAAM,4CACzBE,EAAYH,IAAMC,MAAK,kBAAM,iCAC7BG,EAAeJ,IAAMC,MAAK,kBAAM,4CAChCI,EAAcL,IAAMC,MAAK,kBAAM,kCAC/BK,EAAiBN,IAAMC,MAAK,kBAAM,oCAEzB,SAASM,IAAY,IAC1BC,EAAaC,cAAbD,SADyB,EAEcE,YAC7C,WACA,CACEC,SAAS,EACTC,sBAAsB,IAJZC,EAFmB,EAEzBC,KAAgBC,EAFS,EAETA,UAAWC,EAFF,EAEEA,QAQ7BC,EAAoC,CACxC,CACEC,IAAK,OACLC,UAAW,OACXC,MAAO,QAET,CACEF,IAAK,gBACLC,UAAW,gBACXC,MAAO,UACPC,OAAQ,SAACC,EAAMC,GAAP,OACN,cAACxB,EAAD,CAASyB,GAAE,2CAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAQE,eAAiBH,KAAI,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAQE,kBAGrF,CACEP,IAAK,YACLC,UAAW,YACXC,MAAO,QACPC,OAAQ,SAACK,GAAD,OAAWC,YAAoBD,KAEzC,CACER,IAAK,cACLE,MAAO,OACPC,OAAQ,SAACK,EAAD,GAAgD,IAAtCE,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACnC,OAAqB,OAAdF,GAAiC,OAAXC,GAAmC,OAAhBC,EAAuB,SAAW,aAGtF,CACEZ,IAAK,cACLC,UAAW,cACXC,MAAO,eAET,CACEF,IAAK,WACLC,UAAW,WACXC,MAAO,WACPC,OAAQ,SAACC,EAAMC,GACb,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQM,QACH,cAAC9B,EAAD,CAASyB,GAAE,2CAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAQM,QAAUP,KAAI,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAQM,UAGnF,OAAIN,QAAJ,IAAIA,OAAJ,EAAIA,EAAQK,WACH,cAAC7B,EAAD,CAASyB,GAAE,mCAAuBD,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAQK,WAAaN,KAAI,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAQK,aAG9E,OAAIL,QAAJ,IAAIA,OAAJ,EAAIA,EAAQO,aACH,cAAC/B,EAAD,CAASyB,GAAE,0BAA6BF,KAAI,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAQO,mBAD/D,IAKJ,CACEC,MAAO,cACPZ,UAAW,UACXa,UAAU,EACVX,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAACpB,EAAD,CAAWoB,OAAQA,EAAQU,0BAA0B,MAEvD,cAAC7B,EAAD,CAAc8B,SAAUX,EAAQU,0BAA0B,UAMlE,OAAOzB,EAAS2B,IAAQC,YACtB,cAAC,IAAD,CAAYhB,MAAM,WAAWiB,SAAS,+DAA+DC,MAAO,CAC1G,cAAC,IAAD,CAAYC,IAAI,yBADlB,SAGE,cAACrC,EAAD,CACEkB,MAAM,WACNoB,QAAS,CACP,cAAC,IAAD,UACE,cAAClC,EAAD,OAGJW,QAASA,EACTH,KAAMD,EACN4B,QAAS1B,EACT2B,QAAS1B,MAIb,cAACX,EAAD,CAAae,MAAM","file":"static/js/149.57b0b91c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CustomColumns, Feature, Trigger } from \"../../../types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { PageHeader, Space } from \"antd\";\r\nimport { Modal } from \"../Modal\";\r\nimport { setTriggerEventName } from \"components/utils/utils\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport DocsButton from \"components/docsButton\";\r\n\r\nconst TagLink = React.lazy(() => import(\"../TagLink\"));\r\nconst Table = React.lazy(() => import(\"../Table\"));\r\nconst EditModal = React.lazy(() => import(\"components/ui/EditModal\"));\r\nconst DeleteButton = React.lazy(() => import(\"components/ui/DeleteButton\"));\r\nconst NotLicensed = React.lazy(() => import(\"../../pages/notLicensed\"));\r\nconst NewTriggerForm = React.lazy(() => import(\"./triggerModal\"));\r\n\r\nexport default function Triggers() {\r\n  const { licensed } = useAppStore();\r\n  const { data: triggers, isLoading, refetch } = useQuery<Trigger[]>(\r\n    \"/trigger\",\r\n    {\r\n      enabled: false,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const columns: CustomColumns<Trigger>[] = [\r\n    {\r\n      key: \"name\",\r\n      dataIndex: \"name\",\r\n      title: \"Name\",\r\n    },\r\n    {\r\n      key: \"triggerScript\",\r\n      dataIndex: \"triggerScript\",\r\n      title: \"Trigger\",\r\n      render: (text, record) => (\r\n        <TagLink to={`/admin/automation/scripts/${record?.triggerScript}`} text={record?.triggerScript} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"eventType\",\r\n      dataIndex: \"eventType\",\r\n      title: \"Event\",\r\n      render: (value) => setTriggerEventName(value),\r\n    },\r\n    {\r\n      key: \"triggerType\",\r\n      title: \"Type\",\r\n      render: (value, { dashboard, script, protectRule }) => {\r\n        return dashboard === null && script === null && protectRule === null ? \"Global\" : \"Resource\";\r\n      },\r\n    },\r\n    {\r\n      key: \"environment\",\r\n      dataIndex: \"environment\",\r\n      title: \"Environment\",\r\n    },\r\n    {\r\n      key: \"resource\",\r\n      dataIndex: \"resource\",\r\n      title: \"Resource\",\r\n      render: (text, record) => {\r\n        if (record?.script) {\r\n          return <TagLink to={`/admin/automation/scripts/${record?.script}`} text={record?.script} />\r\n        }\r\n\r\n        if (record?.dashboard) {\r\n          return <TagLink to={`/admin/dashboards/${record?.dashboard}`} text={record?.dashboard} />\r\n        }\r\n\r\n        if (record?.protectRule) {\r\n          return <TagLink to={`/admin/security/protect`} text={record?.protectRule} />\r\n        }\r\n      }\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      editable: false,\r\n      render: (text, record) => (\r\n        <Space>\r\n          <Modal>\r\n            <EditModal record={record} allowedWithOneWayGitSync={false} />\r\n          </Modal>\r\n          <DeleteButton resource={record} allowedWithOneWayGitSync={false} />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return licensed(Feature.Automation) ? (\r\n    <PageHeader title=\"Triggers\" subTitle=\"Trigger scripts when certain events happen within Universal.\" extra={[\r\n      <DocsButton url=\"automation/triggers\" />\r\n    ]}>\r\n      <Table\r\n        title=\"Triggers\"\r\n        actions={[\r\n          <Modal>\r\n            <NewTriggerForm />\r\n          </Modal>,\r\n        ]}\r\n        columns={columns}\r\n        data={triggers}\r\n        loading={isLoading}\r\n        queryFn={refetch}\r\n      />\r\n    </PageHeader>\r\n  ) : (\r\n    <NotLicensed title=\"Triggers are only available for licensed instances.\" />\r\n  );\r\n}\r\n"],"sourceRoot":""}
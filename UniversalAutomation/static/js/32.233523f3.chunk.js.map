{"version":3,"sources":["components/ui/live-log.tsx","components/api/api.tsx","components/editor/themes/EditorThemes.tsx","components/ui/Editor/snippets.js","components/ui/Editor/Editor.tsx"],"names":["LiveLog","traceId","React","useState","log","setLog","useEffect","connection","HubConnectionBuilder","withUrl","toRelativeUrl","withAutomaticReconnect","configureLogging","LogLevel","Debug","build","on","message","prev","start","then","send","catch","err","console","stop","ErrorBoundary","readonly","value","language","options","readOnly","UrlCard","lazy","VariablesCard","PowerShellCommandCard","PowerShellOutputCard","Api","id","useParams","endpoint","useQuery","enabled","data","useQueriesTyped","queryKey","queryFn","a","axios","get","refetchOnWindowFocus","parts","current","setCurrent","views","info","direction","size","style","width","resource","fullUrl","window","location","origin","url","title","height","bordered","headStyle","borderBottom","bodyStyle","paddingTop","tabList","key","tab","activeTabKey","onTabChange","tabProps","type","tabBarStyle","psuDark","base","inherit","rules","token","foreground","colors","psuLight","snippets","range","label","kind","documentation","insertText","loader","config","paths","vs","init","monaco","languages","registerCompletionItemProvider","provideCompletionItems","model","incomplete","suggestions","registerDocumentFormattingEditProvider","displayName","provideDocumentFormattingEdits","post","getValue","headers","text","startColumn","startLineNumber","endLineNumber","getLineCount","endColumn","getLineMaxColumn","triggerChars","getKind","CompletionItemKind","Text","Method","Folder","File","Property","triggerCharacters","position","context","findIndex","x","triggerCharacter","content","cursorPosition","getOffsetAt","map","help","EditorContext","createContext","CodeEditor","children","refetch","isReadOnly","setIsReadOnly","isSaving","setIsSaving","mutateAsync","useMutation","currentTheme","useThemeSwitcher","userData","useAppStore","useMonaco","copy","useClipboard","onSuccess","success","editorRef","useRef","onSave","useCallback","action","resourceInfo","self","startsWith","schemaName","preserveBOM","lineEnding","onError","error","variables","queryClient","refetchQueries","handleEditorDidMount","editor","register","setMonarchTokensProvider","tokenizer","root","getModel","onDidChangeContent","versionId","getVersionId","callback","delay","timer","args","clearTimeout","setTimeout","debounce","newVersionId","markerData","startLine","endLine","severity","MarkerSeverity","Error","setModelMarkers","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","parent","addAction","keybindings","F5","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","F8","trigger","defineTheme","setTheme","onCopy","zoomIn","zoomOut","useMemo","Provider","SaveButton","child","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","accessControls","allowedWithOneWayGitSync","cloneElement","props","icon","SaveFilled","onClick","callAll","BaseEditor","useContext","theme","loading","tip","onMount","FullEditor","showSave","actions","hideToolbar","usePageContext","padding","extra","ZoomInOutlined","ZoomOutOutlined","LoadingOutlined","CopyFilled","scriptBlock","settings","wordWrap","wrappingIndent","minimap","lineHeight","lineNumbersMinChars","scrollBeyondLastLine","hideCursorInOverviewRuler","overviewRulerLanes","overviewRulerBorder"],"mappings":"sQAMe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAAW,EACnBC,IAAMC,SAAS,IADI,mBAClCC,EADkC,KAC7BC,EAD6B,KAsBzC,OAnBAH,IAAMI,WAAU,WACZ,IAAMC,GAAa,IAAIC,KAClBC,QAAQC,YAAc,YACtBC,yBACAC,iBAAiBC,IAASC,OAC1BC,QAUL,OARAR,EAAWS,GAAG,WAAW,SAACC,GACtBZ,GAAO,SAAAa,GAAI,OAAIA,EAAI,UAAMD,EAAN,cAGvBV,EACKY,QACAC,MAAK,kBAAMb,EAAWc,KAAK,YAAapB,MACxCqB,OAAM,SAACC,GAAD,OAASC,QAAQpB,IAAI,gBAAiBmB,MAC1C,WAAQhB,EAAWkB,UAC3B,CAACxB,IAIA,cAAC,IAAMyB,cAAP,UACI,cAAC,IAAD,CAAYC,UAAU,EAAtB,SACI,cAAC,IAAD,CAAYC,MAAOxB,EAAKyB,SAAS,SAASC,QAAS,CAAEC,UAAU,W,8OCjBzEC,EAAUC,gBAAK,kBAAM,mCACrBC,EAAgBD,gBAAK,kBAAM,mCAC3BE,EAAwBF,gBAAK,kBAAM,mCACnCG,EAAuBH,gBAAK,kBAAM,mCAEzB,SAASI,IAAO,IACrBC,EAAOC,cAAPD,GAEME,EAAaC,YAAQ,oBACpBH,GACb,CAAEI,SAAS,IAFLC,KAHoB,EAQFC,YAAgB,CACxC,CACEC,SAAS,aAAD,OAAeP,EAAf,UACRQ,QAAQ,WAAD,4BAAE,sBAAAC,EAAA,sEACAC,IAAMC,IAAN,2BAAsCX,EAAtC,WADA,uCACmDK,MADnD,2CAAF,kDAAC,GAERD,UAAWJ,EACXY,sBAAsB,KANXC,EARa,oBAQnBR,KARmB,EAkBEzC,IAAMC,SAAS,QAlBjB,mBAkBrBiD,EAlBqB,KAkBZC,EAlBY,KA8BtBC,EAAQ,CACZC,KAAM,eAAC,IAAD,CAAOC,UAAU,WAAWC,KAAK,SAASC,MAAO,CAAEC,MAAO,QAA1D,UACJ,cAAC3B,EAAD,IACA,cAACE,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,OAEFhC,IAAK,cAAC,IAAD,CAASH,QAAO,mBAAcqC,MAGrC,OACE,cAAC,IAAD,CACEsB,SAAQ,2BACHpB,GADG,IAENW,QACAU,QAAQ,GAAD,OAAKC,OAAOC,SAASC,QAArB,cAA8BxB,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAUyB,OAJnD,SAOE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYC,MAAM,SAASC,OAAO,4BAGtC,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,UAAU,EACVC,UAAW,CAAEC,aAAc,EAAGH,OAAQ,IACtCI,UAAW,CAAEC,WAAY,IACzBC,QAxCG,CACX,CACEC,IAAK,OACLC,IAAK,QAEP,CACED,IAAK,MACLC,IAAK,QAkCCC,aAAcxB,EACdyB,YAAa,SAACH,GAAD,OAASrB,EAAWqB,IACjCI,SAAU,CACRC,KAAM,OACNC,YAAa,CAAEb,OAAQ,KAT3B,SAYGb,EAAMF,c,+UCpFb6B,EAAuC,CAC3CC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CAAEC,MAAO,eAAgBC,WAAY,UACrC,CAAED,MAAO,iBAAkBC,WAAY,UACvC,CAAED,MAAO,iBAAkBC,WAAY,UACvC,CAAED,MAAO,eAAgBC,WAAY,WAGvCC,OAAQ,CACN,yBAA0B,UAC1B,yBAA0B,UAC1B,oBAAqB,UACrB,oBAAqB,YACrB,8BAA+B,UAC/B,iCAAkC,UAClC,6BAA8B,YAI5BC,EAAwC,CAC5CN,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CAAEC,MAAO,eAAgBC,WAAY,UACrC,CAAED,MAAO,iBAAkBC,WAAY,UACvC,CAAED,MAAO,iBAAkBC,WAAY,UACvC,CAAED,MAAO,eAAgBC,WAAY,WAGvCC,OAAQ,CACN,yBAA0B,UAC1B,yBAA0B,UAC1B,oBAAqB,UACrB,oBAAqB,UACrB,8BAA+B,UAC/B,iCAAkC,UAClC,6BAA8B,Y,+DCQnBE,EAhDE,CACb,CACIC,MAAO,KACPC,MAAO,mBACPC,KAAM,GACNC,cAAe,uBACfC,WAAY,iEAEhB,CACIJ,MAAO,KACPC,MAAO,+BACPC,KAAM,GACNC,cAAe,8BACfC,WAAW,sWAcf,CACIJ,MAAO,KACPC,MAAO,kCACPC,KAAM,GACNC,cAAe,iCACfC,WAAW,oZ,OCHnBC,IAAOC,OAAO,CAAEC,MAAO,CAAEC,GAAIxF,YAAc,gBAC3CqF,IAAOI,OAAO/E,MAAK,SAAAgF,GACjBA,EAAOC,UAAUC,+BAA+B,aAAc,CAC5DC,uBAAuB,WAAD,4BAAE,WAAOC,EAAO1E,EAASuD,GAAvB,SAAAtC,EAAA,+EAEf,CACL0D,YAAY,EACZC,YAAajB,IAJO,2CAAF,uDAAC,KASzBW,EAAOC,UAAUM,uCAAuC,aAAc,CACpEC,YAAa,aACbC,+BAA+B,WAAD,4BAAE,WAAOL,EAAO1E,EAASuD,GAAvB,iBAAAtC,EAAA,sEACTC,IAAM8D,KAAKpG,YAAc,yBAA0B8F,EAAMO,WAAY,CACxFC,QAAS,CACP,eAAgB,gBAHU,uBACxBrE,EADwB,EACxBA,KADwB,kBAOvB,CAAC,CACNsE,KAAMtE,EACN+C,MAAO,CACLwB,YAAa,EACbC,gBAAiB,EACjBC,cAAeZ,EAAMa,eACrBC,UAAWd,EAAMe,iBAAiBf,EAAMa,oBAbd,2CAAF,uDAAC,KAmBjC,IAAMG,EAAe,CAAC,IAAK,IAAK,KAAM,IAAK,IAAK,KAE1CC,EAAU,SAAC1C,GACf,OAAQA,GACN,KAAK,EAAG,OAAOqB,EAAOC,UAAUqB,mBAAmBC,KACnD,KAAK,EAAG,OAAOvB,EAAOC,UAAUqB,mBAAmBE,OACnD,KAAK,EAAG,OAAOxB,EAAOC,UAAUqB,mBAAmBG,OACnD,KAAK,EAAG,OAAOzB,EAAOC,UAAUqB,mBAAmBI,KACnD,KAAK,EAAG,OAAO1B,EAAOC,UAAUqB,mBAAmBK,SACnD,KAAK,EAAG,OAAO3B,EAAOC,UAAUqB,mBAAmBE,OACnD,KAAK,EACL,KAAK,EAAG,OAAOxB,EAAOC,UAAUqB,mBAAmBK,SACnD,QAAS,OAAO3B,EAAOC,UAAUqB,mBAAmBC,OAIxDvB,EAAOC,UAAUC,+BAA+B,aAAc,CAC5D0B,kBAAmBR,EACnBjB,uBAAuB,WAAD,4BAAE,WAAOC,EAAOyB,EAAUC,GAAxB,mBAAAnF,EAAA,0DAC+C,IAAjEyE,EAAaW,WAAU,SAAAC,GAAC,OAAIA,IAAMF,EAAQG,oBADxB,gCAECrF,IAAM8D,KAAKpG,YAAc,2BAA4B,CACxE4H,QAAS9B,EAAMO,WACfwB,eAAgB/B,EAAMgC,YAAYP,KAJhB,uBAEdtF,EAFc,EAEdA,KAKA+D,EAPc,OAOA/D,QAPA,IAOAA,OAPA,EAOAA,EAAM8F,KAAI,SAAAL,GAC5B,OAAe,IAAXA,EAAErD,MAAyB,IAAXqD,EAAErD,KAEb,CACLe,WAAYsC,EAAEzC,MACdA,MAAOyC,EAAEzC,MACTE,cAAeuC,EAAEM,KACjB9C,KAAM6B,EAAQW,EAAErD,OAIb,CACLe,WAAYsC,EAAEnB,KACdtB,MAAOyC,EAAEnB,KACTpB,cAAeuC,EAAEM,KACjB9C,KAAM6B,EAAQW,EAAErD,UAtBA,kBA0Bb,CACL0B,YAAY,EACZC,gBA5BkB,gCAgCf,MAhCe,2CAAF,uDAAC,QAoD3B,IAAMiC,EAAgBzI,IAAM0I,cAAkC,MAE9D,SAASC,EAAT,GAA0E,IAApDC,EAAmD,EAAnDA,SAAmD,IAAzCC,eAAyC,MAA/B,aAA+B,MAApBpH,gBAAoB,WACnCzB,IAAMC,SAASwB,GADoB,mBAChEqH,EADgE,KACpDC,EADoD,OAEvC/I,IAAMC,UAAS,GAFwB,mBAEhE+I,EAFgE,KAEtDC,EAFsD,KAG/DC,EAAgBC,cAAhBD,YACAE,EAAiBC,cAAjBD,aACAE,EAAaC,cAAbD,SACFpD,EAASsD,cAEPC,EAASC,YAAa,CAC5BC,UAAW,SAAC5C,GAAD,OAAUhG,IAAQ6I,QAAR,cADfH,KAIFI,EAAY7J,IAAM8J,OAAqC,MAGvDC,EAAS/J,IAAMgK,YAAN,uCACb,WAAOxF,EAAayF,EAAavG,GAAjC,qCAAAb,EAAA,6DAEEoG,GAAY,GACZF,GAAc,GAEF,YAARvE,IACFd,EAAQ,QAAR,OAAsBmG,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAW3G,eAAjC,aAAsB,EAAoB2D,YAGhC,cAARrC,IACFA,EAAG,OAAGd,QAAH,IAAGA,GAAH,UAAGA,EAAUwG,oBAAb,aAAG,EAAwBC,KAC9BzG,EAAQ,YAAR,OAA0BmG,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAW3G,eAArC,aAA0B,EAAoB2D,YAGpC,eAARrC,IACFA,EAAG,OAAGd,QAAH,IAAGA,GAAH,UAAGA,EAAUwG,oBAAb,aAAG,EAAwBC,KAC9BzG,EAAQ,QAAR,OAAsBmG,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAW3G,eAAjC,aAAsB,EAAoB2D,YAGxCrC,EAAI4F,WAAW,WACjB5F,EAAG,OAAGd,QAAH,IAAGA,GAAH,UAAGA,EAAUwG,oBAAb,aAAG,EAAwBC,KAC9BzG,EAAQ,OAAR,OAAqBmG,QAArB,IAAqBA,GAArB,UAAqBA,EAAW3G,eAAhC,aAAqB,EAAoB2D,YAG/B,cAARrC,IACFA,EAAM,6BACNd,EAAQ,SAAR,OAAuBmG,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAW3G,eAAlC,aAAuB,EAAoB2D,YAGzCrC,EAAI4F,WAAW,aACjB5F,EAAG,OAAGd,QAAH,IAAGA,GAAH,UAAGA,EAAUwG,oBAAb,aAAG,EAAwBC,KAC9BzG,EAAQ,QAAR,OAAsBmG,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAW3G,eAAjC,aAAsB,EAAoB2D,YAGD,mBAA/B,OAARnD,QAAQ,IAARA,GAAA,UAAAA,EAAUwG,oBAAV,eAAwBG,cAC1B3G,EAAQ,QAAR,OAAsBmG,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAW3G,eAAjC,aAAsB,EAAoB2D,SAAS,CACjDyD,aAAa,EACbC,WAAY,UArClB,UAyCQrB,EACJ,CAAE1E,MAAKyF,SAAQvG,YACf,CACE8G,QAAS,SAACC,GACRxB,GAAY,GACZF,GAAc,GACdhI,IAAQ0J,MAAMA,EAAM1J,UAEtB4I,UAAW,SAAClH,EAAMiI,GAChBzB,GAAY,GACZF,GAAc,GACdhI,IAAQ6I,QAAQ,kBAChBe,IAAYC,eAAepG,GAC3BqE,OAtDR,4CADa,0DA4Db,CAACK,EAAaL,IAIVgC,EAAuB7K,IAAMgK,aACjC,SAACc,EAAQ5E,EAAQxC,GACfmG,EAAU3G,QAAU4H,EAEpB5E,EAAOC,UAAU4E,SAAS,CAAE3I,GAAI,WAChC8D,EAAOC,UAAU6E,yBAAyB,SAAU,CAClDC,UAAW,CACTC,KAAM,CACJ,CAAC,YAAa,gBACd,CAAC,cAAe,kBAChB,CAAC,cAAe,kBAChB,CAAC,YAAa,gBACd,CAAC,kBAAmB,mBAK1B,IAQM5E,EAAQwE,EAAOK,WAChB1J,GACH6E,EAAM8E,oBAAmB,WACvB,IAAIC,EAAY/E,EAAMgF,gBAXT,SAACC,EAAUC,GAC1B,IAAIC,EACJ,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBC,aAAaF,GACbA,EAAQG,YAAW,kBAAML,EAAQ,WAAR,EAAYG,KAAOF,IAQ5CK,CAAQ,sBAAC,kCAAAhJ,EAAA,yDACHiJ,EAAexF,EAAMgF,eACrBD,IAAcS,EAFX,iEAIchJ,IAAM8D,KAAKpG,YAAc,wBAAyB8F,EAAMO,WAAY,CACvFC,QAAS,CACP,eAAgB,gBANb,gBAIDrE,EAJC,EAIDA,KAMAsJ,EAAatJ,EAAK8F,KAAI,SAAAL,GAC1B,MAAO,CACLlB,YAAakB,EAAE/C,MAAM6B,YACrBI,UAAWc,EAAE/C,MAAMiC,UACnBH,gBAAiBiB,EAAE/C,MAAM6G,UACzB9E,cAAegB,EAAE/C,MAAM8G,QACvBC,SAAUC,IAAeC,MACzBrL,QAASmH,EAAEnH,YAIfmF,EAAO4E,OAAOuB,gBAAgB/F,EAAO,aAAcyF,GArB5C,2CAsBN,IAtBHF,MA2BAnI,GACFoH,EAAOwB,WAAWpG,EAAOqG,OAAOC,QAAUtG,EAAOuG,QAAQC,OAAO,wBAAM3C,EAAM,OAACrG,QAAD,IAACA,GAAD,UAACA,EAAUwG,oBAAX,aAAC,EAAwByC,OAAQ,SAAUjJ,MAGzHoH,EAAO8B,UAAU,CAEfxK,GAAI,UAGJqD,MAAO,UAGPoH,YAAa,CAAC3G,EAAOuG,QAAQK,IAG7BC,aAAc,KAGdC,kBAAmB,KAEnBC,mBAAoB,aAEpBC,iBAAkB,IAClBC,IAAK,SAAUC,GAEb,OADAvE,IACO,QAGXiC,EAAO8B,UAAU,CAEfxK,GAAI,SAGJqD,MAAO,SAGPoH,YAAa,CAAC3G,EAAOuG,QAAQY,IAG7BN,aAAc,KAGdC,kBAAmB,KAEnBC,mBAAoB,aAEpBC,iBAAkB,IAElBC,IAAK,WAOH,OANArC,EAAOwC,QACL,YACA,+BACA,MAGK,UAIb,CAACzE,EAASkB,EAAQtI,IAGpBzB,IAAMI,WAAU,WACV8F,IACFA,EAAO4E,OAAOyC,YAAY,WAAYxI,GACtCmB,EAAO4E,OAAOyC,YAAY,YAAajI,GACvCY,EAAO4E,OAAO0C,SACK,SAAjBpE,EAA0B,WAAa,gBAG1C,CAACA,EAAclD,IAElB,IAAMuH,EAASzN,IAAMgK,aAAY,wBAAMP,EAAI,OAACI,QAAD,IAACA,GAAD,UAACA,EAAW3G,eAAZ,aAAC,EAAoB2D,cAAa,CAC3E4C,IAEIiE,EAAS,+BACb7D,QADa,IACbA,GADa,UACbA,EAAW3G,eADE,aACb,EAAoBoK,QAAQ,WAAY,2BAA4B,KAChEK,EAAU,+BACd9D,QADc,IACdA,GADc,UACdA,EAAW3G,eADG,aACd,EAAoBoK,QAAQ,WAAY,4BAA6B,KAEjE5L,EAAQ1B,IAAM4N,SAClB,iBAAO,CACL9E,aACAC,gBACAgB,SACA7D,SACA4E,OAAM,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAW3G,QACnBoG,WACAuB,uBACAzB,eACAqE,SACAC,SACAC,UACA3E,cAEF,CACEI,EACAyB,EACA/B,EACA5C,EACAuH,EACA1D,EACAT,EACAN,IAIJ,OACE,cAACP,EAAcoF,SAAf,CAAwBnM,MAAOA,EAA/B,SAAuCkH,IAI3C,SAASkF,EAAT,GAAoD,IAAD,MAAnBC,EAAmB,EAA7BnF,SAAiBlF,EAAY,EAAZA,SACrC,OACE,cAAC,IAAD,CAAWsK,cAAe,CAAC,gBAAiB,YAAaC,uBAAwBC,IAAmBC,KAAMC,eAAc,OAAE1K,QAAF,IAAEA,OAAF,EAAEA,EAAU0K,eAAgBC,0BAA0B,EAA9K,SACE,cAAC,IAAD,CAASrK,MAAM,OAAf,SACGhE,IAAMsO,aAAaP,EAAO,CACzBlJ,MAAW,OAALkJ,QAAK,IAALA,GAAA,UAAAA,EAAOQ,aAAP,eAAc1J,OAAQ,OAC5B2J,MAAW,OAALT,QAAK,IAALA,GAAA,UAAAA,EAAOQ,aAAP,eAAcC,OAAQ,cAACC,EAAA,EAAD,IAC5BC,QAASC,YAAO,OAACZ,QAAD,IAACA,GAAD,UAACA,EAAOQ,aAAR,aAAC,EAAcG,eAOzC,SAASE,EAAT,GAAgD,IAAvBL,EAAsB,sBACEvO,IAAM6O,WACnDpG,GADMW,EADqC,EACrCA,aAAcyB,EADuB,EACvBA,qBAGtB,OACE,cAAC,IAAD,aACEiE,MAAwB,SAAjB1F,EAA0B,WAAa,YAC9CzH,SAAS,aACToN,QAAS,cAAC,IAAD,CAAMC,IAAI,uBACnB/K,OAAO,+BACPgL,QAAS,SAACnE,EAAQ5E,GAAT,OAAoB2E,EAAqBC,EAAQ5E,EAAQ,QAC9DqI,IAcV,SAASW,EAAT,GAOqB,IANnBlL,EAMkB,EANlBA,MACApC,EAKkB,EALlBA,QAKkB,IAJlBuN,gBAIkB,SAHlBC,EAGkB,EAHlBA,QACAC,EAEkB,EAFlBA,YACGd,EACe,wEASdvO,IAAM6O,WAAWpG,GAPnBoC,EAFgB,EAEhBA,qBACAzB,EAHgB,EAGhBA,aACAW,EAJgB,EAIhBA,OACA0D,EALgB,EAKhBA,OACAC,EANgB,EAMhBA,OACAC,EAPgB,EAOhBA,QACA3E,EARgB,EAQhBA,SAEIhB,EAAUsH,cACV5L,EAAQ,OAAGsE,QAAH,IAAGA,OAAH,EAAGA,EAAStE,SAG1B,OACE,cAAC,IAAD,CACEQ,UAAU,EACVG,UAAW,CAAEkL,QAAS,GACtBvL,MAAOA,EACPwL,OACGH,GAAe,eAAC,WAAD,WACbD,EACD,cAAC,IAAD,CAASpL,MAAM,UAAf,SACE,cAAC,IAAD,CACEa,KAAK,OACL2J,KAAM,cAACiB,EAAA,EAAD,IACNf,QAAS,kBAAMhB,SAGnB,cAAC,IAAD,CAAS1J,MAAM,WAAf,SACE,cAAC,IAAD,CACEa,KAAK,OACL2J,KAAM,cAACkB,EAAA,EAAD,IACNhB,QAAS,kBAAMf,SAGlBwB,GACC,cAACrB,EAAD,CAAYpK,SAAUA,EAAtB,SACE,cAAC,IAAD,CACE8K,KAAMxF,EAAW,cAAC2G,EAAA,EAAD,IAAsB,KACvCjB,QAASC,aAAQ,wBACf5E,EAAM,OAACrG,QAAD,IAACA,GAAD,UAACA,EAAUwG,oBAAX,aAAC,EAAwByC,OAAQ,SAAUjJ,UAKzD,cAAC,IAAD,CAASM,MAAM,OAAf,SACE,cAAC,IAAD,CACEa,KAAK,OACL2J,KAAM,cAACoB,EAAA,EAAD,IACNlB,QAAS,kBAAMjB,SAGnB,cAAC,IAAD,UACE,cAAC,IAAD,SAvCR,SA4CE,cAACmB,EAAD,yBACEjN,SAAS,aAETsC,OAAO,+BACPvC,OAAe,OAARgC,QAAQ,IAARA,OAAA,EAAAA,EAAU0E,WAAV,OAAqB1E,QAArB,IAAqBA,OAArB,EAAqBA,EAAUmM,eAA/B,OAA8CnM,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAUoM,YAAxD,OAAoEvB,QAApE,IAAoEA,OAApE,EAAoEA,EAAO7M,OAClFuN,QAAS,SAACnE,EAAQ5E,GAAT,OAAoB2E,EAAqBC,EAAQ5E,EAAQxC,IAClEoL,MAAwB,SAAjB1F,EAA0B,WAAa,YAC9C2F,SAAc,OAALR,QAAK,IAALA,OAAA,EAAAA,EAAOQ,UAAW,cAAC,IAAD,CAAMC,IAAI,wBACjCT,GARN,IASE3M,QAAO,aACLmO,SAAU,KACVC,eAAgB,OAChBC,QAAS,CACPzN,SAAS,GAEX0N,WAAY,GACZC,oBAAqB,EACrBC,sBAAsB,EACtBC,2BAA2B,EAC3BC,mBAAoB,EACpBC,qBAAqB,GAClB3O","file":"static/js/32.233523f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Alert } from \"antd\";\r\nimport { HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { BaseEditor, CodeEditor } from \"components/ui/Editor/Editor\";\r\nimport { toRelativeUrl } from \"components/utils/utils\";\r\n\r\nexport default function LiveLog({ traceId }) {\r\n    const [log, setLog] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        const connection = new HubConnectionBuilder()\r\n            .withUrl(toRelativeUrl(`/loghub`))\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Debug)\r\n            .build();\r\n\r\n        connection.on(\"sendLog\", (message) => {\r\n            setLog(prev => prev + `${message}\\r\\n`);\r\n        });\r\n\r\n        connection\r\n            .start()\r\n            .then(() => connection.send(\"subscribe\", traceId))\r\n            .catch((err) => console.log(\"signalr error\", err));\r\n        return () => { connection.stop() };\r\n    }, [traceId]);\r\n\r\n\r\n    return (\r\n        <Alert.ErrorBoundary>\r\n            <CodeEditor readonly={true}>\r\n                <BaseEditor value={log} language=\"psulog\" options={{ readOnly: true }} />\r\n            </CodeEditor>\r\n        </Alert.ErrorBoundary>\r\n    );\r\n}\r\n","import React, { lazy } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Endpoint, Part } from \"types\";\r\nimport Page, {\r\n  LeftPanel,\r\n  RightPanel,\r\n  PageContentBase,\r\n} from \"components/pages/Page\";\r\nimport { Card, Space } from \"antd\";\r\nimport { CodeEditor, FullEditor } from \"components/ui/Editor/Editor\";\r\nimport { useQueriesTyped } from \"components/utils/queryClient\";\r\nimport { useQuery } from \"react-query3\";\r\nimport axios from \"axios\";\r\nimport LiveLog from \"./../ui/live-log\";\r\nconst UrlCard = lazy(() => import(\"./components/url-card\"));\r\nconst VariablesCard = lazy(() => import(\"./components/variables-card\"));\r\nconst PowerShellCommandCard = lazy(() => import(\"./components/command-card\"));\r\nconst PowerShellOutputCard = lazy(() => import(\"./components/output-card\"));\r\n\r\nexport default function Api() {\r\n  const { id } = useParams();\r\n\r\n  const { data: endpoint } = useQuery<Endpoint>(\r\n    `/endpoint/${id}`,\r\n    { enabled: false }\r\n  );\r\n\r\n  const [{ data: parts }] = useQueriesTyped([\r\n    {\r\n      queryKey: `/endpoint/${id}/parts`,\r\n      queryFn: async () =>\r\n        (await axios.get<Part[]>(`/api/v1/endpoint/${id}/parts`)).data,\r\n      enabled: !!id,\r\n      refetchOnWindowFocus: false,\r\n    },\r\n  ]);\r\n\r\n  const [current, setCurrent] = React.useState(\"info\")\r\n  const tabs = [\r\n    {\r\n      key: \"info\",\r\n      tab: \"Info\",\r\n    },\r\n    {\r\n      key: \"log\",\r\n      tab: \"Log\",\r\n    },\r\n  ];\r\n\r\n  const views = {\r\n    info: <Space direction=\"vertical\" size=\"middle\" style={{ width: \"100%\" }}>\r\n      <UrlCard />\r\n      <VariablesCard />\r\n      <PowerShellCommandCard />\r\n      <PowerShellOutputCard />\r\n    </Space>,\r\n    log: <LiveLog traceId={`endpoint:${id}`} />,\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      resource={{\r\n        ...endpoint,\r\n        parts,\r\n        fullUrl: `${window.location.origin}${endpoint?.url}`,\r\n      }}\r\n    >\r\n      <PageContentBase>\r\n        <LeftPanel>\r\n          <CodeEditor>\r\n            <FullEditor title=\"Editor\" height=\"calc(100vh - 200px)\" />\r\n          </CodeEditor>\r\n        </LeftPanel>\r\n        <RightPanel>\r\n          <Card\r\n            bordered={false}\r\n            headStyle={{ borderBottom: 0, height: 64 }}\r\n            bodyStyle={{ paddingTop: 24 }}\r\n            tabList={tabs}\r\n            activeTabKey={current}\r\n            onTabChange={(key) => setCurrent(key)}\r\n            tabProps={{\r\n              type: \"line\",\r\n              tabBarStyle: { height: 64 },\r\n            }}\r\n          >\r\n            {views[current]}\r\n          </Card>\r\n        </RightPanel>\r\n      </PageContentBase>\r\n    </Page>\r\n  );\r\n}\r\n","import { editor } from \"monaco-editor\";\r\n\r\nconst psuDark: editor.IStandaloneThemeData = {\r\n  base: \"vs-dark\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#060606\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#060606\",\r\n    \"editor.foreground\": \"#ffffff4d\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#141414\",\r\n    \"editor.selectionBackground\": \"#141414\",\r\n  },\r\n};\r\n\r\nconst psuLight: editor.IStandaloneThemeData = {\r\n  base: \"vs\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#E1ECF9\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#ffffff\",\r\n    \"editor.foreground\": \"#000000\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#c2c2c2\",\r\n    \"editor.selectionBackground\": \"#e1ecf8\",\r\n  },\r\n};\r\n\r\nexport { psuDark, psuLight };\r\n","const snippets = [\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Modal',\r\n        kind: 27,\r\n        documentation: 'Creates a new modal.',\r\n        insertText: 'Show-UDModal -Content {\\n\\tNew-UDTypography \"Hello, World\"\\n}'\r\n    },\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Chart with Colors',\r\n        kind: 27,\r\n        documentation: 'Creates a chart with colors',\r\n        insertText: `$Data = Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 10 \r\n$Options = @{\r\n    Type = 'bar'\r\n    Data = $Data\r\n    BackgroundColor = 'Red'\r\n    BorderColor = '#c61d4a'\r\n    HoverBackgroundColor = 'Blue'\r\n    HoverBorderColor = '#451dc6'\r\n    DataProperty = 'CPU'\r\n    LabelProperty = 'ProcessName'\r\n}\r\n\r\nNew-UDChartJS @Options`\r\n    },\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Form with validation',\r\n        kind: 27,\r\n        documentation: 'Creates a form with validation',\r\n        insertText: `New-UDForm -Content {\r\nNew-UDTextbox -Id 'txtValidateForm'\r\n} -OnValidate {\r\n    $FormContent = $EventData\r\n\r\n    if ($FormContent.txtValidateForm -eq $null -or $FormContent.txtValidateForm -eq '') {\r\n        New-UDFormValidationResult -ValidationError \"txtValidateForm is required\"\r\n    } else {\r\n        New-UDFormValidationResult -Valid\r\n    }\r\n} -OnSubmit {\r\n    Show-UDToast -Message $Body\r\n}`\r\n    },\r\n];\r\n\r\nexport default snippets;\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Card, message, Spin, Tooltip } from \"antd\";\r\nimport { callAll, toRelativeUrl } from \"components/utils/utils\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport {\r\n  CopyFilled,\r\n  SaveFilled,\r\n  ZoomInOutlined,\r\n  ZoomOutOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport Editor, {\r\n  useMonaco,\r\n  EditorProps,\r\n  loader,\r\n  Monaco,\r\n} from \"@monaco-editor/react\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { psuDark, psuLight } from \"../../editor/themes/EditorThemes\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { AccessControlTypes, Accessible } from \"types\";\r\nimport { editor, MarkerSeverity } from \"monaco-editor\";\r\nimport { LeftPanelSizeButton, usePageContext } from \"components/pages/Page\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { CardProps } from \"antd/es\";\r\nimport axios from \"axios\";\r\nimport snippets from './snippets';\r\n\r\nloader.config({ paths: { vs: toRelativeUrl(\"/admin/vs\") } });\r\nloader.init().then(monaco => {\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    provideCompletionItems: async (model, options, token) => {\r\n\r\n      return {\r\n        incomplete: false,\r\n        suggestions: snippets\r\n      }\r\n    }\r\n  });\r\n\r\n  monaco.languages.registerDocumentFormattingEditProvider(\"powershell\", {\r\n    displayName: \"PowerShell\",\r\n    provideDocumentFormattingEdits: async (model, options, token) => {\r\n      let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/format`), model.getValue(), {\r\n        headers: {\r\n          'content-type': 'text/plain'\r\n        }\r\n      });\r\n\r\n      return [{\r\n        text: data,\r\n        range: {\r\n          startColumn: 1,\r\n          startLineNumber: 1,\r\n          endLineNumber: model.getLineCount(),\r\n          endColumn: model.getLineMaxColumn(model.getLineCount())\r\n        }\r\n      }];\r\n    }\r\n  })\r\n\r\n  const triggerChars = [\"$\", \"-\", \"\\\\\", \"/\", \":\", \".\"]\r\n\r\n  const getKind = (type: number) => {\r\n    switch (type) {\r\n      case 0: return monaco.languages.CompletionItemKind.Text;\r\n      case 2: return monaco.languages.CompletionItemKind.Method;\r\n      case 3: return monaco.languages.CompletionItemKind.Folder;\r\n      case 4: return monaco.languages.CompletionItemKind.File;\r\n      case 5: return monaco.languages.CompletionItemKind.Property;\r\n      case 6: return monaco.languages.CompletionItemKind.Method;\r\n      case 7: return monaco.languages.CompletionItemKind.Property;\r\n      case 9: return monaco.languages.CompletionItemKind.Property;\r\n      default: return monaco.languages.CompletionItemKind.Text;\r\n    }\r\n  }\r\n\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    triggerCharacters: triggerChars,\r\n    provideCompletionItems: async (model, position, context) => {\r\n      if (triggerChars.findIndex(x => x === context.triggerCharacter) !== -1) {\r\n        let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/complete`), {\r\n          content: model.getValue(),\r\n          cursorPosition: model.getOffsetAt(position)\r\n        });\r\n\r\n        const suggestions = data?.map(x => {\r\n          if (x.type === 3 || x.type === 4) {\r\n\r\n            return {\r\n              insertText: x.label,\r\n              label: x.label,\r\n              documentation: x.help,\r\n              kind: getKind(x.type),\r\n            }\r\n          }\r\n\r\n          return {\r\n            insertText: x.text,\r\n            label: x.text,\r\n            documentation: x.help,\r\n            kind: getKind(x.type),\r\n          }\r\n        });\r\n\r\n        return {\r\n          incomplete: false,\r\n          suggestions\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  });\r\n})\r\n\r\ninterface EditorContextProps {\r\n  isReadOnly: boolean;\r\n  setIsReadOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n  onSave: (key: any, action: any, resource: any) => Promise<void>;\r\n  monaco: Monaco;\r\n  editor: editor.IStandaloneCodeEditor;\r\n  userData: Accessible;\r\n  handleEditorDidMount: (editor: any, monaco: any, resource: any) => void;\r\n  currentTheme: string;\r\n  onCopy: () => void;\r\n  zoomIn: () => void;\r\n  zoomOut: () => void;\r\n  isSaving: boolean;\r\n}\r\n\r\nconst EditorContext = React.createContext<EditorContextProps>(null);\r\n\r\nfunction CodeEditor({ children, refetch = () => { }, readonly = false }) {\r\n  const [isReadOnly, setIsReadOnly] = React.useState(readonly);\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const { mutateAsync } = useMutation<any>();\r\n  const { currentTheme } = useThemeSwitcher();\r\n  const { userData } = useAppStore();\r\n  const monaco = useMonaco();\r\n\r\n  const { copy } = useClipboard({\r\n    onSuccess: (text) => message.success(`Copied.`),\r\n  });\r\n\r\n  const editorRef = React.useRef<editor.IStandaloneCodeEditor>(null);\r\n\r\n\r\n  const onSave = React.useCallback(\r\n    async (key: string, action: any, resource: any) => {\r\n\r\n      setIsSaving(true);\r\n      setIsReadOnly(true);\r\n\r\n      if (key === \"/script\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/endpoint\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"scriptBlock\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/dashboard\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith(\"/role\")) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"policy\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/settings\") {\r\n        key = \"/settings/authentication/1\";\r\n        resource[\"settings\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith('/module')) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (resource?.resourceInfo?.schemaName === \"configuration\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue({\r\n          preserveBOM: true,\r\n          lineEnding: \"\\r\\n\",\r\n        });\r\n      }\r\n\r\n      await mutateAsync(\r\n        { key, action, resource },\r\n        {\r\n          onError: (error) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.error(error.message);\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.success(\"Changes saved!\");\r\n            queryClient.refetchQueries(key);\r\n            refetch()\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch]\r\n  );\r\n\r\n\r\n  const handleEditorDidMount = React.useCallback(\r\n    (editor, monaco, resource) => {\r\n      editorRef.current = editor;\r\n\r\n      monaco.languages.register({ id: \"psulog\" });\r\n      monaco.languages.setMonarchTokensProvider(\"psulog\", {\r\n        tokenizer: {\r\n          root: [\r\n            [/\\[error.*/, \"custom-error\"],\r\n            [/\\[verbose.*/, \"custom-verbose\"],\r\n            [/\\[warning.*/, \"custom-warning\"],\r\n            [/\\[debug.*/, \"custom-debug\"],\r\n            [/\\[information.*/, \"custom-info\"],\r\n          ],\r\n        },\r\n      });\r\n\r\n      const debounce = (callback, delay) => {\r\n        let timer;\r\n        return (...args) => {\r\n          clearTimeout(timer);\r\n          timer = setTimeout(() => callback(...args), delay);\r\n        }\r\n      }\r\n\r\n      const model = editor.getModel();\r\n      if (!readonly) {\r\n        model.onDidChangeContent(() => {\r\n          var versionId = model.getVersionId();\r\n          debounce(async () => {\r\n            var newVersionId = model.getVersionId();\r\n            if (versionId !== newVersionId) return;\r\n\r\n            let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/parse`), model.getValue(), {\r\n              headers: {\r\n                'content-type': 'text/plain'\r\n              }\r\n            });\r\n\r\n            const markerData = data.map(x => {\r\n              return {\r\n                startColumn: x.token.startColumn,\r\n                endColumn: x.token.endColumn,\r\n                startLineNumber: x.token.startLine,\r\n                endLineNumber: x.token.endLine,\r\n                severity: MarkerSeverity.Error,\r\n                message: x.message\r\n              }\r\n            });\r\n\r\n            monaco.editor.setModelMarkers(model, 'powershell', markerData);\r\n          }, 300)();\r\n\r\n        });\r\n      }\r\n\r\n      if (resource) {\r\n        editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, () => onSave(resource?.resourceInfo?.parent, \"update\", resource));\r\n      }\r\n\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"refresh\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Refresh\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F5],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n        run: function (ed) {\r\n          refetch();\r\n          return null;\r\n        },\r\n      });\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"format\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Format\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F8],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n\r\n        run: () => {\r\n          editor.trigger(\r\n            \"anyString\",\r\n            \"editor.action.formatDocument\",\r\n            null\r\n          );\r\n          // editorRef.current.getAction('editor.action.formatDocument').run();\r\n          return null;\r\n        },\r\n      });\r\n    },\r\n    [refetch, onSave, readonly]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (monaco) {\r\n      monaco.editor.defineTheme(\"psu-dark\", psuDark);\r\n      monaco.editor.defineTheme(\"psu-light\", psuLight);\r\n      monaco.editor.setTheme(\r\n        currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"\r\n      );\r\n    }\r\n  }, [currentTheme, monaco]);\r\n\r\n  const onCopy = React.useCallback(() => copy(editorRef?.current?.getValue()), [\r\n    copy,\r\n  ]);\r\n  const zoomIn = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomIn\", {});\r\n  const zoomOut = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomOut\", {});\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      isReadOnly,\r\n      setIsReadOnly,\r\n      onSave,\r\n      monaco,\r\n      editor: editorRef?.current,\r\n      userData,\r\n      handleEditorDidMount,\r\n      currentTheme,\r\n      onCopy,\r\n      zoomIn,\r\n      zoomOut,\r\n      isSaving\r\n    }),\r\n    [\r\n      currentTheme,\r\n      handleEditorDidMount,\r\n      isReadOnly,\r\n      monaco,\r\n      onCopy,\r\n      onSave,\r\n      userData,\r\n      isSaving\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <EditorContext.Provider value={value}>{children}</EditorContext.Provider>\r\n  );\r\n}\r\n\r\nfunction SaveButton({ children: child, resource }) {\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={resource?.accessControls} allowedWithOneWayGitSync={false}>\r\n      <Tooltip title=\"Save\">\r\n        {React.cloneElement(child, {\r\n          type: child?.props?.type || \"text\",\r\n          icon: child?.props?.icon || <SaveFilled />,\r\n          onClick: callAll(child?.props?.onClick),\r\n        })}\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n\r\nfunction BaseEditor({ ...props }: EditorProps) {\r\n  const { currentTheme, handleEditorDidMount } = React.useContext(\r\n    EditorContext\r\n  );\r\n  return (\r\n    <Editor\r\n      theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n      language=\"powershell\"\r\n      loading={<Spin tip=\"Loading content...\" />}\r\n      height=\"calc((100vh - 256px) - 48px)\"\r\n      onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, null)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ntype FullEditorProps = {\r\n  title?: string;\r\n  showSave?: boolean;\r\n  refetch?: () => void;\r\n  options?: EditorProps[\"options\"];\r\n  actions?: CardProps[\"extra\"]\r\n  hideToolbar?: boolean;\r\n} & EditorProps;\r\n\r\nfunction FullEditor({\r\n  title,\r\n  options,\r\n  showSave = true,\r\n  actions,\r\n  hideToolbar,\r\n  ...props\r\n}: FullEditorProps) {\r\n  const {\r\n    handleEditorDidMount,\r\n    currentTheme,\r\n    onSave,\r\n    onCopy,\r\n    zoomIn,\r\n    zoomOut,\r\n    isSaving\r\n  } = React.useContext(EditorContext);\r\n  const context = usePageContext();\r\n  const resource = context?.resource;\r\n\r\n\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 0 }}\r\n      title={title}\r\n      extra={\r\n        !hideToolbar && <Fragment>\r\n          {actions}\r\n          <Tooltip title=\"Zoom in\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomInOutlined />}\r\n              onClick={() => zoomIn()}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Zoom out\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomOutOutlined />}\r\n              onClick={() => zoomOut()}\r\n            />\r\n          </Tooltip>\r\n          {showSave && (\r\n            <SaveButton resource={resource}>\r\n              <Button\r\n                icon={isSaving ? <LoadingOutlined /> : null}\r\n                onClick={callAll(() =>\r\n                  onSave(resource?.resourceInfo?.parent, \"update\", resource)\r\n                )}\r\n              />\r\n            </SaveButton>\r\n          )}\r\n          <Tooltip title=\"Copy\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<CopyFilled />}\r\n              onClick={() => onCopy()}\r\n            />\r\n          </Tooltip>\r\n          <LeftPanelSizeButton>\r\n            <Button />\r\n          </LeftPanelSizeButton>\r\n        </Fragment >\r\n      }\r\n    >\r\n      <BaseEditor\r\n        language=\"powershell\"\r\n        //@ts-ignore\r\n        height=\"calc((100vh - 256px) - 48px)\"\r\n        value={resource?.content || resource?.scriptBlock || resource?.settings || props?.value}\r\n        onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, resource)}\r\n        theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n        loading={props?.loading || <Spin tip=\"Loading content...\" />}\r\n        {...props}\r\n        options={{\r\n          wordWrap: \"on\",\r\n          wrappingIndent: \"same\",\r\n          minimap: {\r\n            enabled: false,\r\n          },\r\n          lineHeight: 20,\r\n          lineNumbersMinChars: 5,\r\n          scrollBeyondLastLine: false,\r\n          hideCursorInOverviewRuler: true,\r\n          overviewRulerLanes: 0,\r\n          overviewRulerBorder: false,\r\n          ...options,\r\n        }}\r\n      />\r\n    </Card >\r\n  );\r\n}\r\n\r\nconst useEditorContext = () => React.useContext(EditorContext);\r\n\r\nexport { CodeEditor, BaseEditor, FullEditor, SaveButton, useEditorContext };\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/ui/live-log.tsx","components/dashboard/components/DashboardOutput.tsx"],"names":["LiveLog","traceId","React","useState","log","setLog","useEffect","connection","HubConnectionBuilder","withUrl","toRelativeUrl","withAutomaticReconnect","configureLogging","LogLevel","Debug","build","on","message","prev","start","then","send","catch","err","console","stop","ErrorBoundary","readonly","value","language","options","readOnly","DashboardOutput","id","useParams"],"mappings":"sQAMe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAAW,EACnBC,IAAMC,SAAS,IADI,mBAClCC,EADkC,KAC7BC,EAD6B,KAsBzC,OAnBAH,IAAMI,WAAU,WACZ,IAAMC,GAAa,IAAIC,KAClBC,QAAQC,YAAc,YACtBC,yBACAC,iBAAiBC,IAASC,OAC1BC,QAUL,OARAR,EAAWS,GAAG,WAAW,SAACC,GACtBZ,GAAO,SAAAa,GAAI,OAAIA,EAAI,UAAMD,EAAN,cAGvBV,EACKY,QACAC,MAAK,kBAAMb,EAAWc,KAAK,YAAapB,MACxCqB,OAAM,SAACC,GAAD,OAASC,QAAQpB,IAAI,gBAAiBmB,MAC1C,WAAQhB,EAAWkB,UAC3B,CAACxB,IAIA,cAAC,IAAMyB,cAAP,UACI,cAAC,IAAD,CAAYC,UAAU,EAAtB,SACI,cAAC,IAAD,CAAYC,MAAOxB,EAAKyB,SAAS,SAASC,QAAS,CAAEC,UAAU,W,kCC/B/E,iFAIe,SAASC,IAAmB,IACjCC,EAAOC,cAAPD,GACR,OAAO,cAAC,IAAD,CAAShC,QAAO,oBAAegC","file":"static/js/47.86ebe236.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Alert } from \"antd\";\r\nimport { HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { BaseEditor, CodeEditor } from \"components/ui/Editor/Editor\";\r\nimport { toRelativeUrl } from \"components/utils/utils\";\r\n\r\nexport default function LiveLog({ traceId }) {\r\n    const [log, setLog] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        const connection = new HubConnectionBuilder()\r\n            .withUrl(toRelativeUrl(`/loghub`))\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Debug)\r\n            .build();\r\n\r\n        connection.on(\"sendLog\", (message) => {\r\n            setLog(prev => prev + `${message}\\r\\n`);\r\n        });\r\n\r\n        connection\r\n            .start()\r\n            .then(() => connection.send(\"subscribe\", traceId))\r\n            .catch((err) => console.log(\"signalr error\", err));\r\n        return () => { connection.stop() };\r\n    }, [traceId]);\r\n\r\n\r\n    return (\r\n        <Alert.ErrorBoundary>\r\n            <CodeEditor readonly={true}>\r\n                <BaseEditor value={log} language=\"psulog\" options={{ readOnly: true }} />\r\n            </CodeEditor>\r\n        </Alert.ErrorBoundary>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LiveLog from \"components/ui/live-log\";\r\n\r\nexport default function DashboardOutput() {\r\n  const { id } = useParams();\r\n  return <LiveLog traceId={`dashboard:${id}`} />\r\n}\r\n"],"sourceRoot":""}
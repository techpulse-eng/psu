{"version":3,"sources":["components/ui/SingleTagSelectBox.tsx"],"names":["SingleTagSelectBox","props","tags","useQuery","refetchOnWindowFocus","data","options","convertToAntTag","value","showArrow","labelInValue","maxTagCount","tagRender","tagProps","label","closable","onClose","color","find","m","style","margin","width"],"mappings":"4QAqBe,SAASA,EAAmBC,GAAqB,IAC9CC,EAASC,YAAgB,OAAQ,CAC3CC,sBAAsB,IADlBC,KAIFC,EAAUJ,EAAOK,YAAgBL,GAAnB,OAA2BD,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAOO,MAEtD,OACI,cAAC,UAAD,2BACQP,GADR,IAEIQ,WAAS,EACTC,cAAY,EACZC,YAAY,aACZC,UAAW,SAACC,GAAD,OA5BvB,SAAmBZ,GAAQ,IACfa,EAA6Cb,EAA7Ca,MAAON,EAAsCP,EAAtCO,MAAOO,EAA+Bd,EAA/Bc,SAAUC,EAAqBf,EAArBe,QAASV,EAAYL,EAAZK,QAEzC,OACI,cAAC,IAAD,CACIW,MAAOX,EAAQY,MAAK,SAAAC,GAAC,OAAIA,EAAEX,QAAUA,KAAOS,MAC5CF,SAAUA,EACVC,QAASA,EACTI,MAAO,CAAEC,OAAQ,GAJrB,SAMKP,IAmBGF,CAAU,2BAAKC,GAAN,IAAgBP,cAE7Bc,MAAO,CAAEE,MAAO,QAChBhB,QAASA","file":"static/js/131.bd5af523.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Select, Tag as AntTag } from \"antd\";\r\nimport { Tag } from \"types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { convertToAntTag } from \"components/utils/convertToAntTag\";\r\n\r\nfunction tagRender(props) {\r\n    const { label, value, closable, onClose, options } = props;\r\n\r\n    return (\r\n        <AntTag\r\n            color={options.find(m => m.value === value).color}\r\n            closable={closable}\r\n            onClose={onClose}\r\n            style={{ margin: 3 }}\r\n        >\r\n            {label}\r\n        </AntTag>\r\n    );\r\n}\r\n\r\nexport default function SingleTagSelectBox(props): JSX.Element {\r\n    const { data: tags } = useQuery<Tag[]>(\"/tag\", {\r\n        refetchOnWindowFocus: false,\r\n    });\r\n\r\n    const options = tags ? convertToAntTag(tags) : props?.value;\r\n\r\n    return (\r\n        <Select\r\n            {...props}\r\n            showArrow\r\n            labelInValue\r\n            maxTagCount=\"responsive\"\r\n            tagRender={(tagProps) =>\r\n                tagRender({ ...tagProps, options })\r\n            }\r\n            style={{ width: \"100%\" }}\r\n            options={options}\r\n        />\r\n    );\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/scripts/script.tsx","components/editor/themes/EditorThemes.tsx","components/ui/Editor/snippets.js","components/ui/Editor/Editor.tsx"],"names":["ResourceInfo","React","lazy","ScriptViews","RunScript","ScriptPage","fullPath","useParams","useQuery","enabled","refetchOnWindowFocus","script","data","refetch","resource","title","capitalize","name","subTitle","id","extra","disableManualInvocation","children","psuDark","base","inherit","rules","token","foreground","colors","psuLight","snippets","range","label","kind","documentation","insertText","loader","config","paths","vs","toRelativeUrl","init","then","monaco","languages","registerCompletionItemProvider","provideCompletionItems","model","options","a","incomplete","suggestions","registerDocumentFormattingEditProvider","displayName","provideDocumentFormattingEdits","axios","post","getValue","headers","text","startColumn","startLineNumber","endLineNumber","getLineCount","endColumn","getLineMaxColumn","triggerChars","getKind","type","CompletionItemKind","Text","Method","Folder","File","Property","triggerCharacters","position","context","findIndex","x","triggerCharacter","content","cursorPosition","getOffsetAt","map","help","EditorContext","createContext","CodeEditor","readonly","useState","isReadOnly","setIsReadOnly","isSaving","setIsSaving","mutateAsync","useMutation","currentTheme","useThemeSwitcher","userData","useAppStore","useMonaco","copy","useClipboard","onSuccess","message","success","editorRef","useRef","onSave","useCallback","key","action","current","resourceInfo","self","startsWith","schemaName","preserveBOM","lineEnding","onError","error","variables","queryClient","refetchQueries","handleEditorDidMount","editor","register","setMonarchTokensProvider","tokenizer","root","getModel","onDidChangeContent","versionId","getVersionId","callback","delay","timer","args","clearTimeout","setTimeout","debounce","newVersionId","markerData","startLine","endLine","severity","MarkerSeverity","Error","setModelMarkers","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","parent","addAction","keybindings","F5","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","F8","trigger","useEffect","defineTheme","setTheme","onCopy","zoomIn","zoomOut","value","useMemo","Provider","SaveButton","child","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","accessControls","allowedWithOneWayGitSync","cloneElement","props","icon","SaveFilled","onClick","callAll","BaseEditor","useContext","theme","language","loading","tip","height","onMount","FullEditor","showSave","actions","hideToolbar","usePageContext","bordered","bodyStyle","padding","ZoomInOutlined","ZoomOutOutlined","LoadingOutlined","CopyFilled","scriptBlock","settings","wordWrap","wrappingIndent","minimap","lineHeight","lineNumbersMinChars","scrollBeyondLastLine","hideCursorInOverviewRuler","overviewRulerLanes","overviewRulerBorder"],"mappings":"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","file":"static/js/60.55ccdfe4.chunk.js","sourcesContent":["import \"../../Tables.module.css\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Script } from \"types\";\r\nimport { CodeEditor, FullEditor } from \"components/ui/Editor/Editor\";\r\nimport {\r\n  LeftPanel,\r\n  Page,\r\n  PageContentBase,\r\n  RightPanel,\r\n  PageHeader,\r\n} from \"components/pages/Page\";\r\nimport { Modal } from \"components/ui/Modal\";\r\nimport { capitalize } from \"components/utils/utils\";\r\nconst ResourceInfo = React.lazy(() => import(\"../ui/ResourceInfo\"));\r\nconst ScriptViews = React.lazy(() => import(\"./components/ScriptViews\"));\r\nconst RunScript = React.lazy(() => import(\"./components/RunScript\"));\r\n\r\nexport default function ScriptPage() {\r\n  const fullPath = useParams()[\"*\"];\r\n  const { data: script, refetch } = useQuery<Script>(`/script/${fullPath}`, {\r\n    enabled: !!fullPath,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  return (\r\n    <Page resource={script}>\r\n      <PageHeader>\r\n        <ResourceInfo\r\n          title={capitalize(script?.name)}\r\n          subTitle={`#${script?.id}`}\r\n          extra={[\r\n            <Modal>\r\n              {!script?.disableManualInvocation && (\r\n                <RunScript script={script} children=\"Run\" />\r\n              )}\r\n            </Modal>,\r\n          ]}\r\n        />\r\n      </PageHeader>\r\n      <PageContentBase>\r\n        <LeftPanel>\r\n          <CodeEditor refetch={() => refetch()}>\r\n            <FullEditor title=\"Code Editor\" />\r\n          </CodeEditor>\r\n        </LeftPanel>\r\n        <RightPanel>\r\n          <ScriptViews />\r\n        </RightPanel>\r\n      </PageContentBase>\r\n    </Page>\r\n  );\r\n}\r\n","import { editor } from \"monaco-editor\";\r\n\r\nconst psuDark: editor.IStandaloneThemeData = {\r\n  base: \"vs-dark\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#060606\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#060606\",\r\n    \"editor.foreground\": \"#ffffff4d\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#141414\",\r\n    \"editor.selectionBackground\": \"#141414\",\r\n  },\r\n};\r\n\r\nconst psuLight: editor.IStandaloneThemeData = {\r\n  base: \"vs\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#E1ECF9\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#ffffff\",\r\n    \"editor.foreground\": \"#000000\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#c2c2c2\",\r\n    \"editor.selectionBackground\": \"#e1ecf8\",\r\n  },\r\n};\r\n\r\nexport { psuDark, psuLight };\r\n","const snippets = [\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Modal',\r\n        kind: 27,\r\n        documentation: 'Creates a new modal.',\r\n        insertText: 'Show-UDModal -Content {\\n\\tNew-UDTypography \"Hello, World\"\\n}'\r\n    },\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Chart with Colors',\r\n        kind: 27,\r\n        documentation: 'Creates a chart with colors',\r\n        insertText: `$Data = Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 10 \r\n$Options = @{\r\n    Type = 'bar'\r\n    Data = $Data\r\n    BackgroundColor = 'Red'\r\n    BorderColor = '#c61d4a'\r\n    HoverBackgroundColor = 'Blue'\r\n    HoverBorderColor = '#451dc6'\r\n    DataProperty = 'CPU'\r\n    LabelProperty = 'ProcessName'\r\n}\r\n\r\nNew-UDChartJS @Options`\r\n    },\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Form with validation',\r\n        kind: 27,\r\n        documentation: 'Creates a form with validation',\r\n        insertText: `New-UDForm -Content {\r\nNew-UDTextbox -Id 'txtValidateForm'\r\n} -OnValidate {\r\n    $FormContent = $EventData\r\n\r\n    if ($FormContent.txtValidateForm -eq $null -or $FormContent.txtValidateForm -eq '') {\r\n        New-UDFormValidationResult -ValidationError \"txtValidateForm is required\"\r\n    } else {\r\n        New-UDFormValidationResult -Valid\r\n    }\r\n} -OnSubmit {\r\n    Show-UDToast -Message $Body\r\n}`\r\n    },\r\n];\r\n\r\nexport default snippets;\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Card, message, Spin, Tooltip } from \"antd\";\r\nimport { callAll, toRelativeUrl } from \"components/utils/utils\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport {\r\n  CopyFilled,\r\n  SaveFilled,\r\n  ZoomInOutlined,\r\n  ZoomOutOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport Editor, {\r\n  useMonaco,\r\n  EditorProps,\r\n  loader,\r\n  Monaco,\r\n} from \"@monaco-editor/react\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { psuDark, psuLight } from \"../../editor/themes/EditorThemes\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { AccessControlTypes, Accessible } from \"types\";\r\nimport { editor, MarkerSeverity } from \"monaco-editor\";\r\nimport { LeftPanelSizeButton, usePageContext } from \"components/pages/Page\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { CardProps } from \"antd/es\";\r\nimport axios from \"axios\";\r\nimport snippets from './snippets';\r\n\r\nloader.config({ paths: { vs: toRelativeUrl(\"/admin/vs\") } });\r\nloader.init().then(monaco => {\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    provideCompletionItems: async (model, options, token) => {\r\n\r\n      return {\r\n        incomplete: false,\r\n        suggestions: snippets\r\n      }\r\n    }\r\n  });\r\n\r\n  monaco.languages.registerDocumentFormattingEditProvider(\"powershell\", {\r\n    displayName: \"PowerShell\",\r\n    provideDocumentFormattingEdits: async (model, options, token) => {\r\n      let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/format`), model.getValue(), {\r\n        headers: {\r\n          'content-type': 'text/plain'\r\n        }\r\n      });\r\n\r\n      return [{\r\n        text: data,\r\n        range: {\r\n          startColumn: 1,\r\n          startLineNumber: 1,\r\n          endLineNumber: model.getLineCount(),\r\n          endColumn: model.getLineMaxColumn(model.getLineCount())\r\n        }\r\n      }];\r\n    }\r\n  })\r\n\r\n  const triggerChars = [\"$\", \"-\", \"\\\\\", \"/\", \":\", \".\"]\r\n\r\n  const getKind = (type: number) => {\r\n    switch (type) {\r\n      case 0: return monaco.languages.CompletionItemKind.Text;\r\n      case 2: return monaco.languages.CompletionItemKind.Method;\r\n      case 3: return monaco.languages.CompletionItemKind.Folder;\r\n      case 4: return monaco.languages.CompletionItemKind.File;\r\n      case 5: return monaco.languages.CompletionItemKind.Property;\r\n      case 6: return monaco.languages.CompletionItemKind.Method;\r\n      case 7: return monaco.languages.CompletionItemKind.Property;\r\n      case 9: return monaco.languages.CompletionItemKind.Property;\r\n      default: return monaco.languages.CompletionItemKind.Text;\r\n    }\r\n  }\r\n\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    triggerCharacters: triggerChars,\r\n    provideCompletionItems: async (model, position, context) => {\r\n      if (triggerChars.findIndex(x => x === context.triggerCharacter) !== -1) {\r\n        let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/complete`), {\r\n          content: model.getValue(),\r\n          cursorPosition: model.getOffsetAt(position)\r\n        });\r\n\r\n        const suggestions = data?.map(x => {\r\n          if (x.type === 3 || x.type === 4) {\r\n\r\n            return {\r\n              insertText: x.label,\r\n              label: x.label,\r\n              documentation: x.help,\r\n              kind: getKind(x.type),\r\n            }\r\n          }\r\n\r\n          return {\r\n            insertText: x.text,\r\n            label: x.text,\r\n            documentation: x.help,\r\n            kind: getKind(x.type),\r\n          }\r\n        });\r\n\r\n        return {\r\n          incomplete: false,\r\n          suggestions\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  });\r\n})\r\n\r\ninterface EditorContextProps {\r\n  isReadOnly: boolean;\r\n  setIsReadOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n  onSave: (key: any, action: any, resource: any) => Promise<void>;\r\n  monaco: Monaco;\r\n  editor: editor.IStandaloneCodeEditor;\r\n  userData: Accessible;\r\n  handleEditorDidMount: (editor: any, monaco: any, resource: any) => void;\r\n  currentTheme: string;\r\n  onCopy: () => void;\r\n  zoomIn: () => void;\r\n  zoomOut: () => void;\r\n  isSaving: boolean;\r\n}\r\n\r\nconst EditorContext = React.createContext<EditorContextProps>(null);\r\n\r\nfunction CodeEditor({ children, refetch = () => { }, readonly = false }) {\r\n  const [isReadOnly, setIsReadOnly] = React.useState(readonly);\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const { mutateAsync } = useMutation<any>();\r\n  const { currentTheme } = useThemeSwitcher();\r\n  const { userData } = useAppStore();\r\n  const monaco = useMonaco();\r\n\r\n  const { copy } = useClipboard({\r\n    onSuccess: (text) => message.success(`Copied.`),\r\n  });\r\n\r\n  const editorRef = React.useRef<editor.IStandaloneCodeEditor>(null);\r\n\r\n\r\n  const onSave = React.useCallback(\r\n    async (key: string, action: any, resource: any) => {\r\n\r\n      setIsSaving(true);\r\n      setIsReadOnly(true);\r\n\r\n      if (key === \"/script\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/endpoint\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"scriptBlock\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/dashboard\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith(\"/role\")) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"policy\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/settings\") {\r\n        key = \"/settings/authentication/1\";\r\n        resource[\"settings\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith('/module')) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (resource?.resourceInfo?.schemaName === \"configuration\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue({\r\n          preserveBOM: true,\r\n          lineEnding: \"\\r\\n\",\r\n        });\r\n      }\r\n\r\n      await mutateAsync(\r\n        { key, action, resource },\r\n        {\r\n          onError: (error) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.error(error.message);\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.success(\"Changes saved!\");\r\n            queryClient.refetchQueries(key);\r\n            refetch()\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch]\r\n  );\r\n\r\n\r\n  const handleEditorDidMount = React.useCallback(\r\n    (editor, monaco, resource) => {\r\n      editorRef.current = editor;\r\n\r\n      monaco.languages.register({ id: \"psulog\" });\r\n      monaco.languages.setMonarchTokensProvider(\"psulog\", {\r\n        tokenizer: {\r\n          root: [\r\n            [/\\[error.*/, \"custom-error\"],\r\n            [/\\[verbose.*/, \"custom-verbose\"],\r\n            [/\\[warning.*/, \"custom-warning\"],\r\n            [/\\[debug.*/, \"custom-debug\"],\r\n            [/\\[information.*/, \"custom-info\"],\r\n          ],\r\n        },\r\n      });\r\n\r\n      const debounce = (callback, delay) => {\r\n        let timer;\r\n        return (...args) => {\r\n          clearTimeout(timer);\r\n          timer = setTimeout(() => callback(...args), delay);\r\n        }\r\n      }\r\n\r\n      const model = editor.getModel();\r\n      if (!readonly) {\r\n        model.onDidChangeContent(() => {\r\n          var versionId = model.getVersionId();\r\n          debounce(async () => {\r\n            var newVersionId = model.getVersionId();\r\n            if (versionId !== newVersionId) return;\r\n\r\n            let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/parse`), model.getValue(), {\r\n              headers: {\r\n                'content-type': 'text/plain'\r\n              }\r\n            });\r\n\r\n            const markerData = data.map(x => {\r\n              return {\r\n                startColumn: x.token.startColumn,\r\n                endColumn: x.token.endColumn,\r\n                startLineNumber: x.token.startLine,\r\n                endLineNumber: x.token.endLine,\r\n                severity: MarkerSeverity.Error,\r\n                message: x.message\r\n              }\r\n            });\r\n\r\n            monaco.editor.setModelMarkers(model, 'powershell', markerData);\r\n          }, 300)();\r\n\r\n        });\r\n      }\r\n\r\n      if (resource) {\r\n        editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, () => onSave(resource?.resourceInfo?.parent, \"update\", resource));\r\n      }\r\n\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"refresh\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Refresh\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F5],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n        run: function (ed) {\r\n          refetch();\r\n          return null;\r\n        },\r\n      });\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"format\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Format\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F8],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n\r\n        run: () => {\r\n          editor.trigger(\r\n            \"anyString\",\r\n            \"editor.action.formatDocument\",\r\n            null\r\n          );\r\n          // editorRef.current.getAction('editor.action.formatDocument').run();\r\n          return null;\r\n        },\r\n      });\r\n    },\r\n    [refetch, onSave, readonly]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (monaco) {\r\n      monaco.editor.defineTheme(\"psu-dark\", psuDark);\r\n      monaco.editor.defineTheme(\"psu-light\", psuLight);\r\n      monaco.editor.setTheme(\r\n        currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"\r\n      );\r\n    }\r\n  }, [currentTheme, monaco]);\r\n\r\n  const onCopy = React.useCallback(() => copy(editorRef?.current?.getValue()), [\r\n    copy,\r\n  ]);\r\n  const zoomIn = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomIn\", {});\r\n  const zoomOut = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomOut\", {});\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      isReadOnly,\r\n      setIsReadOnly,\r\n      onSave,\r\n      monaco,\r\n      editor: editorRef?.current,\r\n      userData,\r\n      handleEditorDidMount,\r\n      currentTheme,\r\n      onCopy,\r\n      zoomIn,\r\n      zoomOut,\r\n      isSaving\r\n    }),\r\n    [\r\n      currentTheme,\r\n      handleEditorDidMount,\r\n      isReadOnly,\r\n      monaco,\r\n      onCopy,\r\n      onSave,\r\n      userData,\r\n      isSaving\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <EditorContext.Provider value={value}>{children}</EditorContext.Provider>\r\n  );\r\n}\r\n\r\nfunction SaveButton({ children: child, resource }) {\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={resource?.accessControls} allowedWithOneWayGitSync={false}>\r\n      <Tooltip title=\"Save\">\r\n        {React.cloneElement(child, {\r\n          type: child?.props?.type || \"text\",\r\n          icon: child?.props?.icon || <SaveFilled />,\r\n          onClick: callAll(child?.props?.onClick),\r\n        })}\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n\r\nfunction BaseEditor({ ...props }: EditorProps) {\r\n  const { currentTheme, handleEditorDidMount } = React.useContext(\r\n    EditorContext\r\n  );\r\n  return (\r\n    <Editor\r\n      theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n      language=\"powershell\"\r\n      loading={<Spin tip=\"Loading content...\" />}\r\n      height=\"calc((100vh - 256px) - 48px)\"\r\n      onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, null)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ntype FullEditorProps = {\r\n  title?: string;\r\n  showSave?: boolean;\r\n  refetch?: () => void;\r\n  options?: EditorProps[\"options\"];\r\n  actions?: CardProps[\"extra\"]\r\n  hideToolbar?: boolean;\r\n} & EditorProps;\r\n\r\nfunction FullEditor({\r\n  title,\r\n  options,\r\n  showSave = true,\r\n  actions,\r\n  hideToolbar,\r\n  ...props\r\n}: FullEditorProps) {\r\n  const {\r\n    handleEditorDidMount,\r\n    currentTheme,\r\n    onSave,\r\n    onCopy,\r\n    zoomIn,\r\n    zoomOut,\r\n    isSaving\r\n  } = React.useContext(EditorContext);\r\n  const context = usePageContext();\r\n  const resource = context?.resource;\r\n\r\n\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 0 }}\r\n      title={title}\r\n      extra={\r\n        !hideToolbar && <Fragment>\r\n          {actions}\r\n          <Tooltip title=\"Zoom in\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomInOutlined />}\r\n              onClick={() => zoomIn()}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Zoom out\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomOutOutlined />}\r\n              onClick={() => zoomOut()}\r\n            />\r\n          </Tooltip>\r\n          {showSave && (\r\n            <SaveButton resource={resource}>\r\n              <Button\r\n                icon={isSaving ? <LoadingOutlined /> : null}\r\n                onClick={callAll(() =>\r\n                  onSave(resource?.resourceInfo?.parent, \"update\", resource)\r\n                )}\r\n              />\r\n            </SaveButton>\r\n          )}\r\n          <Tooltip title=\"Copy\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<CopyFilled />}\r\n              onClick={() => onCopy()}\r\n            />\r\n          </Tooltip>\r\n          <LeftPanelSizeButton>\r\n            <Button />\r\n          </LeftPanelSizeButton>\r\n        </Fragment >\r\n      }\r\n    >\r\n      <BaseEditor\r\n        language=\"powershell\"\r\n        //@ts-ignore\r\n        height=\"calc((100vh - 256px) - 48px)\"\r\n        value={resource?.content || resource?.scriptBlock || resource?.settings || props?.value}\r\n        onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, resource)}\r\n        theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n        loading={props?.loading || <Spin tip=\"Loading content...\" />}\r\n        {...props}\r\n        options={{\r\n          wordWrap: \"on\",\r\n          wrappingIndent: \"same\",\r\n          minimap: {\r\n            enabled: false,\r\n          },\r\n          lineHeight: 20,\r\n          lineNumbersMinChars: 5,\r\n          scrollBeyondLastLine: false,\r\n          hideCursorInOverviewRuler: true,\r\n          overviewRulerLanes: 0,\r\n          overviewRulerBorder: false,\r\n          ...options,\r\n        }}\r\n      />\r\n    </Card >\r\n  );\r\n}\r\n\r\nconst useEditorContext = () => React.useContext(EditorContext);\r\n\r\nexport { CodeEditor, BaseEditor, FullEditor, SaveButton, useEditorContext };\r\n"],"sourceRoot":""}
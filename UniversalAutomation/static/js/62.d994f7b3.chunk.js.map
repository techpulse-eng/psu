{"version":3,"sources":["components/settings/Configuration.tsx","components/settings/Configurations.tsx","components/editor/themes/EditorThemes.tsx","components/ui/Editor/snippets.js","components/ui/Editor/Editor.tsx"],"names":["ConfigurationPage","fullName","useQuery","data","isLoading","Page","resource","content","resourceInfo","parent","self","schemaName","title","name","DirectoryTree","Tree","initTreeData","key","isLeaf","children","ItemCreateForm","visible","onCreate","onCancel","Form","useForm","form","okText","cancelText","onOk","validateFields","then","values","resetFields","catch","info","console","log","layout","initialValues","Item","hidden","label","rules","required","message","Configuration","React","useState","treeData","setTreeData","selectedItem","setSelectedItem","createFile","setCreateFile","createVisible","setCreateVisible","settings","callback","insiders","a","axios","post","url","window","location","href","loadTreeData","node","path","get","response","origin","updateTreeData","map","m","addTreeNode","list","newNode","push","deleteTreeNode","deleteKey","filter","newMenu","icon","FileAddOutlined","onClick","type","FolderAddOutlined","deleteItem","delete","success","split","pathDivider","slice","length","join","error","createItem","subTitle","extra","overlay","placement","arrow","disabled","PlusCircleOutlined","onConfirm","DeleteOutlined","sizes","direction","gutterAlign","style","display","flexDirection","defaultExpandedKeys","onSelect","keys","selectedNodes","loadData","height","overflow","FolderOpenOutlined","psuDark","base","inherit","token","foreground","colors","psuLight","snippets","range","kind","documentation","insertText","loader","config","paths","vs","toRelativeUrl","init","monaco","languages","registerCompletionItemProvider","provideCompletionItems","model","options","incomplete","suggestions","registerDocumentFormattingEditProvider","displayName","provideDocumentFormattingEdits","getValue","headers","text","startColumn","startLineNumber","endLineNumber","getLineCount","endColumn","getLineMaxColumn","triggerChars","getKind","CompletionItemKind","Text","Method","Folder","File","Property","triggerCharacters","position","context","findIndex","x","triggerCharacter","cursorPosition","getOffsetAt","help","EditorContext","createContext","CodeEditor","refetch","readonly","isReadOnly","setIsReadOnly","isSaving","setIsSaving","mutateAsync","useMutation","currentTheme","useThemeSwitcher","userData","useAppStore","useMonaco","copy","useClipboard","onSuccess","editorRef","useRef","onSave","useCallback","action","current","startsWith","preserveBOM","lineEnding","onError","variables","queryClient","refetchQueries","handleEditorDidMount","editor","register","id","setMonarchTokensProvider","tokenizer","root","getModel","onDidChangeContent","versionId","getVersionId","delay","timer","args","clearTimeout","setTimeout","debounce","newVersionId","markerData","startLine","endLine","severity","MarkerSeverity","Error","setModelMarkers","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","addAction","keybindings","F5","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","F8","trigger","useEffect","defineTheme","setTheme","onCopy","zoomIn","zoomOut","value","useMemo","Provider","SaveButton","child","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","accessControls","allowedWithOneWayGitSync","cloneElement","props","SaveFilled","callAll","BaseEditor","useContext","theme","language","loading","tip","onMount","FullEditor","showSave","actions","hideToolbar","usePageContext","bordered","bodyStyle","padding","ZoomInOutlined","ZoomOutOutlined","LoadingOutlined","CopyFilled","scriptBlock","wordWrap","wrappingIndent","minimap","enabled","lineHeight","lineNumbersMinChars","scrollBeyondLastLine","hideCursorInOverviewRuler","overviewRulerLanes","overviewRulerBorder"],"mappings":"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","file":"static/js/62.d994f7b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CodeEditor, FullEditor } from \"components/ui/Editor/Editor\";\r\nimport { Page } from \"components/pages/Page\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { SchemaName } from \"components/ui/Form/types\";\r\nimport { FileSystemItem } from \"types\";\r\n\r\nexport default function ConfigurationPage({ fullName }) {\r\n  const { data, isLoading } = useQuery<FileSystemItem>(\r\n    `/configuration/content/${fullName}`\r\n  );\r\n\r\n  if (isLoading) return <></>\r\n\r\n  return (\r\n    <Page\r\n      resource={{\r\n        content: data.content,\r\n        resourceInfo: {\r\n          parent: `/configuration/content/${fullName}`,\r\n          self: `/configuration/content/${fullName}`,\r\n          schemaName: \"configuration\" as SchemaName,\r\n        },\r\n      }}\r\n    >\r\n      <CodeEditor>\r\n        <FullEditor title={data?.name} />\r\n      </CodeEditor>\r\n    </Page>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Dropdown, Form, Input, Menu, Modal, PageHeader, Popconfirm, Result, Tree } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { FileSystemItem, Settings } from \"types\";\r\nimport ConfigurationPage from \"./Configuration\";\r\nimport { message } from \"antd/es\";\r\nimport { DeleteOutlined, FileAddOutlined, FolderAddOutlined, FolderOpenOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport { useQuery } from \"react-query3\";\r\nimport Split from 'react-split'\r\nconst { DirectoryTree } = Tree;\r\n\r\n\r\ninterface DataNode {\r\n  title: string;\r\n  key: string;\r\n  isLeaf: boolean;\r\n  children: DataNode[];\r\n}\r\n\r\nconst initTreeData = [\r\n  {\r\n    title: \"Repository\",\r\n    key: \"repo\",\r\n    isLeaf: false,\r\n    children: []\r\n  },\r\n];\r\n\r\ninterface Values {\r\n  name: string;\r\n  isLeaf: boolean;\r\n  parent: string;\r\n}\r\n\r\ninterface ItemCreateFormProps {\r\n  visible: boolean;\r\n  onCreate: (values: Values) => void;\r\n  onCancel: () => void;\r\n  isLeaf: boolean;\r\n  parent: string;\r\n}\r\n\r\nconst ItemCreateForm: React.FC<ItemCreateFormProps> = ({\r\n  visible,\r\n  onCreate,\r\n  onCancel,\r\n  isLeaf,\r\n  parent\r\n}) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title={isLeaf ? \"Create File\" : \"Create Folder\"}\r\n      okText=\"Create\"\r\n      cancelText=\"Cancel\"\r\n      onCancel={onCancel}\r\n      onOk={() => {\r\n        form\r\n          .validateFields()\r\n          .then(values => {\r\n            form.resetFields();\r\n            onCreate(values);\r\n          })\r\n          .catch(info => {\r\n            console.log('Validate Failed:', info);\r\n          });\r\n      }}\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        name=\"form_in_modal\"\r\n        initialValues={{ parent, isLeaf }}\r\n      >\r\n        <Form.Item hidden name=\"parent\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item hidden name=\"isLeaf\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          rules={[{ required: true, message: 'Please input the name!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nexport default function Configuration() {\r\n  const [treeData, setTreeData] = React.useState(initTreeData);\r\n  const [selectedItem, setSelectedItem] = React.useState(null);\r\n  const [createFile, setCreateFile] = React.useState(true);\r\n  const [createVisible, setCreateVisible] = React.useState(false);\r\n  const { data: settings } = useQuery<Settings>(\"/settings\");\r\n\r\n  const callback = async (insiders) => {\r\n    const url = (await axios.post(`/api/v1/vscode?insiders=${insiders}`)).data;\r\n    window.location.href = url;\r\n  }\r\n\r\n  const loadTreeData = async (node) => {\r\n\r\n    if (node.isLeaf) {\r\n      return;\r\n    }\r\n\r\n    let path = node.key === \"repo\" ? \"\" : node.key;\r\n\r\n    const response = await axios.get<FileSystemItem[]>(`/api/v1/configuration/list/${path}`);\r\n\r\n    setTreeData(origin =>\r\n      updateTreeData(origin, node.key, response.data.map(m => {\r\n        return {\r\n          title: m.name,\r\n          key: m.fullName,\r\n          isLeaf: m.isLeaf,\r\n          children: []\r\n        }\r\n      })),\r\n    );\r\n  }\r\n\r\n  function addTreeNode(list: DataNode[], key: React.Key, newNode: DataNode): DataNode[] {\r\n    return list.map(node => {\r\n      if (node.key === key) {\r\n        node.children.push(newNode);\r\n        return {\r\n          ...node\r\n        };\r\n      }\r\n      if (!node.isLeaf) {\r\n        return {\r\n          ...node,\r\n          children: addTreeNode(node.children, key, newNode),\r\n        };\r\n      }\r\n      return node;\r\n    });\r\n  }\r\n\r\n  function deleteTreeNode(list: DataNode[], key: React.Key, deleteKey: string): DataNode[] {\r\n    return list.map(node => {\r\n      if (node.key === key) {\r\n        node.children = node.children.filter(m => m.key !== deleteKey);\r\n        return {\r\n          ...node\r\n        };\r\n      }\r\n      if (!node.isLeaf) {\r\n        return {\r\n          ...node,\r\n          children: deleteTreeNode(node.children, key, deleteKey),\r\n        };\r\n      }\r\n      return node;\r\n    });\r\n  }\r\n\r\n  function updateTreeData(list: DataNode[], key: React.Key, children: DataNode[]): DataNode[] {\r\n    return list.map(node => {\r\n      if (node.key === key) {\r\n        return {\r\n          ...node,\r\n          children,\r\n        };\r\n      }\r\n      if (!node.isLeaf) {\r\n        return {\r\n          ...node,\r\n          children: updateTreeData(node.children, key, children),\r\n        };\r\n      }\r\n      return node;\r\n    });\r\n  }\r\n\r\n  const createFileDialog = () => {\r\n    setCreateFile(true);\r\n    setCreateVisible(true);\r\n  }\r\n\r\n  const createFolderDialog = () => {\r\n    setCreateFile(false);\r\n    setCreateVisible(true);\r\n  }\r\n\r\n  const onSelect = (keys: React.Key[], info: any) => {\r\n    setSelectedItem(info?.selectedNodes[0]);\r\n  };\r\n\r\n  const newMenu = (<Menu>\r\n    <Menu.Item>\r\n      <Button icon={<FileAddOutlined />} onClick={createFileDialog} type=\"link\">File</Button>\r\n    </Menu.Item>\r\n    <Menu.Item>\r\n      <Button icon={<FolderAddOutlined />} onClick={createFolderDialog} type=\"link\">Folder</Button>\r\n    </Menu.Item>\r\n  </Menu>)\r\n\r\n\r\n\r\n  const deleteItem = async () => {\r\n    try {\r\n      await axios.delete(`/api/v1/configuration/item/${selectedItem.key}`);\r\n      message.success(`Deleted ${selectedItem.key}`);\r\n\r\n      var path = selectedItem.key.split(settings.pathDivider);\r\n      var parent = path.slice(0, path.length - 1).join(settings.pathDivider);\r\n      if (path.length === 1) {\r\n        parent = \"repo\";\r\n      }\r\n\r\n      deleteTreeNode(treeData, parent, selectedItem.key);\r\n      setSelectedItem(null);\r\n    } catch\r\n    {\r\n      message.error(\"Failed to delete item\");\r\n    }\r\n  }\r\n\r\n  const createItem = async (values: Values) => {\r\n    const parent = values.parent === \"repo\" ? \"\" : values.parent + \"/\";\r\n\r\n    try {\r\n      await axios.post(`/api/v1/configuration/item/`, {\r\n        name: values.name,\r\n        isLeaf: values.isLeaf,\r\n        fullName: parent + values.name\r\n      });\r\n      addTreeNode(treeData, values.parent, {\r\n        title: values.name,\r\n        key: parent + values.name,\r\n        isLeaf: values.isLeaf,\r\n        children: []\r\n      })\r\n      setCreateVisible(false);\r\n      message.success(\"Create Success\");\r\n    } catch\r\n    {\r\n      message.error(\"Failed to create item\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PageHeader\r\n      title={\"Configuration\"}\r\n      subTitle={\"Files used to configure PowerShell Universal.\"}\r\n      extra={\r\n        <>\r\n          <Dropdown overlay={newMenu} placement=\"bottomLeft\" arrow disabled={selectedItem?.isLeaf}>\r\n            <Button icon={<PlusCircleOutlined />}>New</Button>\r\n          </Dropdown>\r\n          <Popconfirm title={`Are you sure you want to delete ${selectedItem?.key}?`} onConfirm={deleteItem}>\r\n            <Button icon={<DeleteOutlined />} disabled={selectedItem === null}>Delete</Button>\r\n          </Popconfirm>\r\n          <Button onClick={() => callback(false)}>Edit with VS Code</Button>\r\n          <Button onClick={() => callback(true)}>Edit with VS Code Insiders</Button>\r\n        </>\r\n      }>\r\n      <Split\r\n        sizes={[25, 75]}\r\n        direction=\"horizontal\"\r\n        gutterAlign=\"center\"\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row'\r\n        }}\r\n      >\r\n        <div>\r\n          <DirectoryTree\r\n            defaultExpandedKeys={['repo']}\r\n            onSelect={onSelect}\r\n            treeData={treeData}\r\n            loadData={loadTreeData}\r\n            style={{ height: '100ch', overflow: 'scroll' }}\r\n          />\r\n        </div>\r\n        <div>\r\n          {selectedItem?.isLeaf && <ConfigurationPage fullName={selectedItem?.key} />}\r\n          {!selectedItem?.isLeaf && <Result\r\n            icon={<FolderOpenOutlined />}\r\n            title={selectedItem?.key === \"repo\" ? \"Repository\" : selectedItem?.key}\r\n          />}\r\n        </div>\r\n      </Split>\r\n      {!selectedItem?.isLeaf && <ItemCreateForm parent={selectedItem?.key} isLeaf={createFile} visible={createVisible} onCreate={createItem} onCancel={() => setCreateVisible(false)} />}\r\n    </PageHeader >\r\n  );\r\n}\r\n","import { editor } from \"monaco-editor\";\r\n\r\nconst psuDark: editor.IStandaloneThemeData = {\r\n  base: \"vs-dark\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#060606\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#060606\",\r\n    \"editor.foreground\": \"#ffffff4d\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#141414\",\r\n    \"editor.selectionBackground\": \"#141414\",\r\n  },\r\n};\r\n\r\nconst psuLight: editor.IStandaloneThemeData = {\r\n  base: \"vs\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#E1ECF9\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#ffffff\",\r\n    \"editor.foreground\": \"#000000\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#c2c2c2\",\r\n    \"editor.selectionBackground\": \"#e1ecf8\",\r\n  },\r\n};\r\n\r\nexport { psuDark, psuLight };\r\n","const snippets = [\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Modal',\r\n        kind: 27,\r\n        documentation: 'Creates a new modal.',\r\n        insertText: 'Show-UDModal -Content {\\n\\tNew-UDTypography \"Hello, World\"\\n}'\r\n    },\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Chart with Colors',\r\n        kind: 27,\r\n        documentation: 'Creates a chart with colors',\r\n        insertText: `$Data = Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 10 \r\n$Options = @{\r\n    Type = 'bar'\r\n    Data = $Data\r\n    BackgroundColor = 'Red'\r\n    BorderColor = '#c61d4a'\r\n    HoverBackgroundColor = 'Blue'\r\n    HoverBorderColor = '#451dc6'\r\n    DataProperty = 'CPU'\r\n    LabelProperty = 'ProcessName'\r\n}\r\n\r\nNew-UDChartJS @Options`\r\n    },\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Form with validation',\r\n        kind: 27,\r\n        documentation: 'Creates a form with validation',\r\n        insertText: `New-UDForm -Content {\r\nNew-UDTextbox -Id 'txtValidateForm'\r\n} -OnValidate {\r\n    $FormContent = $EventData\r\n\r\n    if ($FormContent.txtValidateForm -eq $null -or $FormContent.txtValidateForm -eq '') {\r\n        New-UDFormValidationResult -ValidationError \"txtValidateForm is required\"\r\n    } else {\r\n        New-UDFormValidationResult -Valid\r\n    }\r\n} -OnSubmit {\r\n    Show-UDToast -Message $Body\r\n}`\r\n    },\r\n];\r\n\r\nexport default snippets;\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Card, message, Spin, Tooltip } from \"antd\";\r\nimport { callAll, toRelativeUrl } from \"components/utils/utils\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport {\r\n  CopyFilled,\r\n  SaveFilled,\r\n  ZoomInOutlined,\r\n  ZoomOutOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport Editor, {\r\n  useMonaco,\r\n  EditorProps,\r\n  loader,\r\n  Monaco,\r\n} from \"@monaco-editor/react\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { psuDark, psuLight } from \"../../editor/themes/EditorThemes\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { AccessControlTypes, Accessible } from \"types\";\r\nimport { editor, MarkerSeverity } from \"monaco-editor\";\r\nimport { LeftPanelSizeButton, usePageContext } from \"components/pages/Page\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { CardProps } from \"antd/es\";\r\nimport axios from \"axios\";\r\nimport snippets from './snippets';\r\n\r\nloader.config({ paths: { vs: toRelativeUrl(\"/admin/vs\") } });\r\nloader.init().then(monaco => {\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    provideCompletionItems: async (model, options, token) => {\r\n\r\n      return {\r\n        incomplete: false,\r\n        suggestions: snippets\r\n      }\r\n    }\r\n  });\r\n\r\n  monaco.languages.registerDocumentFormattingEditProvider(\"powershell\", {\r\n    displayName: \"PowerShell\",\r\n    provideDocumentFormattingEdits: async (model, options, token) => {\r\n      let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/format`), model.getValue(), {\r\n        headers: {\r\n          'content-type': 'text/plain'\r\n        }\r\n      });\r\n\r\n      return [{\r\n        text: data,\r\n        range: {\r\n          startColumn: 1,\r\n          startLineNumber: 1,\r\n          endLineNumber: model.getLineCount(),\r\n          endColumn: model.getLineMaxColumn(model.getLineCount())\r\n        }\r\n      }];\r\n    }\r\n  })\r\n\r\n  const triggerChars = [\"$\", \"-\", \"\\\\\", \"/\", \":\", \".\"]\r\n\r\n  const getKind = (type: number) => {\r\n    switch (type) {\r\n      case 0: return monaco.languages.CompletionItemKind.Text;\r\n      case 2: return monaco.languages.CompletionItemKind.Method;\r\n      case 3: return monaco.languages.CompletionItemKind.Folder;\r\n      case 4: return monaco.languages.CompletionItemKind.File;\r\n      case 5: return monaco.languages.CompletionItemKind.Property;\r\n      case 6: return monaco.languages.CompletionItemKind.Method;\r\n      case 7: return monaco.languages.CompletionItemKind.Property;\r\n      case 9: return monaco.languages.CompletionItemKind.Property;\r\n      default: return monaco.languages.CompletionItemKind.Text;\r\n    }\r\n  }\r\n\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    triggerCharacters: triggerChars,\r\n    provideCompletionItems: async (model, position, context) => {\r\n      if (triggerChars.findIndex(x => x === context.triggerCharacter) !== -1) {\r\n        let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/complete`), {\r\n          content: model.getValue(),\r\n          cursorPosition: model.getOffsetAt(position)\r\n        });\r\n\r\n        const suggestions = data?.map(x => {\r\n          if (x.type === 3 || x.type === 4) {\r\n\r\n            return {\r\n              insertText: x.label,\r\n              label: x.label,\r\n              documentation: x.help,\r\n              kind: getKind(x.type),\r\n            }\r\n          }\r\n\r\n          return {\r\n            insertText: x.text,\r\n            label: x.text,\r\n            documentation: x.help,\r\n            kind: getKind(x.type),\r\n          }\r\n        });\r\n\r\n        return {\r\n          incomplete: false,\r\n          suggestions\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  });\r\n})\r\n\r\ninterface EditorContextProps {\r\n  isReadOnly: boolean;\r\n  setIsReadOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n  onSave: (key: any, action: any, resource: any) => Promise<void>;\r\n  monaco: Monaco;\r\n  editor: editor.IStandaloneCodeEditor;\r\n  userData: Accessible;\r\n  handleEditorDidMount: (editor: any, monaco: any, resource: any) => void;\r\n  currentTheme: string;\r\n  onCopy: () => void;\r\n  zoomIn: () => void;\r\n  zoomOut: () => void;\r\n  isSaving: boolean;\r\n}\r\n\r\nconst EditorContext = React.createContext<EditorContextProps>(null);\r\n\r\nfunction CodeEditor({ children, refetch = () => { }, readonly = false }) {\r\n  const [isReadOnly, setIsReadOnly] = React.useState(readonly);\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const { mutateAsync } = useMutation<any>();\r\n  const { currentTheme } = useThemeSwitcher();\r\n  const { userData } = useAppStore();\r\n  const monaco = useMonaco();\r\n\r\n  const { copy } = useClipboard({\r\n    onSuccess: (text) => message.success(`Copied.`),\r\n  });\r\n\r\n  const editorRef = React.useRef<editor.IStandaloneCodeEditor>(null);\r\n\r\n\r\n  const onSave = React.useCallback(\r\n    async (key: string, action: any, resource: any) => {\r\n\r\n      setIsSaving(true);\r\n      setIsReadOnly(true);\r\n\r\n      if (key === \"/script\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/endpoint\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"scriptBlock\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/dashboard\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith(\"/role\")) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"policy\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/settings\") {\r\n        key = \"/settings/authentication/1\";\r\n        resource[\"settings\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith('/module')) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (resource?.resourceInfo?.schemaName === \"configuration\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue({\r\n          preserveBOM: true,\r\n          lineEnding: \"\\r\\n\",\r\n        });\r\n      }\r\n\r\n      await mutateAsync(\r\n        { key, action, resource },\r\n        {\r\n          onError: (error) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.error(error.message);\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.success(\"Changes saved!\");\r\n            queryClient.refetchQueries(key);\r\n            refetch()\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch]\r\n  );\r\n\r\n\r\n  const handleEditorDidMount = React.useCallback(\r\n    (editor, monaco, resource) => {\r\n      editorRef.current = editor;\r\n\r\n      monaco.languages.register({ id: \"psulog\" });\r\n      monaco.languages.setMonarchTokensProvider(\"psulog\", {\r\n        tokenizer: {\r\n          root: [\r\n            [/\\[error.*/, \"custom-error\"],\r\n            [/\\[verbose.*/, \"custom-verbose\"],\r\n            [/\\[warning.*/, \"custom-warning\"],\r\n            [/\\[debug.*/, \"custom-debug\"],\r\n            [/\\[information.*/, \"custom-info\"],\r\n          ],\r\n        },\r\n      });\r\n\r\n      const debounce = (callback, delay) => {\r\n        let timer;\r\n        return (...args) => {\r\n          clearTimeout(timer);\r\n          timer = setTimeout(() => callback(...args), delay);\r\n        }\r\n      }\r\n\r\n      const model = editor.getModel();\r\n      if (!readonly) {\r\n        model.onDidChangeContent(() => {\r\n          var versionId = model.getVersionId();\r\n          debounce(async () => {\r\n            var newVersionId = model.getVersionId();\r\n            if (versionId !== newVersionId) return;\r\n\r\n            let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/parse`), model.getValue(), {\r\n              headers: {\r\n                'content-type': 'text/plain'\r\n              }\r\n            });\r\n\r\n            const markerData = data.map(x => {\r\n              return {\r\n                startColumn: x.token.startColumn,\r\n                endColumn: x.token.endColumn,\r\n                startLineNumber: x.token.startLine,\r\n                endLineNumber: x.token.endLine,\r\n                severity: MarkerSeverity.Error,\r\n                message: x.message\r\n              }\r\n            });\r\n\r\n            monaco.editor.setModelMarkers(model, 'powershell', markerData);\r\n          }, 300)();\r\n\r\n        });\r\n      }\r\n\r\n      if (resource) {\r\n        editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, () => onSave(resource?.resourceInfo?.parent, \"update\", resource));\r\n      }\r\n\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"refresh\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Refresh\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F5],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n        run: function (ed) {\r\n          refetch();\r\n          return null;\r\n        },\r\n      });\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"format\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Format\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F8],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n\r\n        run: () => {\r\n          editor.trigger(\r\n            \"anyString\",\r\n            \"editor.action.formatDocument\",\r\n            null\r\n          );\r\n          // editorRef.current.getAction('editor.action.formatDocument').run();\r\n          return null;\r\n        },\r\n      });\r\n    },\r\n    [refetch, onSave, readonly]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (monaco) {\r\n      monaco.editor.defineTheme(\"psu-dark\", psuDark);\r\n      monaco.editor.defineTheme(\"psu-light\", psuLight);\r\n      monaco.editor.setTheme(\r\n        currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"\r\n      );\r\n    }\r\n  }, [currentTheme, monaco]);\r\n\r\n  const onCopy = React.useCallback(() => copy(editorRef?.current?.getValue()), [\r\n    copy,\r\n  ]);\r\n  const zoomIn = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomIn\", {});\r\n  const zoomOut = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomOut\", {});\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      isReadOnly,\r\n      setIsReadOnly,\r\n      onSave,\r\n      monaco,\r\n      editor: editorRef?.current,\r\n      userData,\r\n      handleEditorDidMount,\r\n      currentTheme,\r\n      onCopy,\r\n      zoomIn,\r\n      zoomOut,\r\n      isSaving\r\n    }),\r\n    [\r\n      currentTheme,\r\n      handleEditorDidMount,\r\n      isReadOnly,\r\n      monaco,\r\n      onCopy,\r\n      onSave,\r\n      userData,\r\n      isSaving\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <EditorContext.Provider value={value}>{children}</EditorContext.Provider>\r\n  );\r\n}\r\n\r\nfunction SaveButton({ children: child, resource }) {\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={resource?.accessControls} allowedWithOneWayGitSync={false}>\r\n      <Tooltip title=\"Save\">\r\n        {React.cloneElement(child, {\r\n          type: child?.props?.type || \"text\",\r\n          icon: child?.props?.icon || <SaveFilled />,\r\n          onClick: callAll(child?.props?.onClick),\r\n        })}\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n\r\nfunction BaseEditor({ ...props }: EditorProps) {\r\n  const { currentTheme, handleEditorDidMount } = React.useContext(\r\n    EditorContext\r\n  );\r\n  return (\r\n    <Editor\r\n      theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n      language=\"powershell\"\r\n      loading={<Spin tip=\"Loading content...\" />}\r\n      height=\"calc((100vh - 256px) - 48px)\"\r\n      onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, null)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ntype FullEditorProps = {\r\n  title?: string;\r\n  showSave?: boolean;\r\n  refetch?: () => void;\r\n  options?: EditorProps[\"options\"];\r\n  actions?: CardProps[\"extra\"]\r\n  hideToolbar?: boolean;\r\n} & EditorProps;\r\n\r\nfunction FullEditor({\r\n  title,\r\n  options,\r\n  showSave = true,\r\n  actions,\r\n  hideToolbar,\r\n  ...props\r\n}: FullEditorProps) {\r\n  const {\r\n    handleEditorDidMount,\r\n    currentTheme,\r\n    onSave,\r\n    onCopy,\r\n    zoomIn,\r\n    zoomOut,\r\n    isSaving\r\n  } = React.useContext(EditorContext);\r\n  const context = usePageContext();\r\n  const resource = context?.resource;\r\n\r\n\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 0 }}\r\n      title={title}\r\n      extra={\r\n        !hideToolbar && <Fragment>\r\n          {actions}\r\n          <Tooltip title=\"Zoom in\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomInOutlined />}\r\n              onClick={() => zoomIn()}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Zoom out\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomOutOutlined />}\r\n              onClick={() => zoomOut()}\r\n            />\r\n          </Tooltip>\r\n          {showSave && (\r\n            <SaveButton resource={resource}>\r\n              <Button\r\n                icon={isSaving ? <LoadingOutlined /> : null}\r\n                onClick={callAll(() =>\r\n                  onSave(resource?.resourceInfo?.parent, \"update\", resource)\r\n                )}\r\n              />\r\n            </SaveButton>\r\n          )}\r\n          <Tooltip title=\"Copy\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<CopyFilled />}\r\n              onClick={() => onCopy()}\r\n            />\r\n          </Tooltip>\r\n          <LeftPanelSizeButton>\r\n            <Button />\r\n          </LeftPanelSizeButton>\r\n        </Fragment >\r\n      }\r\n    >\r\n      <BaseEditor\r\n        language=\"powershell\"\r\n        //@ts-ignore\r\n        height=\"calc((100vh - 256px) - 48px)\"\r\n        value={resource?.content || resource?.scriptBlock || resource?.settings || props?.value}\r\n        onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, resource)}\r\n        theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n        loading={props?.loading || <Spin tip=\"Loading content...\" />}\r\n        {...props}\r\n        options={{\r\n          wordWrap: \"on\",\r\n          wrappingIndent: \"same\",\r\n          minimap: {\r\n            enabled: false,\r\n          },\r\n          lineHeight: 20,\r\n          lineNumbersMinChars: 5,\r\n          scrollBeyondLastLine: false,\r\n          hideCursorInOverviewRuler: true,\r\n          overviewRulerLanes: 0,\r\n          overviewRulerBorder: false,\r\n          ...options,\r\n        }}\r\n      />\r\n    </Card >\r\n  );\r\n}\r\n\r\nconst useEditorContext = () => React.useContext(EditorContext);\r\n\r\nexport { CodeEditor, BaseEditor, FullEditor, SaveButton, useEditorContext };\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/ui/EditorButton.tsx","components/ui/ResourceInfo.tsx","components/ui/live-log.tsx","components/settings/role.tsx","components/editor/themes/EditorThemes.tsx","components/ui/Editor/snippets.js","components/ui/Editor/Editor.tsx"],"names":["EditorButton","to","accessControls","allowedWithOneWayGitSync","props","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","title","type","icon","ResourceInfo","navigate","useNavigate","bordered","bodyStyle","padding","ghost","onBack","LiveLog","traceId","React","useState","log","setLog","useEffect","connection","HubConnectionBuilder","withUrl","toRelativeUrl","withAutomaticReconnect","configureLogging","LogLevel","Debug","build","on","message","prev","start","then","send","catch","err","console","stop","ErrorBoundary","readonly","value","language","options","readOnly","RolePage","id","useParams","role","useQuery","enabled","initialData","queryClient","getQueryData","find","parseInt","data","identities","isLoading","current","setCurrent","setHidden","record","name","columns","key","dataIndex","width","render","text","hidden","resource","views","actions","loading","resourceInfo","parent","self","content","policy","capitalize","subTitle","headStyle","borderBottom","height","paddingTop","tabList","tab","activeTabKey","onTabChange","tabProps","tabBarStyle","psuDark","base","inherit","rules","token","foreground","colors","psuLight","snippets","range","label","kind","documentation","insertText","loader","config","paths","vs","init","monaco","languages","registerCompletionItemProvider","provideCompletionItems","model","a","incomplete","suggestions","registerDocumentFormattingEditProvider","displayName","provideDocumentFormattingEdits","axios","post","getValue","headers","startColumn","startLineNumber","endLineNumber","getLineCount","endColumn","getLineMaxColumn","triggerChars","getKind","CompletionItemKind","Text","Method","Folder","File","Property","triggerCharacters","position","context","findIndex","x","triggerCharacter","cursorPosition","getOffsetAt","map","help","EditorContext","createContext","CodeEditor","children","refetch","isReadOnly","setIsReadOnly","isSaving","setIsSaving","mutateAsync","useMutation","currentTheme","useThemeSwitcher","userData","useAppStore","useMonaco","copy","useClipboard","onSuccess","success","editorRef","useRef","onSave","useCallback","action","startsWith","schemaName","preserveBOM","lineEnding","onError","error","variables","refetchQueries","handleEditorDidMount","editor","register","setMonarchTokensProvider","tokenizer","root","getModel","onDidChangeContent","versionId","getVersionId","callback","delay","timer","args","clearTimeout","setTimeout","debounce","newVersionId","markerData","startLine","endLine","severity","MarkerSeverity","Error","setModelMarkers","addCommand","KeyMod","CtrlCmd","KeyCode","KEY_S","addAction","keybindings","F5","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","F8","trigger","defineTheme","setTheme","onCopy","zoomIn","zoomOut","useMemo","Provider","SaveButton","child","cloneElement","SaveFilled","onClick","callAll","BaseEditor","useContext","theme","tip","onMount","FullEditor","showSave","hideToolbar","usePageContext","extra","ZoomInOutlined","ZoomOutOutlined","LoadingOutlined","CopyFilled","scriptBlock","settings","wordWrap","wrappingIndent","minimap","lineHeight","lineNumbersMinChars","scrollBeyondLastLine","hideCursorInOverviewRuler","overviewRulerLanes","overviewRulerBorder"],"mappings":"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","file":"static/js/22.5c655329.chunk.js","sourcesContent":["import React from \"react\";\r\nimport RoleGuard from \"../standalone/role-guard\";\r\nimport { Button, ButtonProps, Tooltip } from \"antd\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\nimport { CodeFilled } from \"@ant-design/icons\";\r\nimport { AccessControlTypes, RoleGuardProps } from \"types\";\r\n\r\ntype EditorButtonProps = {\r\n  to: LinkProps[\"to\"];\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditorButton({\r\n  to,\r\n  accessControls,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditorButtonProps) {\r\n  return (\r\n    <RoleGuard\r\n      requiredRoles={[\"Administrator\", \"Operator\"]}\r\n      requiredAccessControls={AccessControlTypes.Edit}\r\n      accessControls={accessControls}\r\n      allowedWithOneWayGitSync={allowedWithOneWayGitSync}\r\n    >\r\n      <Tooltip title=\"Edit Details\">\r\n        <Link to={to}>\r\n          <Button type=\"text\" icon={<CodeFilled />} {...props} />\r\n        </Link>\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, PageHeaderProps, PageHeader } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ResourceInfo(props: PageHeaderProps & { children?: React.ReactNode }) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Card bordered={false} bodyStyle={{padding: 0}}>\r\n      <PageHeader {...props} ghost={true} onBack={() => navigate(-1)} />\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Alert } from \"antd\";\r\nimport { HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { BaseEditor, CodeEditor } from \"components/ui/Editor/Editor\";\r\nimport { toRelativeUrl } from \"components/utils/utils\";\r\n\r\nexport default function LiveLog({ traceId }) {\r\n    const [log, setLog] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        const connection = new HubConnectionBuilder()\r\n            .withUrl(toRelativeUrl(`/loghub`))\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Debug)\r\n            .build();\r\n\r\n        connection.on(\"sendLog\", (message) => {\r\n            setLog(prev => prev + `${message}\\r\\n`);\r\n        });\r\n\r\n        connection\r\n            .start()\r\n            .then(() => connection.send(\"subscribe\", traceId))\r\n            .catch((err) => console.log(\"signalr error\", err));\r\n        return () => { connection.stop() };\r\n    }, [traceId]);\r\n\r\n\r\n    return (\r\n        <Alert.ErrorBoundary>\r\n            <CodeEditor readonly={true}>\r\n                <BaseEditor value={log} language=\"psulog\" options={{ readOnly: true }} />\r\n            </CodeEditor>\r\n        </Alert.ErrorBoundary>\r\n    );\r\n}\r\n","import \"../../Tables.module.css\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CodeEditor, FullEditor } from \"components/ui/Editor/Editor\";\r\nimport {\r\n  LeftPanel,\r\n  Page,\r\n  PageContentBase,\r\n  PageHeader,\r\n  RightPanel,\r\n  RightPanelSizeButton,\r\n} from \"components/pages/Page\";\r\nimport { CustomColumns, Identity, Role } from \"types\";\r\nimport queryClient from \"components/utils/queryClient\";\r\nimport { useQuery } from \"react-query3\";\r\nimport ResourceInfo from \"components/ui/ResourceInfo\";\r\nimport Table from \"components/ui/Table\";\r\nimport { Button, Card, Space } from \"antd\";\r\nimport DeleteButton from \"components/ui/DeleteButton\";\r\nimport EditorButton from \"components/ui/EditorButton\";\r\nimport { capitalize } from \"components/utils/utils\";\r\nimport LiveLog from \"components/ui/live-log\";\r\n\r\nexport default function RolePage() {\r\n  const { id } = useParams();\r\n\r\n  const { data: role } = useQuery<Role>(`/role/${id}`, {\r\n    enabled: !!id,\r\n    initialData: (): Role =>\r\n      queryClient\r\n        .getQueryData<Role[]>(\"/role\")\r\n        ?.find((role) => role?.id === parseInt(id)) || null,\r\n  });\r\n\r\n  const { data: identities, isLoading } = useQuery<Identity[]>(\r\n    `/role/${id}/identity`,\r\n    {\r\n      enabled: !!role,\r\n    }\r\n  );\r\n\r\n  const [current, setCurrent] = React.useState(\"identities\")\r\n  const tabs = [\r\n    {\r\n      key: \"identities\",\r\n      tab: \"Identities\",\r\n    },\r\n    {\r\n      key: \"log\",\r\n      tab: \"Log\",\r\n    },\r\n  ];\r\n\r\n  function setHidden(record: Identity) {\r\n    return record.name === \"Admin\" || record.name === \"System\" ? true : false;\r\n  }\r\n\r\n  const columns: CustomColumns<Identity>[] = [\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            <EditorButton to={`/security/identities/${record?.id}`} allowedWithOneWayGitSync={false} />\r\n            <DeleteButton hidden={setHidden(record)} resource={record} allowedWithOneWayGitSync={false} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const views = {\r\n    identities: <Table\r\n      actions={[\r\n        <RightPanelSizeButton>\r\n          <Button />\r\n        </RightPanelSizeButton>,\r\n      ]}\r\n      title=\"Identities\"\r\n      data={identities}\r\n      columns={columns}\r\n      loading={isLoading}\r\n    />,\r\n    log: <LiveLog traceId={`role:${id}`} />,\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      resource={{\r\n        ...role,\r\n        resourceInfo: {\r\n          ...role.resourceInfo,\r\n          parent: role?.resourceInfo?.self,\r\n        },\r\n        content: role?.policy,\r\n      }}\r\n    >\r\n      <PageHeader>\r\n        <ResourceInfo\r\n          title={capitalize(role?.name)}\r\n          subTitle={`#${role?.id}`}\r\n        />\r\n      </PageHeader>\r\n      <PageContentBase>\r\n        <LeftPanel>\r\n          <CodeEditor>\r\n            <FullEditor title=\"Policy Editor\" />\r\n          </CodeEditor>\r\n        </LeftPanel>\r\n        <RightPanel>\r\n          <Card\r\n            bordered={false}\r\n            headStyle={{ borderBottom: 0, height: 64 }}\r\n            bodyStyle={{ paddingTop: 24 }}\r\n            tabList={tabs}\r\n            activeTabKey={current}\r\n            onTabChange={(key) => setCurrent(key)}\r\n            tabProps={{\r\n              type: \"line\",\r\n              tabBarStyle: { height: 64 },\r\n            }}\r\n          >\r\n            {views[current]}\r\n          </Card>\r\n        </RightPanel>\r\n      </PageContentBase>\r\n    </Page>\r\n  );\r\n}\r\n","import { editor } from \"monaco-editor\";\r\n\r\nconst psuDark: editor.IStandaloneThemeData = {\r\n  base: \"vs-dark\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#060606\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#060606\",\r\n    \"editor.foreground\": \"#ffffff4d\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#141414\",\r\n    \"editor.selectionBackground\": \"#141414\",\r\n  },\r\n};\r\n\r\nconst psuLight: editor.IStandaloneThemeData = {\r\n  base: \"vs\" as editor.BuiltinTheme,\r\n  inherit: true,\r\n  rules: [\r\n    { token: \"custom-error\", foreground: \"d32029\"},\r\n    { token: \"custom-verbose\", foreground: \"177ddc\" },\r\n    { token: \"custom-warning\", foreground: \"d89614\" },\r\n    { token: \"custom-debug\", foreground: \"13a8a8\" },\r\n    \r\n  ],\r\n  colors: {\r\n    \"activityBar.background\": \"#E1ECF9\",\r\n    \"activityBar.foreground\": \"#A9A9A9\",\r\n    \"editor.background\": \"#ffffff\",\r\n    \"editor.foreground\": \"#000000\",\r\n    \"activityBarBadge.background\": \"#A9A9A9\",\r\n    \"editor.lineHighlightBackground\": \"#c2c2c2\",\r\n    \"editor.selectionBackground\": \"#e1ecf8\",\r\n  },\r\n};\r\n\r\nexport { psuDark, psuLight };\r\n","const snippets = [\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Modal',\r\n        kind: 27,\r\n        documentation: 'Creates a new modal.',\r\n        insertText: 'Show-UDModal -Content {\\n\\tNew-UDTypography \"Hello, World\"\\n}'\r\n    },\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Chart with Colors',\r\n        kind: 27,\r\n        documentation: 'Creates a chart with colors',\r\n        insertText: `$Data = Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 10 \r\n$Options = @{\r\n    Type = 'bar'\r\n    Data = $Data\r\n    BackgroundColor = 'Red'\r\n    BorderColor = '#c61d4a'\r\n    HoverBackgroundColor = 'Blue'\r\n    HoverBorderColor = '#451dc6'\r\n    DataProperty = 'CPU'\r\n    LabelProperty = 'ProcessName'\r\n}\r\n\r\nNew-UDChartJS @Options`\r\n    },\r\n    {\r\n        range: null,\r\n        label: 'Dashboard: Form with validation',\r\n        kind: 27,\r\n        documentation: 'Creates a form with validation',\r\n        insertText: `New-UDForm -Content {\r\nNew-UDTextbox -Id 'txtValidateForm'\r\n} -OnValidate {\r\n    $FormContent = $EventData\r\n\r\n    if ($FormContent.txtValidateForm -eq $null -or $FormContent.txtValidateForm -eq '') {\r\n        New-UDFormValidationResult -ValidationError \"txtValidateForm is required\"\r\n    } else {\r\n        New-UDFormValidationResult -Valid\r\n    }\r\n} -OnSubmit {\r\n    Show-UDToast -Message $Body\r\n}`\r\n    },\r\n];\r\n\r\nexport default snippets;\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, Card, message, Spin, Tooltip } from \"antd\";\r\nimport { callAll, toRelativeUrl } from \"components/utils/utils\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport {\r\n  CopyFilled,\r\n  SaveFilled,\r\n  ZoomInOutlined,\r\n  ZoomOutOutlined,\r\n  LoadingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport Editor, {\r\n  useMonaco,\r\n  EditorProps,\r\n  loader,\r\n  Monaco,\r\n} from \"@monaco-editor/react\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { psuDark, psuLight } from \"../../editor/themes/EditorThemes\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { AccessControlTypes, Accessible } from \"types\";\r\nimport { editor, MarkerSeverity } from \"monaco-editor\";\r\nimport { LeftPanelSizeButton, usePageContext } from \"components/pages/Page\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { CardProps } from \"antd/es\";\r\nimport axios from \"axios\";\r\nimport snippets from './snippets';\r\n\r\nloader.config({ paths: { vs: toRelativeUrl(\"/admin/vs\") } });\r\nloader.init().then(monaco => {\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    provideCompletionItems: async (model, options, token) => {\r\n\r\n      return {\r\n        incomplete: false,\r\n        suggestions: snippets\r\n      }\r\n    }\r\n  });\r\n\r\n  monaco.languages.registerDocumentFormattingEditProvider(\"powershell\", {\r\n    displayName: \"PowerShell\",\r\n    provideDocumentFormattingEdits: async (model, options, token) => {\r\n      let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/format`), model.getValue(), {\r\n        headers: {\r\n          'content-type': 'text/plain'\r\n        }\r\n      });\r\n\r\n      return [{\r\n        text: data,\r\n        range: {\r\n          startColumn: 1,\r\n          startLineNumber: 1,\r\n          endLineNumber: model.getLineCount(),\r\n          endColumn: model.getLineMaxColumn(model.getLineCount())\r\n        }\r\n      }];\r\n    }\r\n  })\r\n\r\n  const triggerChars = [\"$\", \"-\", \"\\\\\", \"/\", \":\", \".\"]\r\n\r\n  const getKind = (type: number) => {\r\n    switch (type) {\r\n      case 0: return monaco.languages.CompletionItemKind.Text;\r\n      case 2: return monaco.languages.CompletionItemKind.Method;\r\n      case 3: return monaco.languages.CompletionItemKind.Folder;\r\n      case 4: return monaco.languages.CompletionItemKind.File;\r\n      case 5: return monaco.languages.CompletionItemKind.Property;\r\n      case 6: return monaco.languages.CompletionItemKind.Method;\r\n      case 7: return monaco.languages.CompletionItemKind.Property;\r\n      case 9: return monaco.languages.CompletionItemKind.Property;\r\n      default: return monaco.languages.CompletionItemKind.Text;\r\n    }\r\n  }\r\n\r\n  monaco.languages.registerCompletionItemProvider(\"powershell\", {\r\n    triggerCharacters: triggerChars,\r\n    provideCompletionItems: async (model, position, context) => {\r\n      if (triggerChars.findIndex(x => x === context.triggerCharacter) !== -1) {\r\n        let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/complete`), {\r\n          content: model.getValue(),\r\n          cursorPosition: model.getOffsetAt(position)\r\n        });\r\n\r\n        const suggestions = data?.map(x => {\r\n          if (x.type === 3 || x.type === 4) {\r\n\r\n            return {\r\n              insertText: x.label,\r\n              label: x.label,\r\n              documentation: x.help,\r\n              kind: getKind(x.type),\r\n            }\r\n          }\r\n\r\n          return {\r\n            insertText: x.text,\r\n            label: x.text,\r\n            documentation: x.help,\r\n            kind: getKind(x.type),\r\n          }\r\n        });\r\n\r\n        return {\r\n          incomplete: false,\r\n          suggestions\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  });\r\n})\r\n\r\ninterface EditorContextProps {\r\n  isReadOnly: boolean;\r\n  setIsReadOnly: React.Dispatch<React.SetStateAction<boolean>>;\r\n  onSave: (key: any, action: any, resource: any) => Promise<void>;\r\n  monaco: Monaco;\r\n  editor: editor.IStandaloneCodeEditor;\r\n  userData: Accessible;\r\n  handleEditorDidMount: (editor: any, monaco: any, resource: any) => void;\r\n  currentTheme: string;\r\n  onCopy: () => void;\r\n  zoomIn: () => void;\r\n  zoomOut: () => void;\r\n  isSaving: boolean;\r\n}\r\n\r\nconst EditorContext = React.createContext<EditorContextProps>(null);\r\n\r\nfunction CodeEditor({ children, refetch = () => { }, readonly = false }) {\r\n  const [isReadOnly, setIsReadOnly] = React.useState(readonly);\r\n  const [isSaving, setIsSaving] = React.useState(false);\r\n  const { mutateAsync } = useMutation<any>();\r\n  const { currentTheme } = useThemeSwitcher();\r\n  const { userData } = useAppStore();\r\n  const monaco = useMonaco();\r\n\r\n  const { copy } = useClipboard({\r\n    onSuccess: (text) => message.success(`Copied.`),\r\n  });\r\n\r\n  const editorRef = React.useRef<editor.IStandaloneCodeEditor>(null);\r\n\r\n\r\n  const onSave = React.useCallback(\r\n    async (key: string, action: any, resource: any) => {\r\n\r\n      setIsSaving(true);\r\n      setIsReadOnly(true);\r\n\r\n      if (key === \"/script\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/endpoint\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"scriptBlock\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/dashboard\") {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith(\"/role\")) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"policy\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key === \"/settings\") {\r\n        key = \"/settings/authentication/1\";\r\n        resource[\"settings\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (key.startsWith('/module')) {\r\n        key = resource?.resourceInfo?.self;\r\n        resource[\"content\"] = editorRef?.current?.getValue();\r\n      }\r\n\r\n      if (resource?.resourceInfo?.schemaName === \"configuration\") {\r\n        resource[\"content\"] = editorRef?.current?.getValue({\r\n          preserveBOM: true,\r\n          lineEnding: \"\\r\\n\",\r\n        });\r\n      }\r\n\r\n      await mutateAsync(\r\n        { key, action, resource },\r\n        {\r\n          onError: (error) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.error(error.message);\r\n          },\r\n          onSuccess: (data, variables) => {\r\n            setIsSaving(false);\r\n            setIsReadOnly(false);\r\n            message.success(\"Changes saved!\");\r\n            queryClient.refetchQueries(key);\r\n            refetch()\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [mutateAsync, refetch]\r\n  );\r\n\r\n\r\n  const handleEditorDidMount = React.useCallback(\r\n    (editor, monaco, resource) => {\r\n      editorRef.current = editor;\r\n\r\n      monaco.languages.register({ id: \"psulog\" });\r\n      monaco.languages.setMonarchTokensProvider(\"psulog\", {\r\n        tokenizer: {\r\n          root: [\r\n            [/\\[error.*/, \"custom-error\"],\r\n            [/\\[verbose.*/, \"custom-verbose\"],\r\n            [/\\[warning.*/, \"custom-warning\"],\r\n            [/\\[debug.*/, \"custom-debug\"],\r\n            [/\\[information.*/, \"custom-info\"],\r\n          ],\r\n        },\r\n      });\r\n\r\n      const debounce = (callback, delay) => {\r\n        let timer;\r\n        return (...args) => {\r\n          clearTimeout(timer);\r\n          timer = setTimeout(() => callback(...args), delay);\r\n        }\r\n      }\r\n\r\n      const model = editor.getModel();\r\n      if (!readonly) {\r\n        model.onDidChangeContent(() => {\r\n          var versionId = model.getVersionId();\r\n          debounce(async () => {\r\n            var newVersionId = model.getVersionId();\r\n            if (versionId !== newVersionId) return;\r\n\r\n            let { data } = await axios.post(toRelativeUrl(`/api/v1/editor/parse`), model.getValue(), {\r\n              headers: {\r\n                'content-type': 'text/plain'\r\n              }\r\n            });\r\n\r\n            const markerData = data.map(x => {\r\n              return {\r\n                startColumn: x.token.startColumn,\r\n                endColumn: x.token.endColumn,\r\n                startLineNumber: x.token.startLine,\r\n                endLineNumber: x.token.endLine,\r\n                severity: MarkerSeverity.Error,\r\n                message: x.message\r\n              }\r\n            });\r\n\r\n            monaco.editor.setModelMarkers(model, 'powershell', markerData);\r\n          }, 300)();\r\n\r\n        });\r\n      }\r\n\r\n      if (resource) {\r\n        editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_S, () => onSave(resource?.resourceInfo?.parent, \"update\", resource));\r\n      }\r\n\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"refresh\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Refresh\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F5],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n        run: function (ed) {\r\n          refetch();\r\n          return null;\r\n        },\r\n      });\r\n      editor.addAction({\r\n        // An unique identifier of the contributed action.\r\n        id: \"format\",\r\n\r\n        // A label of the action that will be presented to the user.\r\n        label: \"Format\",\r\n\r\n        // An optional array of keybindings for the action.\r\n        keybindings: [monaco.KeyCode.F8],\r\n\r\n        // A precondition for this action.\r\n        precondition: null,\r\n\r\n        // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n        keybindingContext: null,\r\n\r\n        contextMenuGroupId: \"navigation\",\r\n\r\n        contextMenuOrder: 1.5,\r\n\r\n        run: () => {\r\n          editor.trigger(\r\n            \"anyString\",\r\n            \"editor.action.formatDocument\",\r\n            null\r\n          );\r\n          // editorRef.current.getAction('editor.action.formatDocument').run();\r\n          return null;\r\n        },\r\n      });\r\n    },\r\n    [refetch, onSave, readonly]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (monaco) {\r\n      monaco.editor.defineTheme(\"psu-dark\", psuDark);\r\n      monaco.editor.defineTheme(\"psu-light\", psuLight);\r\n      monaco.editor.setTheme(\r\n        currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"\r\n      );\r\n    }\r\n  }, [currentTheme, monaco]);\r\n\r\n  const onCopy = React.useCallback(() => copy(editorRef?.current?.getValue()), [\r\n    copy,\r\n  ]);\r\n  const zoomIn = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomIn\", {});\r\n  const zoomOut = () =>\r\n    editorRef?.current?.trigger(\"keyboard\", \"editor.action.fontZoomOut\", {});\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      isReadOnly,\r\n      setIsReadOnly,\r\n      onSave,\r\n      monaco,\r\n      editor: editorRef?.current,\r\n      userData,\r\n      handleEditorDidMount,\r\n      currentTheme,\r\n      onCopy,\r\n      zoomIn,\r\n      zoomOut,\r\n      isSaving\r\n    }),\r\n    [\r\n      currentTheme,\r\n      handleEditorDidMount,\r\n      isReadOnly,\r\n      monaco,\r\n      onCopy,\r\n      onSave,\r\n      userData,\r\n      isSaving\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <EditorContext.Provider value={value}>{children}</EditorContext.Provider>\r\n  );\r\n}\r\n\r\nfunction SaveButton({ children: child, resource }) {\r\n  return (\r\n    <RoleGuard requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={resource?.accessControls} allowedWithOneWayGitSync={false}>\r\n      <Tooltip title=\"Save\">\r\n        {React.cloneElement(child, {\r\n          type: child?.props?.type || \"text\",\r\n          icon: child?.props?.icon || <SaveFilled />,\r\n          onClick: callAll(child?.props?.onClick),\r\n        })}\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n\r\nfunction BaseEditor({ ...props }: EditorProps) {\r\n  const { currentTheme, handleEditorDidMount } = React.useContext(\r\n    EditorContext\r\n  );\r\n  return (\r\n    <Editor\r\n      theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n      language=\"powershell\"\r\n      loading={<Spin tip=\"Loading content...\" />}\r\n      height=\"calc((100vh - 256px) - 48px)\"\r\n      onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, null)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\ntype FullEditorProps = {\r\n  title?: string;\r\n  showSave?: boolean;\r\n  refetch?: () => void;\r\n  options?: EditorProps[\"options\"];\r\n  actions?: CardProps[\"extra\"]\r\n  hideToolbar?: boolean;\r\n} & EditorProps;\r\n\r\nfunction FullEditor({\r\n  title,\r\n  options,\r\n  showSave = true,\r\n  actions,\r\n  hideToolbar,\r\n  ...props\r\n}: FullEditorProps) {\r\n  const {\r\n    handleEditorDidMount,\r\n    currentTheme,\r\n    onSave,\r\n    onCopy,\r\n    zoomIn,\r\n    zoomOut,\r\n    isSaving\r\n  } = React.useContext(EditorContext);\r\n  const context = usePageContext();\r\n  const resource = context?.resource;\r\n\r\n\r\n  return (\r\n    <Card\r\n      bordered={false}\r\n      bodyStyle={{ padding: 0 }}\r\n      title={title}\r\n      extra={\r\n        !hideToolbar && <Fragment>\r\n          {actions}\r\n          <Tooltip title=\"Zoom in\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomInOutlined />}\r\n              onClick={() => zoomIn()}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Zoom out\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<ZoomOutOutlined />}\r\n              onClick={() => zoomOut()}\r\n            />\r\n          </Tooltip>\r\n          {showSave && (\r\n            <SaveButton resource={resource}>\r\n              <Button\r\n                icon={isSaving ? <LoadingOutlined /> : null}\r\n                onClick={callAll(() =>\r\n                  onSave(resource?.resourceInfo?.parent, \"update\", resource)\r\n                )}\r\n              />\r\n            </SaveButton>\r\n          )}\r\n          <Tooltip title=\"Copy\">\r\n            <Button\r\n              type=\"text\"\r\n              icon={<CopyFilled />}\r\n              onClick={() => onCopy()}\r\n            />\r\n          </Tooltip>\r\n          <LeftPanelSizeButton>\r\n            <Button />\r\n          </LeftPanelSizeButton>\r\n        </Fragment >\r\n      }\r\n    >\r\n      <BaseEditor\r\n        language=\"powershell\"\r\n        //@ts-ignore\r\n        height=\"calc((100vh - 256px) - 48px)\"\r\n        value={resource?.content || resource?.scriptBlock || resource?.settings || props?.value}\r\n        onMount={(editor, monaco) => handleEditorDidMount(editor, monaco, resource)}\r\n        theme={currentTheme === \"dark\" ? \"psu-dark\" : \"psu-light\"}\r\n        loading={props?.loading || <Spin tip=\"Loading content...\" />}\r\n        {...props}\r\n        options={{\r\n          wordWrap: \"on\",\r\n          wrappingIndent: \"same\",\r\n          minimap: {\r\n            enabled: false,\r\n          },\r\n          lineHeight: 20,\r\n          lineNumbersMinChars: 5,\r\n          scrollBeyondLastLine: false,\r\n          hideCursorInOverviewRuler: true,\r\n          overviewRulerLanes: 0,\r\n          overviewRulerBorder: false,\r\n          ...options,\r\n        }}\r\n      />\r\n    </Card >\r\n  );\r\n}\r\n\r\nconst useEditorContext = () => React.useContext(EditorContext);\r\n\r\nexport { CodeEditor, BaseEditor, FullEditor, SaveButton, useEditorContext };\r\n"],"sourceRoot":""}
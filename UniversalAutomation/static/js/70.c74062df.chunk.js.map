{"version":3,"sources":["components/api/components/command-card.tsx"],"names":["PowerShellCommandCard","id","useParams","useQuery","endpoint","data","isLoading","React","useState","method","setMethod","useEffect","copyPSCommand","useClipboard","onSuccess","text","message","info","copy","ErrorBoundary","title","bordered","style","minWidth","extra","size","requiredRoles","defaultValue","onChange","e","value","map","x","Option","type","icon","onClick","fullUrl","window","location","origin","url","headStyle","borderBottom"],"mappings":"wVASe,SAASA,IAAyB,IACvCC,EAAOC,cAAPD,GADsC,EAERE,YAAQ,oBAAwBF,IAAxDG,EAFgC,EAEtCC,KAAgBC,EAFsB,EAEtBA,UAFsB,EAGlBC,IAAMC,SAAS,IAHG,mBAGvCC,EAHuC,KAG/BC,EAH+B,KAK9CH,IAAMI,WAAU,WAKd,OAJKL,GACHI,EAAUN,EAASK,OAAO,IAGrB,eACN,CAACH,EAAWF,IAX+B,IAahCQ,EAAkBC,YAAa,CAC3CC,UAAW,SAACC,GAAD,OAAUC,IAAQC,KAAR,iCADfC,KAIR,OACE,cAAC,IAAMC,cAAP,UACE,cAAC,IAAD,CACEC,MAAM,aACNC,UAAU,EACVC,MAAO,CAAEC,SAAU,QACnBC,MACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,UACInB,GACA,eAAC,IAAD,CAAWoB,cAAe,CAAC,WAAY,iBAAvC,UACE,cAAC,UAAD,CAAQC,aAAcvB,EAASK,OAAO,GAAImB,SAAU,SAAAC,GAAC,OAAInB,EAAUmB,IAAIC,MAAOrB,EAA9E,SACGL,EAASK,OAAOsB,KAAI,SAAAC,GAAC,OAAI,cAAC,UAAOC,OAAR,CAAeH,MAAOE,EAAtB,SAA0BA,SAEtD,cAAC,IAAD,CAASZ,MAAM,OAAf,SACE,cAAC,IAAD,CACEc,KAAK,OACLC,KAAM,cAAC,IAAD,IACNC,QAAS,kBACPxB,EAAc,qBAAD,QACkB,OAARR,QAAQ,IAARA,OAAA,EAAAA,EAAUiC,UAAV,UAClBC,OAAOC,SAASC,QADE,cACOpC,QADP,IACOA,OADP,EACOA,EAAUqC,KAF3B,oBAGChC,cAS5BiC,UAAW,CACTC,aAAc,SA7BlB,sCAgCgC,OAARvC,QAAQ,IAARA,OAAA,EAAAA,EAAUiC,UAAV,UAAwBC,OAAOC,SAASC,QAAxC,cAAiDpC,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAUqC,IAA3D,oBAA0EhC","file":"static/js/70.c74062df.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Endpoint } from \"types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CopyOutlined } from \"@ant-design/icons\";\r\nimport { Space, Button, message, Alert, Card, Tooltip, Select } from \"antd\";\r\nimport RoleGuard from \"../../standalone/role-guard\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { useQuery } from \"react-query3\";\r\n\r\nexport default function PowerShellCommandCard() {\r\n  const { id } = useParams();\r\n  const { data: endpoint, isLoading } = useQuery<Endpoint>(`/endpoint/${id}`);\r\n  const [method, setMethod] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (!isLoading) {\r\n      setMethod(endpoint.method[0]);\r\n    }\r\n\r\n    return () => { }\r\n  }, [isLoading, endpoint])\r\n\r\n  const { copy: copyPSCommand } = useClipboard({\r\n    onSuccess: (text) => message.info(`PowerShell command copied.`),\r\n  });\r\n\r\n  return (\r\n    <Alert.ErrorBoundary>\r\n      <Card\r\n        title=\"PowerShell\"\r\n        bordered={true}\r\n        style={{ minWidth: \"100%\" }}\r\n        extra={\r\n          <Space size=\"small\">\r\n            {!isLoading &&\r\n              <RoleGuard requiredRoles={[\"Operator\", \"Administrator\"]}>\r\n                <Select defaultValue={endpoint.method[0]} onChange={e => setMethod(e)} value={method}>\r\n                  {endpoint.method.map(x => <Select.Option value={x}>{x}</Select.Option>)}\r\n                </Select>\r\n                <Tooltip title=\"Copy\">\r\n                  <Button\r\n                    type=\"text\"\r\n                    icon={<CopyOutlined />}\r\n                    onClick={() =>\r\n                      copyPSCommand(\r\n                        `Invoke-RestMethod ${endpoint?.fullUrl ||\r\n                        `${window.location.origin}${endpoint?.url}`\r\n                        } -Method ${method}`\r\n                      )\r\n                    }\r\n                  />\r\n                </Tooltip>\r\n              </RoleGuard>\r\n            }\r\n          </Space>\r\n        }\r\n        headStyle={{\r\n          borderBottom: \"unset\",\r\n        }}\r\n      >\r\n        {`Invoke-RestMethod ${endpoint?.fullUrl || `${window.location.origin}${endpoint?.url} -Method ${method}`\r\n          }`}\r\n      </Card>\r\n    </Alert.ErrorBoundary>\r\n  );\r\n}\r\n"],"sourceRoot":""}
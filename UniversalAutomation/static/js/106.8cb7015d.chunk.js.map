{"version":3,"sources":["components/tags/tags.tsx"],"names":["Table","React","lazy","EditModal","DeleteButton","NewTagModal","Tags","useQuery","tags","data","isLoading","columns","key","title","dataIndex","width","editable","render","text","record","color","name","align","colSpan","rowSpan","allowedWithOneWayGitSync","resource","actions","loading","showHeader"],"mappings":"+JAAA,8GAMMA,EAAQC,IAAMC,MAAK,kBAAM,4CACzBC,EAAYF,IAAMC,MAAK,kBAAM,iCAC7BE,EAAeH,IAAMC,MAAK,kBAAM,4CAChCG,EAAcJ,IAAMC,MAAK,kBAAM,oCAEtB,SAASI,IAAQ,IAAD,EACKC,YAAoB,QAAxCC,EADe,EACrBC,KAAYC,EADS,EACTA,UAEdC,EAAoC,CACxC,CACEC,IAAK,OACLC,MAAO,OACPC,UAAW,OACXC,MAAO,cACPC,UAAU,EACVC,OAAQ,SAACC,EAAMC,GACb,OAAO,cAAC,IAAD,CAAKC,MAAOD,EAAOC,MAAnB,SAA2BD,EAAOE,SAG7C,CACEC,MAAO,OACPV,IAAK,cACLC,MAAO,cACPC,UAAW,cACXE,UAAU,EACVO,QAAS,GAEX,CACEX,IAAK,QACLC,MAAO,QACPG,UAAU,EACVO,QAAS,EACTC,QAAS,GAEX,CACET,MAAO,cACPD,UAAW,UACXE,UAAU,EACVC,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAChB,EAAD,CAAWgB,OAAQA,EAAQM,0BAA0B,MAEvD,cAACrB,EAAD,CAAcsB,SAAUP,EAAQM,0BAA0B,UAMlE,OACE,cAACzB,EAAD,CACEa,MAAM,OACNc,QAAS,CACP,cAAC,IAAD,UACE,cAACtB,EAAD,OAGJM,QAASA,EACTF,KAAMD,EACNoB,QAASlB,EACTmB,YAAY","file":"static/js/106.8cb7015d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { CustomColumns, Tag as TagType } from \"../../types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Space, Tag } from \"antd\";\r\nimport { Modal } from \"components/ui/Modal\";\r\n\r\nconst Table = React.lazy(() => import(\"components/ui/Table\"));\r\nconst EditModal = React.lazy(() => import(\"components/ui/EditModal\"));\r\nconst DeleteButton = React.lazy(() => import(\"components/ui/DeleteButton\"));\r\nconst NewTagModal = React.lazy(() => import(\"./tagModal\"));\r\n\r\nexport default function Tags() {\r\n  const { data: tags, isLoading } = useQuery<TagType[]>(\"/tag\");\r\n\r\n  const columns: CustomColumns<TagType>[] = [\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      width: \"fit-content\",\r\n      editable: true,\r\n      render: (text, record) => {\r\n        return <Tag color={record.color}>{record.name}</Tag>;\r\n      },\r\n    },\r\n    {\r\n      align: \"left\",\r\n      key: \"description\",\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n      editable: true,\r\n      colSpan: 2,\r\n    },\r\n    {\r\n      key: \"color\",\r\n      title: \"Color\",\r\n      editable: true,\r\n      colSpan: 0,\r\n      rowSpan: 0,\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      editable: false,\r\n      render: (text, record) => (\r\n        <Space>\r\n          <Modal>\r\n            <EditModal record={record} allowedWithOneWayGitSync={false} />\r\n          </Modal>\r\n          <DeleteButton resource={record} allowedWithOneWayGitSync={false} />\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      title=\"Tags\"\r\n      actions={[\r\n        <Modal>\r\n          <NewTagModal />\r\n        </Modal>,\r\n      ]}\r\n      columns={columns}\r\n      data={tags}\r\n      loading={isLoading}\r\n      showHeader={false}\r\n    />\r\n  );\r\n}\r\n"],"sourceRoot":""}
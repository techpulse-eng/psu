{"version":3,"sources":["components/settings/NewLicenseModal.tsx","components/settings/trial-modal.tsx","components/settings/Licenses.tsx"],"names":["NewLicenseModal","useModalContext","onOk","form","Modal","requiredRoles","requiredAccessControls","AccessControlTypes","Create","allowedWithOneWayGitSync","children","title","onClickOk","formName","Form","schemaName","name","preserve","TrialModal","setIsOpen","View","type","danger","icon","InfoCircleFilled","onCancel","destroyOnClose","footer","href","target","ShoppingCartOutlined","Title","level","Fragment","style","fontWeight","Table","React","lazy","DeleteButton","dayjs","extend","utc","localizedFormat","Licenses","useQuery","enabled","refetchOnWindowFocus","licenses","data","isLoading","refetch","columns","dataIndex","key","editable","sorter","a","b","id","render","text","record","productName","setLicenseName","developer","BranchesOutlined","format","status","width","onClick","window","location","resource","actions","length","loading","queryFn"],"mappings":"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","file":"static/js/104.9f5bcaeb.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { AccessControlTypes, License } from \"../../types\";\r\nimport { Button } from \"antd\";\r\nimport {\r\n  ModalContent,\r\n  ModalOpenButton,\r\n  useModalContext,\r\n} from \"components/ui/Modal\";\r\nimport { Form, FormContentBase } from \"components/ui/Form/Form\";\r\n\r\nexport default function NewLicenseModal() {\r\n  const { onOk, form } = useModalContext();\r\n\r\n  function handleOk() {\r\n    onOk(\"/license\", \"create\", {} as License);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\"]} requiredAccessControls={AccessControlTypes.Create} allowedWithOneWayGitSync={true}>\r\n        <Button children=\"Add New License\" />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"New license\" onClickOk={handleOk} formName=\"create_license_form\">\r\n        <Form schemaName=\"license\">\r\n          <FormContentBase\r\n            name=\"create_license_form\"\r\n            form={form}\r\n            preserve={false}\r\n          />\r\n        </Form>\r\n      </ModalContent>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { ShoppingCartOutlined } from \"@ant-design/icons/es/icons\";\r\nimport { AccessControlTypes } from \"../../types\";\r\nimport { ModalContentBase, ModalOpenButton, useModalContext } from \"components/ui/Modal\";\r\nimport { Button, Typography } from \"antd\";\r\nimport { InfoCircleFilled } from \"@ant-design/icons\";\r\n\r\nfunction TrialModal() {\r\n  const { setIsOpen } = useModalContext()\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\"]} requiredAccessControls={AccessControlTypes.View} allowedWithOneWayGitSync={true}>\r\n        <Button type=\"primary\" danger icon={<InfoCircleFilled />}>\r\n          Free Version Info\r\n        </Button>\r\n      </ModalOpenButton>\r\n      <ModalContentBase\r\n        title=\"Free\"\r\n        onCancel={() => setIsOpen(false)}\r\n        destroyOnClose={true}\r\n        footer={[\r\n          <Button\r\n            href=\"https://ironmansoftware.com/pricing/powershell-universal\"\r\n            target=\"_blank\"\r\n            type=\"primary\"\r\n            icon={<ShoppingCartOutlined />}\r\n          >\r\n            Buy\r\n          </Button>\r\n        ]}\r\n      >\r\n        <Typography.Title level={4}>\r\n          You're currently running the free version of PowerShell Universal\r\n        </Typography.Title>\r\n\r\n        <React.Fragment>\r\n          <Typography style={{ fontWeight: \"bold\" }}>Universal API</Typography>\r\n          <ul>\r\n            <li>No RegEx Support</li>\r\n            <li>No Authentication</li>\r\n            <li>No Rate Limiting</li>\r\n            <li>Limit of 25 APIs</li>\r\n          </ul>\r\n          <Typography style={{ fontWeight: \"bold\" }}>\r\n            Universal Automation\r\n          </Typography>\r\n          <ul>\r\n            <li>25 Jobs Per Day</li>\r\n            <li>2 Concurrent Jobs</li>\r\n            <li>No triggers</li>\r\n          </ul>\r\n          <Typography style={{ fontWeight: \"bold\" }}>\r\n            Universal Dashboard\r\n          </Typography>\r\n          <ul>\r\n            <li>Limited Options</li>\r\n            <li>No Authentication</li>\r\n          </ul>\r\n          <Typography style={{ fontWeight: \"bold\" }}>\r\n            Platform\r\n          </Typography>\r\n          <ul>\r\n            <li>No Custom Login Page</li>\r\n            <li>No Git Integration</li>\r\n          </ul>\r\n        </React.Fragment>\r\n\r\n\r\n      </ModalContentBase>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default TrialModal;\r\n","import React from \"react\";\r\nimport { Button, Space, Tooltip, Typography } from \"antd\";\r\nimport { CustomColumns, License } from \"../../types\";\r\nimport { setLicenseName } from \"../utils/utils\";\r\nimport { Modal } from \"components/ui/Modal\";\r\nimport { useQuery } from \"react-query3\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\r\nimport NewLicenseModal from \"./NewLicenseModal\";\r\nimport TrialModal from \"./trial-modal\";\r\nimport { BranchesOutlined } from \"@ant-design/icons\";\r\n\r\nconst Table = React.lazy(() => import(\"components/ui/Table\"));\r\nconst DeleteButton = React.lazy(() => import(\"components/ui/DeleteButton\"));\r\n\r\ndayjs.extend(utc);\r\ndayjs.extend(localizedFormat);\r\n\r\nconst Licenses = () => {\r\n  const { data: licenses, isLoading, refetch } = useQuery<License[]>(\r\n    \"/license\",\r\n    {\r\n      enabled: false,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const onDownloadDevLicense = (id) => {\r\n    window.location.href = `/api/v1/license/developer/${id}`\r\n  }\r\n\r\n  const columns: CustomColumns<License>[] = [\r\n    {\r\n      title: \"Product\",\r\n      dataIndex: \"product\",\r\n      key: \"product\",\r\n      editable: false,\r\n      sorter: (a, b) => {\r\n        return a.id - b.id;\r\n      },\r\n      render: (text, record) => {\r\n        var productName = setLicenseName(text);\r\n        return (\r\n          <Space>\r\n            {record?.developer && <Tooltip title=\"Developer license installed. All features are enabled but this instance can't be used remotely.\">\r\n              <BranchesOutlined />\r\n            </Tooltip>}\r\n            <Typography>{productName}</Typography>\r\n          </Space>\r\n        )\r\n      }\r\n\r\n    },\r\n    {\r\n      title: \"Start Date\",\r\n      dataIndex: \"startDate\",\r\n      key: \"startDate\",\r\n      editable: false,\r\n      sorter: (a, b) => {\r\n        return a.id - b.id;\r\n      },\r\n      render: (text) => {\r\n        return dayjs(text).format(\"lll\");\r\n      },\r\n    },\r\n    {\r\n      title: \"End Date\",\r\n      dataIndex: \"endDate\",\r\n      key: \"endDate\",\r\n      sorter: (a, b) => {\r\n        return a.id - b.id;\r\n      },\r\n      render: (text, record) => {\r\n        return record.status || dayjs(text).format(\"lll\");\r\n      },\r\n    },\r\n    {\r\n      title: \"Licensee\",\r\n      dataIndex: \"licensee\",\r\n      key: \"licensee\",\r\n      sorter: (a, b) => {\r\n        return a.id - b.id;\r\n      },\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      editable: false,\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            {!record?.developer && <Tooltip title=\"Developer licenses can be used for local development of PowerShell Universal. They do not allow for remote access.\">\r\n              <Button onClick={() => onDownloadDevLicense(record.id)} icon={<BranchesOutlined />}>Generate Developer License</Button>\r\n            </Tooltip>}\r\n            <DeleteButton resource={record} allowedWithOneWayGitSync={true} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      title=\"Licenses\"\r\n      actions={[\r\n        <Modal>\r\n          <NewLicenseModal />\r\n        </Modal>,\r\n        licenses?.length > 0 ? <React.Fragment /> : <Modal><TrialModal /></Modal>\r\n      ]}\r\n      data={licenses}\r\n      columns={columns}\r\n      loading={isLoading}\r\n      queryFn={refetch}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Licenses;\r\n"],"sourceRoot":""}
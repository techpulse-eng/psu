{"version":3,"sources":["components/jobs/JobPipelineAsTree.tsx"],"names":["JobPipelineAsTree","resource","usePageContext","id","useParams","data","useQuery","select","jsonData","undefined","JSON","parse","enabled","refetchOnWindowFocus","copy","useClipboard","onSuccess","text","message","success","tip","spinning","status","defaultExpandAll","virtual","height","style","onSelect","keys","node","title","treeData"],"mappings":"8JAAA,6HAQe,SAASA,IAAkC,IACjDC,EAAYC,cAAZD,SACCE,EAAOC,cAAPD,GACAE,EAASC,YAAQ,eACfH,EADe,mBAEvB,CACEI,OAAQ,SAACF,GAAD,iBACgB,QAAtB,UAAAA,EAAK,UAAL,eAASG,gBAA2CC,KAAtB,UAAAJ,EAAK,UAAL,eAASG,UACnCE,KAAKC,MAAL,UAAWN,EAAK,UAAhB,aAAW,EAASG,UACpB,MACNI,UAAWT,EACXU,sBAAsB,IARlBR,KAYAS,EAASC,YAAa,CAC5BC,UAAW,SAACC,GAAD,OAAUC,IAAQC,QAAR,cADfL,KAIR,OACE,cAAC,IAAD,CAAMM,IAAI,iCAAiCC,SAA+B,KAAb,OAARpB,QAAQ,IAARA,OAAA,EAAAA,EAAUqB,QAA/D,SACE,cAAC,IAAD,CACEC,kBAAkB,EAClBC,SAAS,EACTC,OAAQ,IACRC,MAAO,CAAED,OAAQ,gCACjBE,SAAU,SAACC,EAAD,OAASC,EAAT,EAASA,KAAT,OAAoBf,EAAK,GAAD,OAAIe,EAAKC,SAC3CC,SAAU1B","file":"static/js/90.5888c753.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { usePageContext } from \"components/pages/Page\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { JobPipelineOutput, JobPipelineOutputData } from \"types\";\r\nimport { message, Spin, Tree } from \"antd\";\r\nimport useClipboard from \"use-clipboard-hook\";\r\nimport { useParams } from \"react-router\";\r\n\r\nexport default function JobPipelineAsTree(): JSX.Element {\r\n  const {resource} = usePageContext()\r\n  const { id } = useParams()\r\n  const { data } = useQuery<any>(\r\n    `/job/${id}/pipelineOutput`,\r\n    {\r\n      select: (data: JobPipelineOutput[]): JobPipelineOutputData =>\r\n        data[0]?.jsonData !== null || data[0]?.jsonData !== undefined\r\n          ? JSON.parse(data[0]?.jsonData)\r\n          : null,\r\n      enabled: !!id,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const { copy } = useClipboard({\r\n    onSuccess: (text) => message.success(`Copied.`),\r\n  });\r\n\r\n  return (\r\n    <Spin tip=\"Waiting for pipeline output...\" spinning={resource?.status === 1}>\r\n      <Tree\r\n        defaultExpandAll={false}\r\n        virtual={true}\r\n        height={550}\r\n        style={{ height: \"calc((100vh - 256px) - 48px)\" }}\r\n        onSelect={(keys, { node }) => copy(`${node.title}`)}\r\n        treeData={data}\r\n      />\r\n    </Spin>\r\n  );\r\n}\r\n"],"sourceRoot":""}
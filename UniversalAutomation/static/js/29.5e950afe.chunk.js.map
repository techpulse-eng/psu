{"version":3,"sources":["components/ui/EditorButton.tsx","components/settings/NewIdentityModal.tsx","components/settings/Identities.tsx","components/ui/BuyLicenseAlertBox.tsx","components/ui/EditModal.tsx"],"names":["EditorButton","to","accessControls","allowedWithOneWayGitSync","props","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","title","type","icon","NewIdentityModal","useModalContext","onOk","form","Modal","Create","children","onClickOk","formName","Form","schemaName","name","preserve","Identities","useQuery","enabled","refetchOnWindowFocus","identities","data","isLoading","refetch","setHidden","record","columns","key","dataIndex","editable","render","text","width","EditModal","id","DeleteButton","hidden","resource","subTitle","extra","url","Table","actions","loading","queryFn","BuyLicenseAlertBox","message","align","style","justifyContent","Link","href","target","getButtonProps","useActionButton","normalizedRecord","useNormalizeData","licensed","useAppStore","action","resourceInfo","self","parent","inEditMode","defaultValues","Feature","Dashboard"],"mappings":"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","file":"static/js/29.5e950afe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport RoleGuard from \"../standalone/role-guard\";\r\nimport { Button, ButtonProps, Tooltip } from \"antd\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\nimport { CodeFilled } from \"@ant-design/icons\";\r\nimport { AccessControlTypes, RoleGuardProps } from \"types\";\r\n\r\ntype EditorButtonProps = {\r\n  to: LinkProps[\"to\"];\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditorButton({\r\n  to,\r\n  accessControls,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditorButtonProps) {\r\n  return (\r\n    <RoleGuard\r\n      requiredRoles={[\"Administrator\", \"Operator\"]}\r\n      requiredAccessControls={AccessControlTypes.Edit}\r\n      accessControls={accessControls}\r\n      allowedWithOneWayGitSync={allowedWithOneWayGitSync}\r\n    >\r\n      <Tooltip title=\"Edit Details\">\r\n        <Link to={to}>\r\n          <Button type=\"text\" icon={<CodeFilled />} {...props} />\r\n        </Link>\r\n      </Tooltip>\r\n    </RoleGuard>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { AccessControlTypes, Identity } from \"../../types\";\r\nimport { Button } from \"antd\";\r\nimport {\r\n  ModalContent,\r\n  ModalOpenButton,\r\n  useModalContext,\r\n} from \"components/ui/Modal\";\r\nimport { Form, FormContentBase } from \"components/ui/Form/Form\";\r\n\r\nexport default function NewIdentityModal() {\r\n  const { onOk, form } = useModalContext();\r\n\r\n  function handleOk() {\r\n    onOk(\"/identity\", \"create\", {} as Identity);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\"]} requiredAccessControls={AccessControlTypes.Create} allowedWithOneWayGitSync={true}>\r\n        <Button children=\"Add New Identity\" />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"New Identity\" onClickOk={handleOk} formName=\"create_identity_form\">\r\n        <Form schemaName=\"identity\">\r\n          <FormContentBase\r\n            name=\"create_identity_form\"\r\n            form={form}\r\n            preserve={false}\r\n          />\r\n        </Form>\r\n      </ModalContent>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { PageHeader, Space } from \"antd\";\r\nimport { Modal } from \"../ui/Modal\";\r\nimport { CustomColumns, Identity } from \"../../types\";\r\nimport Table from \"../ui/Table\";\r\nimport EditModal from \"../ui/EditModal\";\r\nimport DeleteButton from \"../ui/DeleteButton\";\r\nimport IdentityModal from \"components/settings/NewIdentityModal\";\r\nimport EditorButton from \"components/ui/EditorButton\";\r\nimport DocsButton from \"components/docsButton\";\r\n\r\nexport default function Identities() {\r\n  const { data: identities, isLoading, refetch } = useQuery<Identity[]>(\r\n    \"/identity\",\r\n    {\r\n      enabled: false,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  function setHidden(record: Identity) {\r\n    return record.name === \"System\" ? true : false;\r\n  }\r\n\r\n  const columns: CustomColumns<Identity>[] = [\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      editable: false,\r\n    },\r\n    {\r\n      key: \"role\",\r\n      title: \"Role\",\r\n      dataIndex: \"roleName\",\r\n      editable: false,\r\n      render: (text, record) => {\r\n        return text && text !== '' ? text : \"Policy Defined\"\r\n      }\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      editable: false,\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            <Modal>\r\n              <EditModal record={record} allowedWithOneWayGitSync={true} />\r\n            </Modal>\r\n            <EditorButton to={`${record?.id}`} allowedWithOneWayGitSync={true} />\r\n            <DeleteButton hidden={setHidden(record)} resource={record} allowedWithOneWayGitSync={true} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageHeader title=\"Identities\" subTitle=\"Users or applications that have access to PowerShell Universal.\" extra={[\r\n      <DocsButton url=\"config/security#role-assignment\" />\r\n    ]}>\r\n      <Table\r\n        title=\"Identities\"\r\n        actions={[\r\n          <Modal>\r\n            <IdentityModal />\r\n          </Modal>,\r\n        ]}\r\n        data={identities}\r\n        columns={columns}\r\n        loading={isLoading}\r\n        queryFn={refetch}\r\n      />\r\n    </PageHeader>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Alert, Space, Typography } from \"antd\";\r\n\r\nexport default function BuyLicenseAlertBox() {\r\n  return (\r\n    <Alert\r\n      type=\"info\"\r\n      message={\r\n        <Space\r\n          align=\"center\"\r\n          style={{ width: \"100%\", justifyContent: \"space-between\" }}\r\n        >\r\n          Authentication requires a license.\r\n          <Typography.Link\r\n            href=\"https://ironmansoftware.com/powershell-universal/?rel=product\"\r\n            target=\"_blank\"\r\n          >\r\n            Buy License.\r\n          </Typography.Link>\r\n        </Space>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AccessControlTypes, Feature, PSUTypes, RoleGuardProps } from \"types\";\r\nimport { Button, ButtonProps } from \"antd\";\r\nimport { Form, FormContentBase } from \"./Form/Form\";\r\nimport { useActionButton } from \"components/utils/hooks/useActionButton\";\r\nimport { useModalContext, ModalOpenButton, ModalContent } from \"./Modal\";\r\nimport useNormalizeData from \"components/utils/normalizedRecord\";\r\nimport BuyLicenseAlertBox from \"./BuyLicenseAlertBox\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\n\r\n\r\ntype EditModalProps = {\r\n  action?: string;\r\n  record: PSUTypes;\r\n  schemaName?: string | undefined;\r\n  accessControl?: AccessControlTypes;\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditModal({\r\n  record,\r\n  schemaName,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditModalProps) {\r\n  const { getButtonProps } = useActionButton();\r\n  const normalizedRecord = useNormalizeData();\r\n  const { onOk, form } = useModalContext();\r\n  const { licensed } = useAppStore()\r\n\r\n  function handleOk() {\r\n\r\n    let key = record?.resourceInfo?.schemaName === \"tag\" ||\r\n      record?.resourceInfo?.schemaName === \"role\" ||\r\n      record?.resourceInfo?.schemaName === \"endpoint\" ||\r\n      record?.resourceInfo?.schemaName === \"ratelimit\" ||\r\n      record?.resourceInfo?.schemaName === \"dashboard\" ||\r\n      record?.resourceInfo?.schemaName === \"schedule\" ||\r\n      record?.resourceInfo?.schemaName === \"publishedfolder\"\r\n      ? record?.resourceInfo?.self\r\n      : record?.resourceInfo?.parent\r\n\r\n    if (record?.resourceInfo?.schemaName === \"page\") {\r\n      key = record?.resourceInfo?.self + \"?ignoreContent=true\"\r\n    }\r\n\r\n    onOk(key,\r\n      \"update\",\r\n      record\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={props.accessControls} allowedWithOneWayGitSync={allowedWithOneWayGitSync}>\r\n        <Button\r\n          {...props}\r\n          {...getButtonProps({ action: \"edit\" })}\r\n          action=\"edit\"\r\n        />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"Edit Resource\" onClickOk={handleOk}>\r\n        <Form schemaName={schemaName || record?.resourceInfo?.schemaName}>\r\n          <FormContentBase\r\n            name=\"edit_form\"\r\n            form={form}\r\n            inEditMode={true}\r\n            preserve={false}\r\n            defaultValues={normalizedRecord(record)}\r\n          />\r\n        </Form>\r\n        {!licensed(Feature.Dashboard) && <BuyLicenseAlertBox />}\r\n      </ModalContent>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/pages/notLicensed.tsx","components/terminal/terminalModal.tsx","components/terminal/instancesTable.tsx","components/terminal/terminals.tsx","components/ui/BuyLicenseAlertBox.tsx","components/ui/EditModal.tsx"],"names":["NotLicensed","title","status","extra","icon","onClick","window","location","href","ScheduleModal","useModalContext","onOk","form","Modal","requiredRoles","requiredAccessControls","AccessControlTypes","Create","allowedWithOneWayGitSync","children","onClickOk","formName","Form","schemaName","name","preserve","TerminalInstances","useQuery","enabled","refetchOnWindowFocus","terminals","data","isLoading","refetch","terminate","useMutation","terminalId","axios","delete","then","res","onError","error","variables","context","message","onSuccess","queryClient","refetchQueries","stale","mutateAsync","columns","dataIndex","key","onFilter","value","record","startsWith","filterSearch","sorter","a","b","localeCompare","width","render","text","identity","Text","type","style","fontSize","HistoryOutlined","color","dayjs","to","startTime","history","id","CodeOutlined","DeleteOutlined","danger","Table","loading","queryFn","TabPane","Tabs","TerminalLaunchButton","nav","useNavigate","post","toRelativeUrl","open","terminalLaunching","Terminals","licensed","useAppStore","schedules","version","EditModal","DeleteButton","resource","Feature","Automation","subTitle","url","defaultActiveKey","tab","actions","BuyLicenseAlertBox","align","justifyContent","Link","target","props","getButtonProps","useActionButton","normalizedRecord","useNormalizeData","Edit","accessControls","action","resourceInfo","self","parent","inEditMode","defaultValues","Dashboard"],"mappings":"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","file":"static/js/25.7dfcdd9b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Result, Button } from \"antd\";\r\nimport { CreditCardOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function NotLicensed({ title }) {\r\n  return (\r\n    <Result\r\n      title={title}\r\n      status=\"warning\"\r\n      extra={\r\n        <Button\r\n          icon={<CreditCardOutlined />}\r\n          onClick={() => {\r\n            window.location.href =\r\n              \"https://ironmansoftware.com/powershell-universal?rel=product\";\r\n          }}\r\n        >\r\n          Buy License\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { AccessControlTypes, Terminal } from \"types\";\r\nimport { Button } from \"antd\";\r\nimport {\r\n    ModalContent,\r\n    ModalOpenButton,\r\n    useModalContext,\r\n} from \"components/ui/Modal\";\r\nimport { Form, FormContentBase } from \"components/ui/Form/Form\";\r\n\r\nexport default function ScheduleModal() {\r\n    const { onOk, form } = useModalContext();\r\n\r\n    function handleOk() {\r\n        onOk(\"/terminal\", \"create\", {} as Terminal);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Create} allowedWithOneWayGitSync={false}>\r\n                <Button children=\"Create New Terminal\" />\r\n            </ModalOpenButton>\r\n            <ModalContent title=\"Create new terminal\" onClickOk={handleOk} formName=\"create_terminal_form\">\r\n                <Form schemaName=\"terminal\">\r\n                    <FormContentBase\r\n                        name=\"create_terminal_form\"\r\n                        form={form}\r\n                        preserve={false}\r\n                    />\r\n                </Form>\r\n            </ModalContent>\r\n        </Fragment>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Button, message, Space, Tooltip, Typography } from \"antd\";\r\nimport { useQuery, useMutation } from \"react-query3\";\r\nimport { TerminalInstance } from 'types';\r\nimport Table from \"components/ui/Table\";\r\nimport { CodeOutlined, DeleteOutlined, HistoryOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport queryClient from \"components/utils/queryClient\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function TerminalInstances() {\r\n    const { data: terminals, isLoading, refetch } = useQuery<TerminalInstance[]>(\r\n        \"/terminal/instance\",\r\n        {\r\n            enabled: false,\r\n            refetchOnWindowFocus: false,\r\n        }\r\n    );\r\n\r\n    const { mutateAsync: terminate } = useMutation(\r\n        (terminalId: number) =>\r\n            axios\r\n                .delete(`/api/v1/terminal/instance/${terminalId}`)\r\n                .then((res: AxiosResponse<TerminalInstance>) => res.data),\r\n        {\r\n            onError: (error: AxiosError, variables, context) => {\r\n                message.error(`Terminal ${variables}; ${error?.message}`);\r\n            },\r\n            onSuccess: (data, variables) => {\r\n                queryClient.refetchQueries(`/terminal/instance`, { stale: true });\r\n            },\r\n        }\r\n    );\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Terminal',\r\n            dataIndex: 'terminal',\r\n            key: 'terminal',\r\n            onFilter: (value, record) => record.name.startsWith(value),\r\n            filterSearch: true,\r\n            sorter: (a, b) => a.name.localeCompare(b.name),\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'User',\r\n            dataIndex: 'identity',\r\n            key: 'identity',\r\n            render: (text, record) => (<span>{record.identity.name}</span>),\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (text, record) => {\r\n                switch (record.status) {\r\n                    case 0: return <span>Connecting</span>;\r\n                    case 1: return <span>Connected</span>;\r\n                    case 2: return <span>Idle</span>;\r\n                    case 3: return <span>Terminated</span>;\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Start Time',\r\n            dataIndex: 'startTime',\r\n            key: 'startTime',\r\n            render: (text, record) => {\r\n                return (\r\n                    <Space>\r\n                        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\r\n                            <HistoryOutlined style={{ color: \"inherit\", fontSize: \"inherit\" }} />\r\n                        </Typography.Text>\r\n                        <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\r\n                            {dayjs().to(dayjs(record?.startTime))}\r\n                        </Typography.Text>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            width: \"fit-content\",\r\n            dataIndex: \"actions\",\r\n            render: (text, record) => {\r\n                const history = <Tooltip title=\"View Command History\">\r\n                    <Link to={`/admin/automation/terminal/${record.id}/history`}><Button icon={<HistoryOutlined />} type=\"text\" /></Link>\r\n                </Tooltip>\r\n\r\n                if (record.status === 3) {\r\n                    return history;\r\n                }\r\n                return (\r\n                    <Space>\r\n                        <Tooltip title=\"Open Terminal\">\r\n                            <Link to={`/admin/automation/terminal/${record.id}`}><Button icon={<CodeOutlined />} type=\"text\" /></Link>\r\n                        </Tooltip>\r\n\r\n                        {history}\r\n\r\n                        <Button icon={<DeleteOutlined />} onClick={() => terminate(record.id)} danger type=\"text\"></Button>\r\n                    </Space>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Table\r\n            title=\"Terminal Instances\"\r\n            columns={columns}\r\n            data={terminals}\r\n            loading={isLoading}\r\n            queryFn={refetch}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { PageHeader, Space, Button, Tabs, Tooltip, message } from \"antd\";\r\nimport { useMutation, useQuery } from \"react-query3\";\r\nimport { Feature, Terminal, TerminalInstance } from 'types';\r\nimport { CodeOutlined } from \"@ant-design/icons\";\r\nimport { Modal } from \"components/ui/Modal\";\r\nimport EditModal from \"components/ui/EditModal\";\r\nimport DeleteButton from \"components/ui/DeleteButton\";\r\nimport Table from \"components/ui/Table\";\r\nimport TerminalModal from './terminalModal';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TerminalInstances from \"./instancesTable\";\r\nimport RoleGuard from \"components/standalone/role-guard\";\r\nimport queryClient from \"components/utils/queryClient\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport NotLicensed from \"components/pages/notLicensed\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport DocsButton from \"components/docsButton\";\r\nimport { toRelativeUrl } from \"components/utils/utils\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst TerminalLaunchButton = ({ terminalId }) => {\r\n    const nav = useNavigate();\r\n    const { mutateAsync: open, isLoading: terminalLaunching } = useMutation(\r\n        (terminalId: number) =>\r\n            axios\r\n                .post(toRelativeUrl(`/api/v1/terminal/instance`), { id: terminalId })\r\n                .then((res: AxiosResponse<TerminalInstance>) => res.data),\r\n        {\r\n            onError: (error: AxiosError, variables, context) => {\r\n                message.error(`Terminal ${variables}; ${error?.message}`);\r\n            },\r\n            onSuccess: (data, variables) => {\r\n                queryClient.refetchQueries(`/terminal/instance`, { stale: true });\r\n                nav(toRelativeUrl(`/admin/automation/terminal/${data.id}`));\r\n            },\r\n        }\r\n    );\r\n\r\n    return (\r\n        <Tooltip title=\"Open Terminal\">\r\n            <Button icon={<CodeOutlined />} onClick={() => open(terminalId)} type=\"text\" loading={terminalLaunching} />\r\n        </Tooltip>\r\n    )\r\n\r\n}\r\n\r\nexport default function Terminals() {\r\n\r\n    const { licensed } = useAppStore();\r\n\r\n    const { data: schedules, isLoading, refetch } = useQuery<Terminal[]>(\r\n        \"/terminal\",\r\n        {\r\n            enabled: false,\r\n            refetchOnWindowFocus: false,\r\n        }\r\n    );\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            onFilter: (value, record) => record.name.startsWith(value),\r\n            filterSearch: true,\r\n            sorter: (a, b) => a.name.localeCompare(b.name),\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            key: 'description',\r\n            onFilter: (value, record) => record.version.startsWith(value),\r\n            filterSearch: true,\r\n            sorter: (a, b) => a.version.localeCompare(b.version),\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Environment',\r\n            dataIndex: 'environment',\r\n            key: 'environment',\r\n            onFilter: (value, record) => record.version.startsWith(value),\r\n            filterSearch: true,\r\n            sorter: (a, b) => a.version.localeCompare(b.version),\r\n            width: 100,\r\n        },\r\n        {\r\n            width: \"fit-content\",\r\n            dataIndex: \"actions\",\r\n            render: (text, record) => {\r\n                return (\r\n                    <Space>\r\n                        <RoleGuard requiredRoles={[\"Administrator\"]}>\r\n                            <Modal>\r\n                                <EditModal record={record} allowedWithOneWayGitSync={false} />\r\n                            </Modal>\r\n                        </RoleGuard>\r\n                        <RoleGuard requiredRoles={[\"Administrator\"]}>\r\n                            <DeleteButton resource={record} allowedWithOneWayGitSync={false} />\r\n                        </RoleGuard>\r\n                        <RoleGuard requiredRoles={[\"Administrator\"]}>\r\n                            <TerminalLaunchButton terminalId={record.id} />\r\n                        </RoleGuard>\r\n                    </Space>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    if (!licensed(Feature.Automation)) {\r\n        return <NotLicensed title=\"Terminals are only available for licensed instances.\" />\r\n    }\r\n\r\n    return (\r\n        <PageHeader title=\"Terminals\" subTitle=\"PowerShell terminals in the browser.\" extra={[\r\n            <DocsButton url=\"automation/terminals\" />\r\n        ]}>\r\n\r\n            <Tabs defaultActiveKey=\"1\">\r\n                <TabPane tab=\"Terminals\" key=\"1\">\r\n                    <Table\r\n                        title=\"Terminals\"\r\n                        actions={[\r\n                            <Modal>\r\n                                <TerminalModal />\r\n                            </Modal>,\r\n                        ]}\r\n                        columns={columns}\r\n                        data={schedules}\r\n                        loading={isLoading}\r\n                        queryFn={refetch}\r\n                    />\r\n                </TabPane>\r\n                <TabPane tab=\"Instances\" key=\"2\">\r\n                    <TerminalInstances />\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n\r\n        </PageHeader>\r\n\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Alert, Space, Typography } from \"antd\";\r\n\r\nexport default function BuyLicenseAlertBox() {\r\n  return (\r\n    <Alert\r\n      type=\"info\"\r\n      message={\r\n        <Space\r\n          align=\"center\"\r\n          style={{ width: \"100%\", justifyContent: \"space-between\" }}\r\n        >\r\n          Authentication requires a license.\r\n          <Typography.Link\r\n            href=\"https://ironmansoftware.com/powershell-universal/?rel=product\"\r\n            target=\"_blank\"\r\n          >\r\n            Buy License.\r\n          </Typography.Link>\r\n        </Space>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AccessControlTypes, Feature, PSUTypes, RoleGuardProps } from \"types\";\r\nimport { Button, ButtonProps } from \"antd\";\r\nimport { Form, FormContentBase } from \"./Form/Form\";\r\nimport { useActionButton } from \"components/utils/hooks/useActionButton\";\r\nimport { useModalContext, ModalOpenButton, ModalContent } from \"./Modal\";\r\nimport useNormalizeData from \"components/utils/normalizedRecord\";\r\nimport BuyLicenseAlertBox from \"./BuyLicenseAlertBox\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\n\r\n\r\ntype EditModalProps = {\r\n  action?: string;\r\n  record: PSUTypes;\r\n  schemaName?: string | undefined;\r\n  accessControl?: AccessControlTypes;\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditModal({\r\n  record,\r\n  schemaName,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditModalProps) {\r\n  const { getButtonProps } = useActionButton();\r\n  const normalizedRecord = useNormalizeData();\r\n  const { onOk, form } = useModalContext();\r\n  const { licensed } = useAppStore()\r\n\r\n  function handleOk() {\r\n\r\n    let key = record?.resourceInfo?.schemaName === \"tag\" ||\r\n      record?.resourceInfo?.schemaName === \"role\" ||\r\n      record?.resourceInfo?.schemaName === \"endpoint\" ||\r\n      record?.resourceInfo?.schemaName === \"ratelimit\" ||\r\n      record?.resourceInfo?.schemaName === \"dashboard\" ||\r\n      record?.resourceInfo?.schemaName === \"schedule\" ||\r\n      record?.resourceInfo?.schemaName === \"publishedfolder\"\r\n      ? record?.resourceInfo?.self\r\n      : record?.resourceInfo?.parent\r\n\r\n    if (record?.resourceInfo?.schemaName === \"page\") {\r\n      key = record?.resourceInfo?.self + \"?ignoreContent=true\"\r\n    }\r\n\r\n    onOk(key,\r\n      \"update\",\r\n      record\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={props.accessControls} allowedWithOneWayGitSync={allowedWithOneWayGitSync}>\r\n        <Button\r\n          {...props}\r\n          {...getButtonProps({ action: \"edit\" })}\r\n          action=\"edit\"\r\n        />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"Edit Resource\" onClickOk={handleOk}>\r\n        <Form schemaName={schemaName || record?.resourceInfo?.schemaName}>\r\n          <FormContentBase\r\n            name=\"edit_form\"\r\n            form={form}\r\n            inEditMode={true}\r\n            preserve={false}\r\n            defaultValues={normalizedRecord(record)}\r\n          />\r\n        </Form>\r\n        {!licensed(Feature.Dashboard) && <BuyLicenseAlertBox />}\r\n      </ModalContent>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}
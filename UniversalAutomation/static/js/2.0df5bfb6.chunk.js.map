{"version":3,"sources":["components/ui/BuyLicenseAlertBox.tsx","components/ui/EditModal.tsx"],"names":["BuyLicenseAlertBox","type","message","align","style","width","justifyContent","Link","href","target","EditModal","record","schemaName","allowedWithOneWayGitSync","props","getButtonProps","useActionButton","normalizedRecord","useNormalizeData","useModalContext","onOk","form","licensed","useAppStore","requiredRoles","requiredAccessControls","AccessControlTypes","Edit","accessControls","action","title","onClickOk","key","resourceInfo","self","parent","name","inEditMode","preserve","defaultValues","Feature","Dashboard"],"mappings":"4JAAA,6EAGe,SAASA,IACtB,OACE,cAAC,IAAD,CACEC,KAAK,OACLC,QACE,eAAC,IAAD,CACEC,MAAM,SACNC,MAAO,CAAEC,MAAO,OAAQC,eAAgB,iBAF1C,+CAKE,cAAC,IAAWC,KAAZ,CACEC,KAAK,gEACLC,OAAO,SAFT,iC,wLCOK,SAASC,EAAT,GAKK,IAAD,EAJjBC,EAIiB,EAJjBA,OACAC,EAGiB,EAHjBA,WACAC,EAEiB,EAFjBA,yBACGC,EACc,kEACTC,EAAmBC,cAAnBD,eACFE,EAAmBC,cAFR,EAGMC,cAAfC,EAHS,EAGTA,KAAMC,EAHG,EAGHA,KACNC,EAAaC,cAAbD,SAwBR,OACE,qCACE,cAAC,IAAD,CAAiBE,cAAe,CAAC,gBAAiB,YAAaC,uBAAwBC,IAAmBC,KAAMC,eAAgBd,EAAMc,eAAgBf,yBAA0BA,EAAhL,SACE,cAAC,IAAD,uCACMC,GACAC,EAAe,CAAEc,OAAQ,UAF/B,IAGEA,OAAO,YAGX,eAAC,IAAD,CAAcC,MAAM,gBAAgBC,UA/BxC,WAAqB,IAAD,oBAY+B,EAV7CC,EAA2C,SAA/B,OAANrB,QAAM,IAANA,GAAA,UAAAA,EAAQsB,oBAAR,eAAsBrB,aACO,UAA/B,OAAND,QAAM,IAANA,GAAA,UAAAA,EAAQsB,oBAAR,eAAsBrB,aACe,cAA/B,OAAND,QAAM,IAANA,GAAA,UAAAA,EAAQsB,oBAAR,eAAsBrB,aACe,eAA/B,OAAND,QAAM,IAANA,GAAA,UAAAA,EAAQsB,oBAAR,eAAsBrB,aACe,eAA/B,OAAND,QAAM,IAANA,GAAA,UAAAA,EAAQsB,oBAAR,eAAsBrB,aACe,cAA/B,OAAND,QAAM,IAANA,GAAA,UAAAA,EAAQsB,oBAAR,eAAsBrB,aACe,qBAA/B,OAAND,QAAM,IAANA,GAAA,UAAAA,EAAQsB,oBAAR,eAAsBrB,YANd,OAOND,QAPM,IAONA,GAPM,UAONA,EAAQsB,oBAPF,aAON,EAAsBC,KAPhB,OAQNvB,QARM,IAQNA,GARM,UAQNA,EAAQsB,oBARF,aAQN,EAAsBE,OAEe,UAA/B,OAANxB,QAAM,IAANA,GAAA,UAAAA,EAAQsB,oBAAR,eAAsBrB,cACxBoB,GAAY,OAANrB,QAAM,IAANA,GAAA,UAAAA,EAAQsB,oBAAR,eAAsBC,MAAO,uBAGrCd,EAAKY,EACH,SACArB,IAaA,UACE,cAAC,IAAD,CAAMC,WAAYA,IAAU,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAQsB,oBAAZ,aAAI,EAAsBrB,YAAtD,SACE,cAAC,IAAD,CACEwB,KAAK,YACLf,KAAMA,EACNgB,YAAY,EACZC,UAAU,EACVC,cAAetB,EAAiBN,QAGlCW,EAASkB,IAAQC,YAAc,cAAC,IAAD","file":"static/js/2.0df5bfb6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Alert, Space, Typography } from \"antd\";\r\n\r\nexport default function BuyLicenseAlertBox() {\r\n  return (\r\n    <Alert\r\n      type=\"info\"\r\n      message={\r\n        <Space\r\n          align=\"center\"\r\n          style={{ width: \"100%\", justifyContent: \"space-between\" }}\r\n        >\r\n          Authentication requires a license.\r\n          <Typography.Link\r\n            href=\"https://ironmansoftware.com/powershell-universal/?rel=product\"\r\n            target=\"_blank\"\r\n          >\r\n            Buy License.\r\n          </Typography.Link>\r\n        </Space>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AccessControlTypes, Feature, PSUTypes, RoleGuardProps } from \"types\";\r\nimport { Button, ButtonProps } from \"antd\";\r\nimport { Form, FormContentBase } from \"./Form/Form\";\r\nimport { useActionButton } from \"components/utils/hooks/useActionButton\";\r\nimport { useModalContext, ModalOpenButton, ModalContent } from \"./Modal\";\r\nimport useNormalizeData from \"components/utils/normalizedRecord\";\r\nimport BuyLicenseAlertBox from \"./BuyLicenseAlertBox\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\n\r\n\r\ntype EditModalProps = {\r\n  action?: string;\r\n  record: PSUTypes;\r\n  schemaName?: string | undefined;\r\n  accessControl?: AccessControlTypes;\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditModal({\r\n  record,\r\n  schemaName,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditModalProps) {\r\n  const { getButtonProps } = useActionButton();\r\n  const normalizedRecord = useNormalizeData();\r\n  const { onOk, form } = useModalContext();\r\n  const { licensed } = useAppStore()\r\n\r\n  function handleOk() {\r\n\r\n    let key = record?.resourceInfo?.schemaName === \"tag\" ||\r\n      record?.resourceInfo?.schemaName === \"role\" ||\r\n      record?.resourceInfo?.schemaName === \"endpoint\" ||\r\n      record?.resourceInfo?.schemaName === \"ratelimit\" ||\r\n      record?.resourceInfo?.schemaName === \"dashboard\" ||\r\n      record?.resourceInfo?.schemaName === \"schedule\" ||\r\n      record?.resourceInfo?.schemaName === \"publishedfolder\"\r\n      ? record?.resourceInfo?.self\r\n      : record?.resourceInfo?.parent\r\n\r\n    if (record?.resourceInfo?.schemaName === \"page\") {\r\n      key = record?.resourceInfo?.self + \"?ignoreContent=true\"\r\n    }\r\n\r\n    onOk(key,\r\n      \"update\",\r\n      record\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={props.accessControls} allowedWithOneWayGitSync={allowedWithOneWayGitSync}>\r\n        <Button\r\n          {...props}\r\n          {...getButtonProps({ action: \"edit\" })}\r\n          action=\"edit\"\r\n        />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"Edit Resource\" onClickOk={handleOk}>\r\n        <Form schemaName={schemaName || record?.resourceInfo?.schemaName}>\r\n          <FormContentBase\r\n            name=\"edit_form\"\r\n            form={form}\r\n            inEditMode={true}\r\n            preserve={false}\r\n            defaultValues={normalizedRecord(record)}\r\n          />\r\n        </Form>\r\n        {!licensed(Feature.Dashboard) && <BuyLicenseAlertBox />}\r\n      </ModalContent>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}
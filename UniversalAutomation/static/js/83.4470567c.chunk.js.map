{"version":3,"sources":["components/dashboard/components/SaveModule.tsx","components/dashboard/marketplace.tsx"],"names":["SaveModuleButton","name","version","installed","mutationOptions","useMutation","module","a","axios","put","onSuccess","message","success","queryClient","refetchQueries","args","installModule","mutateAsync","isLoading","title","CheckCircleOutlined","style","color","presetPrimaryColors","padding","type","icon","DownloadOutlined","onClick","loading","Marketplace","Form","useForm","form","React","useState","currentView","setCurrentView","page","setPage","useQuery","modules","data","enabled","keepPreviousData","isPageLoading","isFetching","refetch","columns","dataIndex","key","width","align","render","text","GlobalOutlined","x","window","open","Table","showSearch","showMarketplaceSearch","actions","onValuesChange","dataToDisplay","Item","margin","noStyle","Group","buttonStyle","defaultValue","Button","value","defaultChecked","newPackages","mostDownloadedPackages","rowKey","record","id","pagination","display","total","totalItems","onChange"],"mappings":"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","file":"static/js/83.4470567c.chunk.js","sourcesContent":["import { presetPrimaryColors } from \"@ant-design/colors\";\r\nimport { CheckCircleOutlined, DownloadOutlined } from \"@ant-design/icons\";\r\nimport { Button, message, Tooltip } from \"antd\";\r\nimport axios from \"axios\";\r\nimport queryClient from \"components/utils/queryClient\";\r\nimport React from \"react\";\r\nimport { SaveModuleProps } from \"types\";\r\nimport { useMutation } from \"react-query3\";\r\n\r\nexport default function SaveModuleButton({\r\n  name,\r\n  version,\r\n  installed,\r\n  mutationOptions,\r\n}: SaveModuleProps): JSX.Element {\r\n  const { mutateAsync: installModule, isLoading } = useMutation(\r\n    async (module: { name: string; version: string }) =>\r\n      await axios.put(\r\n        `/api/v1/dashboard/marketplace/${module?.name}/${module?.version}`\r\n      ),\r\n    {\r\n      onSuccess: (...args) => {\r\n        message.success(\"Saved component!\");\r\n        queryClient.refetchQueries(\"/dashboard/marketplace\");\r\n        if (mutationOptions && mutationOptions?.onSuccess)\r\n          mutationOptions?.onSuccess(...args);\r\n      },\r\n    }\r\n  );\r\n\r\n  return installed ? (\r\n    <Tooltip title=\"Component Installed\">\r\n      <CheckCircleOutlined\r\n        style={{ color: presetPrimaryColors[\"green\"], padding: 8 }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    <Tooltip title=\"Install\">\r\n      <Button\r\n        type=\"text\"\r\n        icon={<DownloadOutlined />}\r\n        onClick={() => installModule({ name, version })}\r\n        loading={isLoading}\r\n      />\r\n    </Tooltip>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Form, Space, Radio, Tooltip } from \"antd\";\r\nimport { GlobalOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  DashboardMarketplaceModule,\r\n  DashboardMarketplaceBrowsePage,\r\n  DashboardMarketplaceOverview,\r\n  CustomColumns,\r\n} from \"../../types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport Table from \"components/ui/Table\";\r\nimport SaveModuleButton from \"./components/SaveModule\";\r\n\r\nexport function Marketplace() {\r\n  const [form] = Form.useForm();\r\n  const [currentView, setCurrentView] = React.useState(\"new\");\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const { data: modules, isLoading } = useQuery<DashboardMarketplaceOverview>(\r\n    \"/dashboard/marketplace\"\r\n  );\r\n\r\n  const {\r\n    isLoading: isPageLoading,\r\n    isFetching,\r\n    data,\r\n    refetch,\r\n  } = useQuery<DashboardMarketplaceBrowsePage>(\r\n    `/dashboard/marketplace/module?page=${page}`,\r\n    {\r\n      enabled: currentView === \"browse\",\r\n      keepPreviousData: true,\r\n    }\r\n  );\r\n\r\n  const columns: CustomColumns<DashboardMarketplaceModule>[] = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      key: \"version\",\r\n      title: \"Version\",\r\n      dataIndex: \"version\",\r\n      width: \"min-content\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Authors\",\r\n      key: \"authors\",\r\n      dataIndex: \"authors\",\r\n    },\r\n    {\r\n      title: \"Downloads\",\r\n      key: \"downloadCount\",\r\n      dataIndex: \"downloadCount\",\r\n      width: \"min-content\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Actions\",\r\n      key: \"actions\",\r\n      align: \"left\",\r\n      width: \"min-content\",\r\n      render: (text, data) => {\r\n        return (\r\n          <Space>\r\n            <SaveModuleButton\r\n              name={data.title}\r\n              version={data.version}\r\n              installed={data.installed}\r\n              mutationOptions={{\r\n                onSuccess: () => {\r\n                  if (currentView === \"browse\") refetch();\r\n                },\r\n              }}\r\n            />\r\n            <Tooltip title=\"View\">\r\n              <Button\r\n                type=\"text\"\r\n                icon={<GlobalOutlined />}\r\n                onClick={(x) =>\r\n                  window.open(\r\n                    `https://marketplace.universaldashboard.io/Dashboard/${data.title}`\r\n                  )\r\n                }\r\n              />\r\n            </Tooltip>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      title=\"Marketplace\"\r\n      showSearch={currentView !== \"browse\"}\r\n      showMarketplaceSearch={currentView === \"browse\"}\r\n      actions={[\r\n        <Form\r\n          name=\"published_folder_editable_form\"\r\n          form={form}\r\n          onValuesChange={({ dataToDisplay }) => {\r\n            setCurrentView(dataToDisplay);\r\n          }}\r\n        >\r\n          <Form.Item name=\"dataToDisplay\" style={{ margin: 0 }} noStyle>\r\n            <Radio.Group buttonStyle=\"solid\" defaultValue={currentView} >\r\n              <Radio.Button value=\"new\" defaultChecked={true}>\r\n                New\r\n              </Radio.Button>\r\n              <Radio.Button value=\"popular\">Popular</Radio.Button>\r\n              <Radio.Button value=\"browse\">Browse</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n        </Form>,\r\n      ]}\r\n      // @ts-ignore\r\n      columns={columns}\r\n      loading={isLoading || isPageLoading || isFetching}\r\n      data={\r\n        currentView === \"new\"\r\n          ? modules?.newPackages\r\n          : currentView === \"popular\"\r\n          ? modules?.mostDownloadedPackages\r\n          : data?.modules\r\n      }\r\n      rowKey={(record: DashboardMarketplaceModule) => record.id || \"key\"}\r\n      pagination={{\r\n        style: { display: currentView !== \"browse\" && \"none\" },\r\n        total: data?.totalItems || 10,\r\n        onChange: (page) => setPage(page),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Marketplace;\r\n"],"sourceRoot":""}
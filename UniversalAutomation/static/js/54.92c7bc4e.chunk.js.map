{"version":3,"sources":["components/ui/TagLink.tsx","components/jobs/jobs.tsx"],"names":["TagLink","text","to","color","style","numeral","require","Jobs","useState","tag","setTag","relativeTime","setRelativeTime","useSearchParams","params","useQuery","name","get","refetchOnWindowFocus","keepPreviousData","jobs","data","isFetching","isLoading","tags","tagsLoading","columns","title","key","dataIndex","align","responsive","render","record","id","job","status","output","statusDescription","setStatusTag","editable","value","split","map","tagName","find","m","cursor","onClick","mapTags","generateJobDescription","processId","Text","type","fontSize","memoryBytes","format","width","page","reverse","loading","actions","closable","onClose","onChange","e","checked","checkedChildren","unCheckedChildren","pagination","hideOnSinglePage","showSizeChanger","total","length"],"mappings":"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","file":"static/js/54.92c7bc4e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Tag } from \"antd\";\r\n\r\nexport default function TagLink({ text, to }) {\r\n  return (\r\n    <Tag color=\"blue\">\r\n      <Link style={{ color: \"inherit\" }} to={to}>\r\n        {text}\r\n      </Link>\r\n    </Tag>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Table from \"components/ui/Table\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { CustomColumns, Job, JobQuery, Tag } from \"types\";\r\nimport { Breakpoint } from \"antd/lib/_util/responsiveObserve\";\r\nimport JobDateTime from \"./JobDateTime\";\r\nimport { AlignType } from \"rc-table/lib/interface\";\r\nimport { generateJobDescription, setStatusTag } from \"components/utils/utils\";\r\nimport TagLink from \"components/ui/TagLink\";\r\nimport { Space, Switch, Tag as AntTag, Tooltip, Typography } from \"antd\";\r\nimport ViewScriptButton from \"./components/ViewScriptButton\";\r\nimport CancelJobButton from \"./components/CancelJobButton\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { BarsOutlined, DashboardOutlined } from \"@ant-design/icons\";\r\nvar numeral = require('numeral');\r\n\r\nexport default function Jobs() {\r\n  const [tag, setTag] = useState(null);\r\n  const [relativeTime, setRelativeTime] = useState(true);\r\n\r\n  const [params] = useSearchParams();\r\n\r\n  const { data: jobs, isFetching, isLoading } = useQuery<JobQuery>(`/job?tag=${tag?.name ? tag.name : \"\"}${params.get('state') ? \"&status=\" + params.get('state') : \"\"}`, {\r\n    refetchOnWindowFocus: false,\r\n    keepPreviousData: true,\r\n  });\r\n  const { data: tags, isLoading: tagsLoading } = useQuery<Tag[]>(\"/tag\");\r\n\r\n  const mapTags = (record: Job) => {\r\n    if (tagsLoading || record?.tags === null) return <></>\r\n\r\n    return record.tags.split('|').map((tagName) => {\r\n      const tag = tags?.find(m => m.name === tagName);\r\n      return <AntTag key={tag?.name} color={tag?.color} style={{ cursor: 'pointer' }} onClick={() => {\r\n        setTag(tag);\r\n      }}>\r\n        {tag?.name}\r\n      </AntTag>\r\n    })\r\n  }\r\n\r\n  const columns: CustomColumns<Job>[] = [\r\n    {\r\n      title: \"Id\",\r\n      key: \"id\",\r\n      dataIndex: \"id\",\r\n      align: \"left\" as AlignType,\r\n      responsive: [\"xl\" as Breakpoint],\r\n      render: (text, record) => <TagLink text={text} to={`${record.id}`} />\r\n    },\r\n    {\r\n      title: \"Script\",\r\n      key: \"script\",\r\n      dataIndex: \"script\",\r\n      align: \"left\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record) => <ViewScriptButton job={record}></ViewScriptButton>,\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n      align: \"center\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record) => {\r\n        return record?.status === 3 ? (\r\n          <Tooltip title={record?.output || record?.statusDescription} color=\"red\">\r\n            {setStatusTag(record?.status)}\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title={record?.output || record?.statusDescription}>\r\n            {setStatusTag(record?.status)}\r\n          </Tooltip>\r\n\r\n        );\r\n      },\r\n    },\r\n    {\r\n      key: \"tags\",\r\n      title: \"Tags\",\r\n      dataIndex: \"tags\",\r\n      editable: false,\r\n      render: (value, record: Job) => {\r\n        return mapTags(record);\r\n      },\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      key: \"datetime\",\r\n      align: \"right\" as AlignType,\r\n      responsive: [\"xl\" as Breakpoint],\r\n      render: (text, record: Job) => generateJobDescription(record)\r\n    },\r\n    {\r\n      title: \"Execution Time\",\r\n      key: \"datetime\",\r\n      align: \"left\" as AlignType,\r\n      responsive: [\"md\" as Breakpoint],\r\n      render: (text, record: Job) => <JobDateTime job={record} relativeTime={relativeTime} />,\r\n    },\r\n    {\r\n      title: \"Process Information\",\r\n      key: \"processInfo\",\r\n      align: \"right\" as AlignType,\r\n      responsive: [\"xl\" as Breakpoint],\r\n      render: (text, record: Job) => <Space>\r\n        {record?.processId !== 0 && <Tooltip title=\"Process ID\"><BarsOutlined /> <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>{record?.processId}</Typography.Text></Tooltip>}\r\n        {record?.memoryBytes !== 0 && <Tooltip title=\"Average Memory Usage\"><DashboardOutlined /> <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>{numeral(record?.memoryBytes).format('0.00 b')}</Typography.Text></Tooltip>}\r\n      </Space>,\r\n    },\r\n\r\n    {\r\n      key: \"actions\",\r\n      width: \"min-content\",\r\n      render: (text, record: Job) => {\r\n        return <Space>\r\n          <TagLink text={\"View Job\"} to={`${record.id}`} />,\r\n\r\n          <CancelJobButton job={record} />\r\n        </Space>;\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      title=\"Jobs\"\r\n      data={jobs?.page?.reverse()}\r\n      columns={columns}\r\n      loading={isLoading || isFetching}\r\n      actions={[\r\n        tag && <AntTag color={tag.color}\r\n          closable\r\n          onClose={() => {\r\n            setTag(null);\r\n          }}>{tag.name}</AntTag>,\r\n        <Switch onChange={e => setRelativeTime(e)} checked={relativeTime} checkedChildren={\"Relative Time\"} unCheckedChildren={\"Absolute Time\"} />\r\n\r\n      ]}\r\n      pagination={{\r\n        hideOnSinglePage: true,\r\n        showSizeChanger: false,\r\n        total: jobs?.page?.length,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"],"sourceRoot":""}
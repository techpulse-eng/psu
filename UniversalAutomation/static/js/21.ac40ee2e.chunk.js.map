{"version":3,"sources":["components/ui/EnvironmentSelectBox.tsx","components/ui/CredentialsSelectBox.tsx","components/ui/ComputerSelectBox.tsx","components/scripts/components/scriptParameters.tsx","components/scripts/components/RunScript.tsx","components/scripts/scripts.tsx"],"names":["EnvironmentSelectBox","props","useQuery","data","isLoading","loading","Option","value","map","env","name","CredentialsSelectBox","variables","credentials","filter","variable","type","disableRunAsSupport","cred","length","to","style","float","padding","ComputerSelectBox","comp","ParametersForm","parameters","form","showGoTo","script","defaultValues","parameter","displayType","defaultValue","Consumer","context","layout","labelCol","span","wrapperCol","initialValues","gotoJob","environment","itemProps","Item","label","displayName","required","tooltip","helpText","rules","message","showTime","format","validValues","validValue","mode","tokenSeparators","id","credential","settings","hideRunAs","valuePropName","RunScript","parameterSets","scriptParameters","m","parameterSet","x","index","self","indexOf","React","useState","defaultParameterSet","setParameterSet","useModalContext","onOk","serializeParameter","getFieldValue","JSON","stringify","Modal","requiredRoles","requiredAccessControls","AccessControlTypes","Execute","accessControls","allowedWithOneWayGitSync","icon","PlayCircleFilled","title","fullPath","onClickOk","jobParameters","width","marginBottom","longDescription","links","link","href","target","rel","textAlign","paddingRight","onChange","e","toString","Table","lazy","EditModal","FolderModal","ScriptModal","DeleteButton","EditorButton","DirectoryTree","Tree","Select","Scripts","storedView","localStorage","getItem","tags","setTags","folder","setFolder","view","setView","useAppStore","folders","isFoldersLoading","select","scripts","treeData","level","key","children","FolderType","Script","forEach","path","split","pathDivider","reduce","r","i","a","push","columns","dataIndex","responsive","align","render","text","record","editable","tag","color","cursor","onClick","find","resource","resourceInfo","parent","table","actions","closable","onClose","parentPath","folderPath","setItem","suffixIcon","taggedScripts","startsWith","filterScripts","subTitle","extra","url","height","sizes","direction","gutterAlign","display","flexDirection","defaultExpandAll","onSelect","keys","dayjs","extend","utc","localizedFormat"],"mappings":"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","file":"static/js/21.ac40ee2e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Environment } from \"../../types\";\r\n\r\nexport default function EnvironmentSelectBox(props) {\r\n  const { data, isLoading } = useQuery<Environment[]>(\"/environment\");\r\n  return (\r\n    <Select {...props} loading={isLoading}>\r\n      <Select.Option key={`default`} value={null}>Default</Select.Option>\r\n      {data?.map((env) => (\r\n        <Select.Option key={env.name} value={env.name}>{env.name}</Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { Variable } from \"types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function CredentialsSelectBox(props) {\r\n  const { data: variables } = useQuery<Variable[]>(\"/variable\");\r\n\r\n  const credentials = variables?.filter(\r\n    (variable) => variable.type === \"PSCredential\" && !variable.disableRunAsSupport\r\n  );\r\n\r\n  return <><Select {...props}>\r\n    <Select.Option key={`default`} value={null}>Default</Select.Option>\r\n    {credentials?.map((cred) => (\r\n      <Select.Option key={cred.name} value={cred.name}>\r\n        {cred.name}\r\n      </Select.Option>\r\n    ))}\r\n  </Select>\r\n    {\r\n      credentials?.length === 0 && (\r\n        <Link to=\"/admin/platform/variables\" style={{ float: 'right', padding: 0 }}>Add Run As Credential</Link>\r\n      )\r\n    }\r\n  </>\r\n}\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Computer } from \"../../types\";\r\n\r\nexport default function ComputerSelectBox(props) {\r\n  const { data, isLoading } = useQuery<Computer[]>(\"/Computer\");\r\n  return (\r\n    <Select {...props} loading={isLoading}>      \r\n      {data?.map((comp) => (\r\n        <Select.Option key={comp.name} value={comp.name}>{comp.name}</Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Checkbox,\r\n} from \"antd\";\r\nimport { FormInstance } from \"antd/es/form/Form\";\r\nimport { Script, ScriptParameter } from \"types\";\r\nimport CredentialsSelectBox from \"components/ui/CredentialsSelectBox\";\r\nimport EnvironmentSelectBox from \"components/ui/EnvironmentSelectBox\";\r\nimport ComputerSelectBox from \"components/ui/ComputerSelectBox\";\r\nimport { AppContext } from \"components/context/app/Context\";\r\nexport default function ParametersForm({\r\n  parameters,\r\n  form,\r\n  showGoTo,\r\n  script\r\n}: {\r\n  parameters: ScriptParameter[];\r\n  form: FormInstance;\r\n  showGoTo: boolean;\r\n  script: Script;\r\n}) {\r\n  const defaultValues = parameters?.filter(parameter => parameter.displayType !== 3).map((parameter) => ({\r\n    [parameter.name]: parameter.defaultValue,\r\n  }));\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {context => {\r\n        return (<Form\r\n          form={form}\r\n          layout=\"horizontal\"\r\n          name=\"dynamic_parameters_form\"\r\n          labelCol={{ span: 6 }}\r\n          wrapperCol={{ span: 18 }}\r\n          initialValues={{\r\n            ...defaultValues,\r\n            gotoJob: true,\r\n            environment: \"Default\",\r\n          }}\r\n        >\r\n          {parameters?.map((parameter) => {\r\n\r\n            var itemProps = {};\r\n            if (parameter.displayType !== 3 && parameter.defaultValue) {\r\n              itemProps[\"initialValue\"] = parameter.defaultValue;\r\n            }\r\n\r\n\r\n            return (\r\n              <Form.Item\r\n                key={parameter.id}\r\n                name={parameter.name}\r\n                label={parameter.displayName || parameter.name}\r\n                required={parameter.required}\r\n                tooltip={parameter.helpText}\r\n                rules={[\r\n                  {\r\n                    required: parameter.required,\r\n                    message: `${parameter.name} can't be empty.`,\r\n                  },\r\n                ]}\r\n                {...itemProps}\r\n              >\r\n                {parameter.displayType === 0 ? (\r\n                  <Input />\r\n                ) : parameter.displayType === 1 ? (\r\n                  <InputNumber defaultValue={0} />\r\n                ) : parameter.displayType === 2 ? (\r\n                  <Switch />\r\n                ) : parameter.displayType === 3 ? (\r\n                  <DatePicker showTime format=\"DD-MM-YYYY HH:mm:ss\" />\r\n                ) : parameter.displayType === 4 ? (\r\n                  <Select>\r\n                    {parameter.validValues?.map((validValue) => {\r\n                      return (\r\n                        <Select.Option key={validValue} value={validValue}>\r\n                          {validValue}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                ) : parameter.displayType === 5 ? (\r\n                  <CredentialsSelectBox />\r\n                ) : parameter.displayType === 6 ? (\r\n                  <Select mode=\"tags\" tokenSeparators={[\",\", \";\"]} >\r\n                    {parameter.validValues?.map((validValue) => {\r\n                      return (\r\n                        <Select.Option key={validValue} value={validValue}>\r\n                          {validValue}\r\n                        </Select.Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                ) : null}\r\n              </Form.Item>\r\n            );\r\n          })}\r\n          {\r\n            !script.environment &&\r\n            <Form.Item name=\"environment\" label=\"Environment\">\r\n              <EnvironmentSelectBox />\r\n            </Form.Item>\r\n          }\r\n          {\r\n            !script.credential && !context.settings?.hideRunAs &&\r\n            <Form.Item name=\"credential\" label=\"Run As\">\r\n              <CredentialsSelectBox />\r\n            </Form.Item>\r\n          }\r\n          {\r\n            <Form.Item name=\"computer\" label=\"Run On\">\r\n              <ComputerSelectBox />\r\n            </Form.Item>\r\n          }\r\n          {showGoTo && (\r\n            <Form.Item\r\n              name=\"gotoJob\"\r\n              tooltip=\"Automatically navigate to job page when done.\"\r\n              valuePropName=\"checked\"\r\n              label=\"Go To Job\"\r\n            >\r\n              <Checkbox />\r\n            </Form.Item>\r\n          )}\r\n        </Form>)\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport { Button, ButtonProps, Col, Row, Select, Typography } from \"antd\";\r\nimport { AccessControlTypes, JobContext, RoleGuardProps, Script } from \"types\";\r\nimport {\r\n  ModalContent,\r\n  ModalOpenButton,\r\n  useModalContext,\r\n} from \"components/ui/Modal\";\r\nimport ParametersForm from \"./scriptParameters\";\r\nimport { PlayCircleFilled } from \"@ant-design/icons\";\r\n\r\ntype RunScriptProps = {\r\n  script: Script;\r\n} & ButtonProps &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function RunScript({ script, ...props }: RunScriptProps) {\r\n\r\n  const parameterSets = script?.scriptParameters?.map(m => m.parameterSet).filter(x => x !== 'Default').filter((value, index, self) => {\r\n    return self.indexOf(value) === index;\r\n  });\r\n\r\n  const [parameterSet, setParameterSet] = React.useState(script?.defaultParameterSet || (parameterSets && parameterSets[0]));\r\n  const { form, onOk } = useModalContext();\r\n\r\n  const serializeParameter = (parameter) => {\r\n    const value = form.getFieldValue(parameter?.name) !== null ? form.getFieldValue(parameter?.name) : parameter?.defaultValue\r\n\r\n    if (parameter?.type === 'System.String[]')\r\n      return JSON.stringify(value);\r\n\r\n    return value;\r\n  }\r\n\r\n  function handleOk() {\r\n    onOk(`/script/path/${script?.fullPath}`, \"create\", {\r\n      jobParameters: script?.scriptParameters?.filter(m => m.parameterSet === parameterSet || m.parameterSet === 'Default').map(parameter => ({\r\n        name: parameter?.name,\r\n        type: parameter.type,\r\n        value: serializeParameter(parameter),\r\n        displayType: parameter.displayType\r\n      }))\r\n    } as JobContext);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\", \"Execute\"]} requiredAccessControls={AccessControlTypes.Execute} accessControls={script?.accessControls} allowedWithOneWayGitSync={true}>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlayCircleFilled />}\r\n          {...props}\r\n        />\r\n      </ModalOpenButton>\r\n      <ModalContent title={`Run ${script?.fullPath}`} onClickOk={handleOk} width={script?.scriptParameters?.length !== 0 ? 1000 : 500}>\r\n        <Row style={{ marginBottom: '10px' }}>\r\n          <Col span={6}>\r\n          </Col>\r\n          <Col span={18}>\r\n            {script?.longDescription}\r\n            {script?.links?.map(link => <p><a href={link} target=\"_blank\" rel=\"noreferrer\">{link}</a></p>)}\r\n          </Col>\r\n        </Row>\r\n\r\n        {parameterSets?.length > 1 && (\r\n          <Row style={{ marginBottom: '20px' }}>\r\n            <Col span={6} style={{ textAlign: 'right', paddingRight: '10px' }}>\r\n              <Typography>Parameter Set:</Typography>\r\n            </Col>\r\n            <Col span={18}>\r\n              <Select id=\"parameterSet\" onChange={(e) => setParameterSet(e.toString())} value={parameterSet} style={{ width: '100%' }} defaultValue={script?.defaultParameterSet}>\r\n                {parameterSets?.map(parameterSet => <Select.Option key={parameterSet} value={parameterSet}>{parameterSet}</Select.Option>)}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n\r\n        <ParametersForm\r\n          parameters={script?.scriptParameters?.filter(parameter => parameterSets?.length === 0 || parameter.parameterSet === parameterSet || parameter.parameterSet === 'Default')}\r\n          form={form}\r\n          showGoTo={true}\r\n          script={script}\r\n        />\r\n      </ModalContent>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Modal } from \"components/ui/Modal\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Tag, Space, Tooltip, PageHeader, Tree, Select } from \"antd\";\r\nimport { CustomColumns, Folder, FolderType, Script } from \"types\";\r\nimport dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\r\nimport RunScript from \"./components/RunScript\";\r\nimport { FolderViewOutlined, PlayCircleFilled } from \"@ant-design/icons\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport Split from 'react-split'\r\nimport DocsButton from \"components/docsButton\";\r\n\r\nconst Table = React.lazy(() => import(\"components/ui/Table\"));\r\nconst EditModal = React.lazy(() => import(\"components/ui/EditModal\"));\r\nconst FolderModal = React.lazy(() => import(\"components/modals/folder-modal\"));\r\nconst ScriptModal = React.lazy(() => import(\"./components/scriptModal\"));\r\nconst DeleteButton = React.lazy(() => import(\"components/ui/DeleteButton\"));\r\nconst EditorButton = React.lazy(() => import(\"components/ui/EditorButton\"));\r\n\r\nconst { DirectoryTree } = Tree;\r\nconst { Option } = Select;\r\n\r\ndayjs.extend(utc);\r\ndayjs.extend(localizedFormat);\r\n\r\nexport default function Scripts() {\r\n  const storedView = localStorage.getItem('script-view');\r\n  const [tags, setTags] = React.useState([]);\r\n  const [folder, setFolder] = React.useState('');\r\n  const [view, setView] = React.useState(storedView || 'folder');\r\n  const { settings } = useAppStore();\r\n  const { data: folders, isLoading: isFoldersLoading } = useQuery<Folder[]>(\"/folder\");\r\n  const { data: scripts, isLoading } = useQuery<Script[]>(\"/script\", {\r\n    select: (data) =>\r\n      data.map((script) => ({\r\n        ...script,\r\n        environment:\r\n          script.environment === \"Default\" ? null : script.environment,\r\n      })),\r\n  });\r\n\r\n  const changeView = (view: string) => {\r\n    localStorage.setItem('script-view', view);\r\n    setView(view);\r\n  }\r\n\r\n  const toTreeStructure = isFoldersLoading ? () => [] : () => {\r\n    let children = [];\r\n    let level = { title: 'Repository', key: '', children };\r\n\r\n    folders.filter(x => x.type === FolderType.Script).forEach(folder => {\r\n      folder.path.split(settings?.pathDivider).reduce((r, name, i, a) => {\r\n        if (!r[name]) {\r\n          r[name] = { children: [] };\r\n          r.children.push({ title: name, key: folder.path, children: r[name].children })\r\n        }\r\n\r\n        return r[name];\r\n      }, level)\r\n    })\r\n\r\n    return [level];\r\n  }\r\n\r\n  const treeData = toTreeStructure();\r\n\r\n  const columns: CustomColumns<Script>[] = [\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      key: \"fullPath\",\r\n      title: \"Path\",\r\n      dataIndex: \"fullPath\",\r\n      responsive: ['xxl', 'xl']\r\n    },\r\n    {\r\n      key: \"description\",\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n    },\r\n    {\r\n      key: \"environment\",\r\n      title: \"Environment\",\r\n      dataIndex: \"environment\",\r\n      width: \"min-content\",\r\n      align: \"center\",\r\n      render: (text, record) =>\r\n        record?.environment === null ? \"Default\" : record?.environment\r\n      ,\r\n      responsive: ['xxl', 'xl']\r\n    },\r\n    {\r\n      key: \"tags\",\r\n      title: \"Tags\",\r\n      dataIndex: \"tags\",\r\n      editable: false,\r\n      render: (value, record: Script) => {\r\n        return record.tag?.length > 0\r\n          ? record?.tag?.map((tag) => (\r\n            <Tag key={tag?.name} color={tag?.color} style={{ cursor: 'pointer' }} onClick={() => {\r\n              if (!tags.find(m => m.name === tag.name)) {\r\n                setTags([...tags, tag]);\r\n              }\r\n            }}>\r\n              {tag?.name}\r\n            </Tag>\r\n          ))\r\n          : null;\r\n      },\r\n      responsive: ['xxl', 'xl']\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            <Modal key={record.id + \"run\"}>\r\n              <Tooltip title=\"Invoke script\">\r\n                <RunScript\r\n                  accessControls={record?.accessControls}\r\n                  script={record}\r\n                  icon={<PlayCircleFilled />}\r\n                  type=\"text\"\r\n                />\r\n              </Tooltip>\r\n            </Modal>\r\n            <Modal key={record.id + \"edit\"}>\r\n              <EditModal\r\n                accessControls={record?.accessControls}\r\n                record={record}\r\n                allowedWithOneWayGitSync={false}\r\n              />\r\n            </Modal>\r\n            <EditorButton\r\n              allowedWithOneWayGitSync={false}\r\n              accessControls={record?.accessControls}\r\n              to={record?.fullPath}\r\n            />\r\n            <DeleteButton\r\n              allowedWithOneWayGitSync={false}\r\n              resource={{\r\n                ...record,\r\n                resourceInfo: {\r\n                  ...record?.resourceInfo,\r\n                  self: `${record?.resourceInfo?.parent}/${record?.id}`,\r\n                },\r\n              }}\r\n            />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const filterScripts = () => {\r\n    const taggedScripts = scripts?.filter((script) => tags.length === 0 || (script.tag && script.tag?.find(m => tags.find(tag => tag.name === m.name))))\r\n    return taggedScripts?.filter(script => view === 'list' || ((folder !== '' && script.fullPath.startsWith(folder)) || (folder === '' && script.fullPath.indexOf(settings?.pathDivider) === -1)));\r\n  }\r\n\r\n  const table = <Table\r\n    title=\"Scripts\"\r\n    actions={[\r\n      tags.map(tag => {\r\n        return (\r\n          <Tag color={tag.color}\r\n            closable\r\n            onClose={() => {\r\n              setTags(tags.filter(m => m.name !== tag.name));\r\n            }}>{tag.name}</Tag>\r\n        )\r\n      }),\r\n      <Modal key=\"folder-modal\">\r\n        <FolderModal parentPath={folder} type={FolderType.Script} />\r\n      </Modal>,\r\n      <Modal key=\"script-modal\">\r\n        <ScriptModal folderPath={folder} />\r\n      </Modal>,\r\n      <Select value={view} onChange={changeView} suffixIcon={<FolderViewOutlined />} key=\"view-select\">\r\n        <Option value=\"folder\">Folder</Option>\r\n        <Option value=\"list\">List</Option>\r\n      </Select>\r\n    ]}\r\n    data={filterScripts()}\r\n    columns={columns}\r\n    loading={isLoading}\r\n  />\r\n\r\n  return (\r\n    <PageHeader title=\"Scripts\" subTitle=\"PowerShell scripts that can be manually executed or scheduled.\" extra={[\r\n      <DocsButton url=\"automation/scripts\" />\r\n    ]} style={{ height: '100%' }} >\r\n      {view === \"folder\" ? (\r\n        <Split\r\n          sizes={[25, 75]}\r\n          direction=\"horizontal\"\r\n          gutterAlign=\"center\"\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            height: '100%'\r\n          }}\r\n\r\n        >\r\n          <div style={{ height: '100%' }}>\r\n            <DirectoryTree defaultExpandAll treeData={treeData} onSelect={(keys) => setFolder(keys[0].toString())} />\r\n          </div>\r\n          <div>\r\n            {table}\r\n          </div>\r\n\r\n        </Split>\r\n      ) : table}\r\n\r\n    </PageHeader >\r\n  );\r\n}\r\n"],"sourceRoot":""}
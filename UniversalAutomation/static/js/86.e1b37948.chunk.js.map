{"version":3,"sources":["components/home/home.tsx"],"names":["Home","t","useTranslation","useQuery","stats","data","isLoading","settings","useAppStore","title","subTitle","gutter","hideApi","xs","md","lg","style","marginBottom","to","prefix","value","endpoints","hideAutomation","jobsRunToday","valueStyle","color","jobsFailedToday","runningJobs","jobsWaitingOnFeedback","scheduledJobs","hideDashboard","runningDashboards","dashboardSessions","pages","computer","licensed","licensedName","licenseStatus","Date","licenseExpiration","toDateString","defaultEnvironment","apiEnvironment","securityEnvironment"],"mappings":"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","file":"static/js/86.e1b37948.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { Row, Col, Statistic, Card, Spin, Typography, PageHeader, Tooltip } from \"antd\";\r\nimport { Stats } from \"types\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\nimport { ApiOutlined, CheckOutlined, ClockCircleOutlined, CloseOutlined, ClusterOutlined, GroupOutlined, LineChartOutlined, PlayCircleOutlined, QuestionCircleOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function Home() {\r\n    const { t } = useTranslation();\r\n    const { data: stats, isLoading } = useQuery<Stats>(\"/stats\");\r\n    const { settings } = useAppStore();\r\n\r\n    if (isLoading)\r\n        return <Spin />;\r\n\r\n    return (\r\n        <PageHeader title={t('common.home')} subTitle={t('home.pageDescription')}>\r\n            <Row gutter={16}>\r\n                {settings?.hideApi ? null : (\r\n                    <Col xs={24} md={12} lg={6} style={{ marginBottom: \"10px\" }}>\r\n                        <Link to=\"/admin/apis/endpoints\">\r\n                            <Card>\r\n                                <Statistic title={t('common.endpoints')} prefix={<ApiOutlined />} value={stats.endpoints}></Statistic>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                )}\r\n                {settings?.hideAutomation ? null : (\r\n                    <>\r\n                        <Col xs={24} md={12} lg={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/jobs\">\r\n                                <Card>\r\n                                    <Statistic title={t('home.jobsRun')} prefix={<CheckOutlined />} value={stats.jobsRunToday} valueStyle={{ color: 'green' }}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={24} md={12} lg={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/jobs?state=failed\">\r\n                                <Card>\r\n                                    <Statistic title={t('home.jobsFailed')} prefix={<CloseOutlined />} value={stats.jobsFailedToday} valueStyle={{ color: 'red' }}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={24} md={12} lg={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/jobs?state=running\">\r\n                                <Card>\r\n                                    <Statistic title={t('home.jobsRunning')} prefix={<PlayCircleOutlined />} value={stats.runningJobs} valueStyle={{ color: 'blue' }}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={24} md={12} lg={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/jobs?state=waitingOnFeedback\">\r\n                                <Card>\r\n                                    <Statistic title={t('home.jobsWaiting')} prefix={<QuestionCircleOutlined />} value={stats.jobsWaitingOnFeedback} valueStyle={{ color: 'gold' }}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={24} md={12} lg={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/automation/schedules\">\r\n                                <Card>\r\n                                    <Statistic title={t('home.jobsScheduled')} prefix={<ClockCircleOutlined />} value={stats.scheduledJobs}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                    </>\r\n                )}\r\n                {settings?.hideDashboard ? null : (\r\n                    <>\r\n                        <Col xs={24} md={12} lg={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/dashboards\">\r\n                                <Card>\r\n                                    <Statistic title={t('home.dashboardsRunning')} prefix={<LineChartOutlined />} value={stats.runningDashboards}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={24} md={12} lg={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/dashboards\">\r\n                                <Card>\r\n                                    <Statistic title={t('home.dashboardSessions')} prefix={<UserOutlined />} value={stats.dashboardSessions}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={24} md={12} lg={6} style={{ marginBottom: \"10px\" }}>\r\n                            <Link to=\"/admin/pages\">\r\n                                <Card>\r\n                                    <Statistic title={t('common.pages')} prefix={<GroupOutlined />} value={stats.pages}></Statistic>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                    </>\r\n                )}\r\n                <Col xs={24} md={12} lg={6}>\r\n                    <Card>\r\n                        <Statistic title={t('common.node')} prefix={<ClusterOutlined />} value={stats.computer} ></Statistic>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={24} md={12} lg={6}>\r\n                    <Link to=\"/admin/settings/license\">\r\n                        <Card title={t('common.license')}>\r\n                            {stats.licensed ? (\r\n                                <>\r\n                                    <Typography>Licensed to: {stats.licensedName}</Typography>\r\n                                    <Typography><Tooltip title=\"You will no longer receive updates or support but can still use the product\">License Expires: {stats.licenseStatus || new Date(stats.licenseExpiration).toDateString()}</Tooltip></Typography>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Typography><CloseOutlined /> Not Licensed</Typography>\r\n                                </>\r\n\r\n                            )}\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n                <Col xs={24} md={12} lg={6}>\r\n                    <Link to=\"/admin/settings/environments\">\r\n                        <Card title={t('common.environments')}>\r\n                            <Typography>Default Environment: {stats.defaultEnvironment}</Typography>\r\n                            <Typography>API Environment: {stats.apiEnvironment}</Typography>\r\n                            <Typography>Security Environment: {stats.securityEnvironment}</Typography>\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </PageHeader>\r\n    )\r\n}\r\n"],"sourceRoot":""}
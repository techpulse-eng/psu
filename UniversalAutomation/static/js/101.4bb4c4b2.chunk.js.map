{"version":3,"sources":["components/scripts/components/ScriptSettings.tsx"],"names":["ScriptSettings","normalizedRecord","useNormalizeData","AntForm","useForm","form","fullPath","useParams","useMutation","mutateAsync","saving","isLoading","useQuery","enabled","refetchOnMount","refetchOnWindowFocus","script","data","a","validateFields","values","key","resourceInfo","parent","action","onSuccess","rest","message","success","queryClient","refetchQueries","exact","stale","schemaName","name","inEditMode","defaultValues","requiredAccessControls","AccessControlTypes","Edit","requiredRoles","accessControls","loading","type","onClick"],"mappings":"uWASe,SAASA,IACtB,IAAMC,EAAmBC,cADc,EAExBC,IAAQC,UAAhBC,EAFgC,oBAGjCC,EAAWC,cAAY,KAHU,EAIIC,cAAnCC,EAJ+B,EAI/BA,YAAwBC,EAJO,EAIlBC,UAJkB,EAKHC,YAAQ,kBAAoBN,GAAY,CAC1EO,UAAWP,EACXQ,eAAgB,SAChBC,sBAAsB,IAHVC,EALyB,EAK/BC,KAAcN,EALiB,EAKjBA,UALiB,4CAWvC,8BAAAO,EAAA,sEACuBb,EAAKc,iBAD5B,cACQC,EADR,gBAEQX,EAAY,aAEdY,IAAG,OAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAQM,oBAAV,aAAE,EAAsBC,OAC3BC,OAAQ,UACLvB,EAAiB,2BAAKe,GAAWI,KAEtC,CACEK,UAAW,SAACR,EAAD,GAAoC,EAA3BI,IAA2B,EAAtBG,OAAuB,IAAZE,EAAW,gCAC7CC,IAAQC,QAAQ,iBAChBC,IAAYC,eAAZ,8BAA2CJ,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAMpB,UAAY,CAC3DyB,OAAO,EACPC,OAAO,OAbjB,4CAXuC,sBA+BvC,OAAIrB,EACK,cAAC,IAAD,IAIP,eAAC,IAAD,CAAMsB,WAAW,SAAjB,UACE,cAAC,IAAD,CACEC,KAAK,uBACL7B,KAAMA,EACN8B,YAAY,EACZC,cAAenC,EAAiBe,KAElC,cAAC,IAAD,CAAcqB,uBAAwBC,IAAmBC,KAAMC,cAAe,CAAC,gBAAiB,YAAaC,eAAc,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAQyB,eAArI,SACE,cAAC,IAAD,CAAQC,QAAS/B,GAAaD,EAAQiC,KAAK,UAAUC,QA5CpB,2CA4CjC","file":"static/js/101.4bb4c4b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Form as AntForm, Skeleton, message } from \"antd\";\r\nimport queryClient, { useMutation } from \"components/utils/queryClient\";\r\nimport { Form, FormContentBase, SubmitButton } from \"components/ui/Form/Form\";\r\nimport { AccessControlTypes, Script } from \"types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query3\";\r\nimport useNormalizeData from \"components/utils/normalizedRecord\";\r\n\r\nexport default function ScriptSettings() {\r\n  const normalizedRecord = useNormalizeData();\r\n  const [form] = AntForm.useForm();\r\n  const fullPath = useParams()[\"*\"];\r\n  const { mutateAsync, isLoading: saving } = useMutation<Script>();\r\n  const { data: script, isLoading } = useQuery<Script>(`/script/${fullPath}`, {\r\n    enabled: !!fullPath,\r\n    refetchOnMount: 'always',\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  async function onClick() {\r\n    const values = await form.validateFields();\r\n    await mutateAsync(\r\n      {\r\n        key: script?.resourceInfo?.parent,\r\n        action: \"update\",\r\n        ...normalizedRecord({ ...script, ...values }),\r\n      },\r\n      {\r\n        onSuccess: (data, { key, action, ...rest }) => {\r\n          message.success(\"Changes saved\");\r\n          queryClient.refetchQueries(`/script/path/${rest?.fullPath}`, {\r\n            exact: true,\r\n            stale: true,\r\n          });\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <Skeleton />\r\n  }\r\n\r\n  return (\r\n    <Form schemaName=\"script\">\r\n      <FormContentBase\r\n        name=\"script_settings_form\"\r\n        form={form}\r\n        inEditMode={true}\r\n        defaultValues={normalizedRecord(script)}\r\n      />\r\n      <SubmitButton requiredAccessControls={AccessControlTypes.Edit} requiredRoles={[\"Administrator\", \"Operator\"]} accessControls={script?.accessControls}>\r\n        <Button loading={isLoading || saving} type=\"primary\" onClick={onClick}>\r\n          Save Settings\r\n        </Button>\r\n      </SubmitButton>\r\n    </Form>\r\n  );\r\n}\r\n"],"sourceRoot":""}
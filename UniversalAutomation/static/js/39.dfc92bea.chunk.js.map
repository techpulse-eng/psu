{"version":3,"sources":["components/settings/NewEnvironmentModal.tsx","components/settings/environments.tsx","components/ui/BuyLicenseAlertBox.tsx","components/ui/EditModal.tsx"],"names":["EnvironmentModal","useModalContext","onOk","form","Modal","requiredRoles","requiredAccessControls","AccessControlTypes","Create","allowedWithOneWayGitSync","children","title","onClickOk","formName","Form","schemaName","name","preserve","Environments","useQuery","enabled","refetchOnWindowFocus","environments","data","isLoading","refetch","columns","key","dataIndex","width","render","text","record","EditModal","DeleteButton","resource","subTitle","extra","url","Table","actions","loading","queryFn","BuyLicenseAlertBox","type","message","align","style","justifyContent","Link","href","target","props","getButtonProps","useActionButton","normalizedRecord","useNormalizeData","licensed","useAppStore","Edit","accessControls","action","resourceInfo","self","parent","inEditMode","defaultValues","Feature","Dashboard"],"mappings":"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","file":"static/js/39.dfc92bea.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { Form, FormContentBase } from \"components/ui/Form/Form\";\r\nimport {\r\n  ModalContent,\r\n  ModalOpenButton,\r\n  useModalContext,\r\n} from \"components/ui/Modal\";\r\nimport { Environment, AccessControlTypes } from \"types\";\r\n\r\nexport default function EnvironmentModal() {\r\n  const { onOk, form } = useModalContext();\r\n\r\n  function handleOk() {\r\n    onOk(\"/environment\", \"create\", {} as Environment);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\"]} requiredAccessControls={AccessControlTypes.Create} allowedWithOneWayGitSync={false}>\r\n        <Button children=\"Create New Environment\" />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"Create new environment\" onClickOk={handleOk} formName=\"create_environment_form\">\r\n        <Form schemaName=\"environment\">\r\n          <FormContentBase\r\n            name=\"create_environment_form\"\r\n            form={form}\r\n            preserve={false}\r\n          />\r\n        </Form>\r\n      </ModalContent>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { CustomColumns, Environment } from \"../../types\";\r\nimport { useQuery } from \"react-query3\";\r\nimport { PageHeader, Space } from \"antd\";\r\nimport { Modal } from \"components/ui/Modal\";\r\n\r\nimport Table from \"components/ui/Table\";\r\nimport EditModal from \"components/ui/EditModal\";\r\nimport DeleteButton from \"components/ui/DeleteButton\";\r\nimport EnvironmentModal from \"./NewEnvironmentModal\"\r\nimport DocsButton from \"components/docsButton\";\r\n\r\nexport default function Environments() {\r\n  const { data: environments, isLoading, refetch } = useQuery<Environment[]>(\r\n    \"/environment\",\r\n    {\r\n      enabled: false,\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  const columns: CustomColumns<Environment>[] = [\r\n    {\r\n      key: \"name\",\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      key: \"version\",\r\n      title: \"Version\",\r\n      dataIndex: \"version\",\r\n      width: \"10%\",\r\n    },\r\n    {\r\n      key: \"path\",\r\n      title: \"Path\",\r\n      dataIndex: \"path\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      key: \"arguments\",\r\n      title: \"Arguments\",\r\n      width: \"25%\",\r\n      dataIndex: \"arguments\",\r\n    },\r\n    {\r\n      width: \"fit-content\",\r\n      dataIndex: \"actions\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            <Modal>\r\n              <EditModal record={record} allowedWithOneWayGitSync={false} />\r\n            </Modal>\r\n            <DeleteButton resource={record} allowedWithOneWayGitSync={false} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageHeader title=\"Environments\" subTitle=\"Execution environments for PowerShell scripts within Universal.\" extra={[\r\n      <DocsButton url=\"config/environments\" />\r\n    ]}>\r\n      <Table\r\n        title=\"Environments\"\r\n        actions={[\r\n          <Modal>\r\n            <EnvironmentModal />\r\n          </Modal>\r\n        ]}\r\n        data={environments}\r\n        columns={columns}\r\n        loading={isLoading}\r\n        queryFn={refetch}\r\n      />\r\n    </PageHeader>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Alert, Space, Typography } from \"antd\";\r\n\r\nexport default function BuyLicenseAlertBox() {\r\n  return (\r\n    <Alert\r\n      type=\"info\"\r\n      message={\r\n        <Space\r\n          align=\"center\"\r\n          style={{ width: \"100%\", justifyContent: \"space-between\" }}\r\n        >\r\n          Authentication requires a license.\r\n          <Typography.Link\r\n            href=\"https://ironmansoftware.com/powershell-universal/?rel=product\"\r\n            target=\"_blank\"\r\n          >\r\n            Buy License.\r\n          </Typography.Link>\r\n        </Space>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { AccessControlTypes, Feature, PSUTypes, RoleGuardProps } from \"types\";\r\nimport { Button, ButtonProps } from \"antd\";\r\nimport { Form, FormContentBase } from \"./Form/Form\";\r\nimport { useActionButton } from \"components/utils/hooks/useActionButton\";\r\nimport { useModalContext, ModalOpenButton, ModalContent } from \"./Modal\";\r\nimport useNormalizeData from \"components/utils/normalizedRecord\";\r\nimport BuyLicenseAlertBox from \"./BuyLicenseAlertBox\";\r\nimport useAppStore from \"components/context/app/Hooks\";\r\n\r\n\r\ntype EditModalProps = {\r\n  action?: string;\r\n  record: PSUTypes;\r\n  schemaName?: string | undefined;\r\n  accessControl?: AccessControlTypes;\r\n  allowedWithOneWayGitSync: boolean;\r\n} & Omit<ButtonProps, \"resource\"> &\r\n  Omit<RoleGuardProps, \"children\">;\r\n\r\nexport default function EditModal({\r\n  record,\r\n  schemaName,\r\n  allowedWithOneWayGitSync,\r\n  ...props\r\n}: EditModalProps) {\r\n  const { getButtonProps } = useActionButton();\r\n  const normalizedRecord = useNormalizeData();\r\n  const { onOk, form } = useModalContext();\r\n  const { licensed } = useAppStore()\r\n\r\n  function handleOk() {\r\n\r\n    let key = record?.resourceInfo?.schemaName === \"tag\" ||\r\n      record?.resourceInfo?.schemaName === \"role\" ||\r\n      record?.resourceInfo?.schemaName === \"endpoint\" ||\r\n      record?.resourceInfo?.schemaName === \"ratelimit\" ||\r\n      record?.resourceInfo?.schemaName === \"dashboard\" ||\r\n      record?.resourceInfo?.schemaName === \"schedule\" ||\r\n      record?.resourceInfo?.schemaName === \"publishedfolder\"\r\n      ? record?.resourceInfo?.self\r\n      : record?.resourceInfo?.parent\r\n\r\n    if (record?.resourceInfo?.schemaName === \"page\") {\r\n      key = record?.resourceInfo?.self + \"?ignoreContent=true\"\r\n    }\r\n\r\n    onOk(key,\r\n      \"update\",\r\n      record\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ModalOpenButton requiredRoles={[\"Administrator\", \"Operator\"]} requiredAccessControls={AccessControlTypes.Edit} accessControls={props.accessControls} allowedWithOneWayGitSync={allowedWithOneWayGitSync}>\r\n        <Button\r\n          {...props}\r\n          {...getButtonProps({ action: \"edit\" })}\r\n          action=\"edit\"\r\n        />\r\n      </ModalOpenButton>\r\n      <ModalContent title=\"Edit Resource\" onClickOk={handleOk}>\r\n        <Form schemaName={schemaName || record?.resourceInfo?.schemaName}>\r\n          <FormContentBase\r\n            name=\"edit_form\"\r\n            form={form}\r\n            inEditMode={true}\r\n            preserve={false}\r\n            defaultValues={normalizedRecord(record)}\r\n          />\r\n        </Form>\r\n        {!licensed(Feature.Dashboard) && <BuyLicenseAlertBox />}\r\n      </ModalContent>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}